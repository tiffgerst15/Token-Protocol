{"abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [], "name": "Error_Unauthorized", "type": "error"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "poolAddress", "type": "address"}, {"indexed": false, "internalType": "address", "name": "tokenAddress", "type": "address"}], "name": "ReservePoolDeployed", "type": "event"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "PoolToConcentration", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "PoolToToken", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_tokenPool", "type": "address"}, {"internalType": "address", "name": "_token", "type": "address"}, {"internalType": "uint256", "name": "concentration", "type": "uint256"}], "name": "addTokenPool", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "checkDeposit", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "checkWithdraw", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "factory", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "address", "name": "pool", "type": "address"}, {"internalType": "uint256", "name": "amt", "type": "uint256"}], "internalType": "struct Registry.Rebalancing[]", "name": "_rebalance", "type": "tuple[]"}], "name": "findMax", "outputs": [{"components": [{"internalType": "address", "name": "pool", "type": "address"}, {"internalType": "uint256", "name": "amt", "type": "uint256"}], "internalType": "struct Registry.Rebalancing", "name": "", "type": "tuple"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "address", "name": "pool", "type": "address"}], "name": "getConcentration", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "pool", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "getNewConcentration", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getTotalAUMinUSD", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "liquidityCheck", "outputs": [{"components": [{"internalType": "address", "name": "pool", "type": "address"}, {"internalType": "uint256", "name": "amt", "type": "uint256"}], "internalType": "struct Registry.Rebalancing[]", "name": "", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_factory", "type": "address"}], "name": "setFactory", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pool", "type": "address"}, {"internalType": "uint256", "name": "_target", "type": "uint256"}], "name": "setTargetConcentration", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "tokenPools", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "tokenToPool", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "tokensToWithdraw", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}, {"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"11": "interfaces/ITokenPool.sol", "5": "contracts/Registry.sol"}, "ast": {"absolutePath": "contracts/Registry.sol", "exportedSymbols": {"AggregatorV3Interface": [2710], "IERC20": [2051], "ITokenPool": [2078], "Registry": [680], "TokenPool": [882]}, "id": 681, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "0.8", ".12"], "nodeType": "PragmaDirective", "src": "31:23:5"}, {"absolutePath": "/Users/tiffanygerstmeyr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 681, "sourceUnit": 2052, "src": "56:56:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/ITokenPool.sol", "file": "../interfaces/ITokenPool.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 681, "sourceUnit": 2079, "src": "113:38:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/TokenPool.sol", "file": "./TokenPool.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 681, "sourceUnit": 883, "src": "152:25:5", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "Registry", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 680, "linearizedBaseContracts": [680], "name": "Registry", "nameLocation": "188:8:5", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "8da5cb5b", "id": 6, "mutability": "mutable", "name": "owner", "nameLocation": "226:5:5", "nodeType": "VariableDeclaration", "scope": 680, "src": "211:20:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5, "name": "address", "nodeType": "ElementaryTypeName", "src": "211:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "00c0f916", "id": 9, "mutability": "mutable", "name": "tokenPools", "nameLocation": "250:10:5", "nodeType": "VariableDeclaration", "scope": 680, "src": "233:27:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[]"}, "typeName": {"baseType": {"id": 7, "name": "address", "nodeType": "ElementaryTypeName", "src": "233:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 8, "nodeType": "ArrayTypeName", "src": "233:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "public"}, {"constant": false, "functionSelector": "c45a0155", "id": 11, "mutability": "mutable", "name": "factory", "nameLocation": "277:7:5", "nodeType": "VariableDeclaration", "scope": 680, "src": "262:22:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 10, "name": "address", "nodeType": "ElementaryTypeName", "src": "262:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "989796b5", "id": 15, "mutability": "mutable", "name": "tokenToPool", "nameLocation": "323:11:5", "nodeType": "VariableDeclaration", "scope": 680, "src": "287:47:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "typeName": {"id": 14, "keyType": {"id": 12, "name": "address", "nodeType": "ElementaryTypeName", "src": "296:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "287:28:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "valueType": {"id": 13, "name": "address", "nodeType": "ElementaryTypeName", "src": "307:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "ac73b1bb", "id": 19, "mutability": "mutable", "name": "PoolToToken", "nameLocation": "372:11:5", "nodeType": "VariableDeclaration", "scope": 680, "src": "336:47:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "typeName": {"id": 18, "keyType": {"id": 16, "name": "address", "nodeType": "ElementaryTypeName", "src": "345:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "336:28:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "valueType": {"id": 17, "name": "address", "nodeType": "ElementaryTypeName", "src": "356:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "675c7c71", "id": 23, "mutability": "mutable", "name": "PoolToConcentration", "nameLocation": "421:19:5", "nodeType": "VariableDeclaration", "scope": 680, "src": "385:55:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 22, "keyType": {"id": 20, "name": "address", "nodeType": "ElementaryTypeName", "src": "394:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "385:28:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 21, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "405:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": true, "id": 26, "mutability": "constant", "name": "PRECISION", "nameLocation": "459:9:5", "nodeType": "VariableDeclaration", "scope": 680, "src": "442:32:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "442:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "316536", "id": 25, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "471:3:5", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1e6"}, "visibility": "internal"}, {"canonicalName": "Registry.Rebalancing", "id": 31, "members": [{"constant": false, "id": 28, "mutability": "mutable", "name": "pool", "nameLocation": "521:4:5", "nodeType": "VariableDeclaration", "scope": 31, "src": "513:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 27, "name": "address", "nodeType": "ElementaryTypeName", "src": "513:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 30, "mutability": "mutable", "name": "amt", "nameLocation": "539:3:5", "nodeType": "VariableDeclaration", "scope": 31, "src": "531:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 29, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "531:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "Rebalancing", "nameLocation": "495:11:5", "nodeType": "StructDefinition", "scope": 680, "src": "488:57:5", "visibility": "public"}, {"id": 33, "name": "Error_Unauthorized", "nameLocation": "562:18:5", "nodeType": "ErrorDefinition", "parameters": {"id": 32, "nodeType": "ParameterList", "parameters": [], "src": "580:2:5"}, "src": "556:27:5"}, {"anonymous": false, "id": 39, "name": "ReservePoolDeployed", "nameLocation": "600:19:5", "nodeType": "EventDefinition", "parameters": {"id": 38, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 35, "indexed": true, "mutability": "mutable", "name": "poolAddress", "nameLocation": "645:11:5", "nodeType": "VariableDeclaration", "scope": 39, "src": "629:27:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 34, "name": "address", "nodeType": "ElementaryTypeName", "src": "629:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 37, "indexed": false, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "674:12:5", "nodeType": "VariableDeclaration", "scope": 39, "src": "666:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 36, "name": "address", "nodeType": "ElementaryTypeName", "src": "666:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "619:73:5"}, "src": "594:99:5"}, {"body": {"id": 51, "nodeType": "Block", "src": "727:104:5", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 44, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 41, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "741:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 42, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "741:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 43, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "755:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "741:19:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 49, "nodeType": "IfStatement", "src": "737:77:5", "trueBody": {"id": 48, "nodeType": "Block", "src": "762:52:5", "statements": [{"errorCall": {"arguments": [], "expression": {"argumentTypes": [], "id": 45, "name": "Error_Unauthorized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "783:18:5", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 46, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "783:20:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 47, "nodeType": "RevertStatement", "src": "776:27:5"}]}}, {"id": 50, "nodeType": "PlaceholderStatement", "src": "823:1:5"}]}, "id": 52, "name": "onlyOwner", "nameLocation": "715:9:5", "nodeType": "ModifierDefinition", "parameters": {"id": 40, "nodeType": "ParameterList", "parameters": [], "src": "724:2:5"}, "src": "706:125:5", "virtual": false, "visibility": "internal"}, {"body": {"id": 60, "nodeType": "Block", "src": "863:34:5", "statements": [{"expression": {"id": 58, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 55, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "872:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 56, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "880:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 57, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "880:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "872:18:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 59, "nodeType": "ExpressionStatement", "src": "872:18:5"}]}, "id": 61, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 53, "nodeType": "ParameterList", "parameters": [], "src": "861:2:5"}, "returnParameters": {"id": 54, "nodeType": "ParameterList", "parameters": [], "src": "863:0:5"}, "scope": 680, "src": "850:47:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 73, "nodeType": "Block", "src": "1050:35:5", "statements": [{"expression": {"id": 71, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 69, "name": "factory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11, "src": "1060:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 70, "name": "_factory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 64, "src": "1070:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1060:18:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 72, "nodeType": "ExpressionStatement", "src": "1060:18:5"}]}, "documentation": {"id": 62, "nodeType": "StructuredDocumentation", "src": "899:89:5", "text": "@dev function to set the factory address\n@param _factory (address of the factory)"}, "functionSelector": "5bb47808", "id": 74, "implemented": true, "kind": "function", "modifiers": [{"id": 67, "kind": "modifierInvocation", "modifierName": {"id": 66, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 52, "src": "1040:9:5"}, "nodeType": "ModifierInvocation", "src": "1040:9:5"}], "name": "setFactory", "nameLocation": "1002:10:5", "nodeType": "FunctionDefinition", "parameters": {"id": 65, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 64, "mutability": "mutable", "name": "_factory", "nameLocation": "1021:8:5", "nodeType": "VariableDeclaration", "scope": 74, "src": "1013:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 63, "name": "address", "nodeType": "ElementaryTypeName", "src": "1013:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1012:18:5"}, "returnParameters": {"id": 68, "nodeType": "ParameterList", "parameters": [], "src": "1050:0:5"}, "scope": 680, "src": "993:92:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 116, "nodeType": "Block", "src": "1386:265:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 88, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 85, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1404:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1404:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 87, "name": "factory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11, "src": "1418:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1404:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c792074686520666163746f72792063616e2061646420746f6b656e20706f6f6c73", "id": 89, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1427:38:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0fd783395e005ed1d5668aea435d26f168fbe684afaf10e86099e0b23f82f1ba", "typeString": "literal_string \"Only the factory can add token pools\""}, "value": "Only the factory can add token pools"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0fd783395e005ed1d5668aea435d26f168fbe684afaf10e86099e0b23f82f1ba", "typeString": "literal_string \"Only the factory can add token pools\""}], "id": 84, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1396:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 90, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1396:70:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 91, "nodeType": "ExpressionStatement", "src": "1396:70:5"}, {"expression": {"arguments": [{"id": 95, "name": "_tokenPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "1492:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 92, "name": "tokenPools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "1476:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 94, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "1476:15:5", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$", "typeString": "function (address[] storage pointer,address)"}}, "id": 96, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1476:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 97, "nodeType": "ExpressionStatement", "src": "1476:27:5"}, {"expression": {"id": 102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 98, "name": "tokenToPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "1513:11:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 100, "indexExpression": {"id": 99, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 79, "src": "1525:6:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1513:19:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 101, "name": "_tokenPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "1535:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1513:32:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 103, "nodeType": "ExpressionStatement", "src": "1513:32:5"}, {"expression": {"id": 108, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 104, "name": "PoolToToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "1555:11:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 106, "indexExpression": {"id": 105, "name": "_tokenPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "1567:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1555:23:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 107, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 79, "src": "1581:6:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1555:32:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 109, "nodeType": "ExpressionStatement", "src": "1555:32:5"}, {"expression": {"id": 114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 110, "name": "PoolToConcentration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "1597:19:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 112, "indexExpression": {"id": 111, "name": "_tokenPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "1617:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1597:31:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 113, "name": "concentration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 81, "src": "1631:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1597:47:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 115, "nodeType": "ExpressionStatement", "src": "1597:47:5"}]}, "documentation": {"id": 75, "nodeType": "StructuredDocumentation", "src": "1087:206:5", "text": "@dev function to add TokenPool to tokenPool array and various mappings\n@param _tokenPool - address of tokenPool\n@param _token - address of token\n@param concentration - value of target concentration "}, "functionSelector": "9b765339", "id": 117, "implemented": true, "kind": "function", "modifiers": [], "name": "addTokenPool", "nameLocation": "1307:12:5", "nodeType": "FunctionDefinition", "parameters": {"id": 82, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 77, "mutability": "mutable", "name": "_tokenPool", "nameLocation": "1328:10:5", "nodeType": "VariableDeclaration", "scope": 117, "src": "1320:18:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 76, "name": "address", "nodeType": "ElementaryTypeName", "src": "1320:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 79, "mutability": "mutable", "name": "_token", "nameLocation": "1348:6:5", "nodeType": "VariableDeclaration", "scope": 117, "src": "1340:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 78, "name": "address", "nodeType": "ElementaryTypeName", "src": "1340:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 81, "mutability": "mutable", "name": "concentration", "nameLocation": "1364:13:5", "nodeType": "VariableDeclaration", "scope": 117, "src": "1356:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 80, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1356:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1319:59:5"}, "returnParameters": {"id": 83, "nodeType": "ParameterList", "parameters": [], "src": "1386:0:5"}, "scope": 680, "src": "1298:353:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 133, "nodeType": "Block", "src": "1921:53:5", "statements": [{"expression": {"id": 131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 127, "name": "PoolToConcentration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "1931:19:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 129, "indexExpression": {"id": 128, "name": "_pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 120, "src": "1951:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1931:26:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 130, "name": "_target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 122, "src": "1960:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1931:36:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 132, "nodeType": "ExpressionStatement", "src": "1931:36:5"}]}, "documentation": {"id": 118, "nodeType": "StructuredDocumentation", "src": "1653:160:5", "text": "@dev function to update the target concentration of a specific pool \n@param _pool - address of tokenPool\n@param _target - value of target concentration"}, "functionSelector": "d04238ee", "id": 134, "implemented": true, "kind": "function", "modifiers": [{"id": 125, "kind": "modifierInvocation", "modifierName": {"id": 124, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 52, "src": "1907:9:5"}, "nodeType": "ModifierInvocation", "src": "1907:9:5"}], "name": "setTargetConcentration", "nameLocation": "1827:22:5", "nodeType": "FunctionDefinition", "parameters": {"id": 123, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 120, "mutability": "mutable", "name": "_pool", "nameLocation": "1858:5:5", "nodeType": "VariableDeclaration", "scope": 134, "src": "1850:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 119, "name": "address", "nodeType": "ElementaryTypeName", "src": "1850:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 122, "mutability": "mutable", "name": "_target", "nameLocation": "1873:7:5", "nodeType": "VariableDeclaration", "scope": 134, "src": "1865:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 121, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1865:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1849:32:5"}, "returnParameters": {"id": 126, "nodeType": "ParameterList", "parameters": [], "src": "1921:0:5"}, "scope": 680, "src": "1818:156:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 182, "nodeType": "Block", "src": "2205:317:5", "statements": [{"assignments": [141], "declarations": [{"constant": false, "id": 141, "mutability": "mutable", "name": "total", "nameLocation": "2223:5:5", "nodeType": "VariableDeclaration", "scope": 182, "src": "2215:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 140, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2215:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 143, "initialValue": {"hexValue": "30", "id": 142, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2231:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2215:17:5"}, {"assignments": [145], "declarations": [{"constant": false, "id": 145, "mutability": "mutable", "name": "len", "nameLocation": "2250:3:5", "nodeType": "VariableDeclaration", "scope": 182, "src": "2242:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 144, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2242:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 148, "initialValue": {"expression": {"id": 146, "name": "tokenPools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "2256:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2256:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2242:31:5"}, {"body": {"id": 178, "nodeType": "Block", "src": "2310:184:5", "statements": [{"assignments": [157], "declarations": [{"constant": false, "id": 157, "mutability": "mutable", "name": "pool", "nameLocation": "2332:4:5", "nodeType": "VariableDeclaration", "scope": 178, "src": "2324:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 156, "name": "address", "nodeType": "ElementaryTypeName", "src": "2324:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 161, "initialValue": {"baseExpression": {"id": 158, "name": "tokenPools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "2339:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 160, "indexExpression": {"id": 159, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 150, "src": "2350:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2339:13:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "2324:28:5"}, {"assignments": [163], "declarations": [{"constant": false, "id": 163, "mutability": "mutable", "name": "poolBalance", "nameLocation": "2376:11:5", "nodeType": "VariableDeclaration", "scope": 178, "src": "2368:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 162, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2368:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 169, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 165, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "2401:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 164, "name": "ITokenPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2078, "src": "2390:10:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ITokenPool_$2078_$", "typeString": "type(contract ITokenPool)"}}, "id": 166, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2390:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ITokenPool_$2078", "typeString": "contract ITokenPool"}}, "id": 167, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolValue", "nodeType": "MemberAccess", "referencedDeclaration": 2058, "src": "2390:29:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 168, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2390:31:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2368:53:5"}, {"expression": {"id": 172, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 170, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 141, "src": "2435:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 171, "name": "poolBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 163, "src": "2444:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2435:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 173, "nodeType": "ExpressionStatement", "src": "2435:20:5"}, {"id": 177, "nodeType": "UncheckedBlock", "src": "2469:15:5", "statements": [{"expression": {"id": 175, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "2479:3:5", "subExpression": {"id": 174, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 150, "src": "2481:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 176, "nodeType": "ExpressionStatement", "src": "2479:3:5"}]}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 153, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 150, "src": "2300:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 154, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 145, "src": "2304:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2300:7:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 179, "initializationExpression": {"assignments": [150], "declarations": [{"constant": false, "id": 150, "mutability": "mutable", "name": "i", "nameLocation": "2293:1:5", "nodeType": "VariableDeclaration", "scope": 179, "src": "2288:6:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 149, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2288:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 152, "initialValue": {"hexValue": "30", "id": 151, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2297:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2288:10:5"}, "nodeType": "ForStatement", "src": "2283:211:5"}, {"expression": {"id": 180, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 141, "src": "2510:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 139, "id": 181, "nodeType": "Return", "src": "2503:12:5"}]}, "documentation": {"id": 135, "nodeType": "StructuredDocumentation", "src": "1976:165:5", "text": "@dev function to get the total USD value of all assets in the protocol\niterates through all the pools to get their usd value and adds all the values together"}, "functionSelector": "bccc01ba", "id": 183, "implemented": true, "kind": "function", "modifiers": [], "name": "getTotalAUMinUSD", "nameLocation": "2156:16:5", "nodeType": "FunctionDefinition", "parameters": {"id": 136, "nodeType": "ParameterList", "parameters": [], "src": "2172:2:5"}, "returnParameters": {"id": 139, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 138, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 183, "src": "2196:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 137, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2196:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2195:9:5"}, "scope": 680, "src": "2147:375:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 211, "nodeType": "Block", "src": "2773:127:5", "statements": [{"assignments": [199, 202], "declarations": [{"constant": false, "id": 199, "mutability": "mutable", "name": "pools", "nameLocation": "2801:5:5", "nodeType": "VariableDeclaration", "scope": 211, "src": "2784:22:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 197, "name": "address", "nodeType": "ElementaryTypeName", "src": "2784:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 198, "nodeType": "ArrayTypeName", "src": "2784:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 202, "mutability": "mutable", "name": "tokenAmt", "nameLocation": "2825:8:5", "nodeType": "VariableDeclaration", "scope": 211, "src": "2808:25:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 200, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2808:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 201, "nodeType": "ArrayTypeName", "src": "2808:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 206, "initialValue": {"arguments": [{"id": 204, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 186, "src": "2851:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 203, "name": "checkWithdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "2837:13:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) view returns (address[] memory,uint256[] memory)"}}, "id": 205, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2837:22:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(address[] memory,uint256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "2783:76:5"}, {"expression": {"components": [{"id": 207, "name": "pools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 199, "src": "2877:5:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, {"id": 208, "name": "tokenAmt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 202, "src": "2884:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 209, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2876:17:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(address[] memory,uint256[] memory)"}}, "functionReturnParameters": 194, "id": 210, "nodeType": "Return", "src": "2869:24:5"}]}, "documentation": {"id": 184, "nodeType": "StructuredDocumentation", "src": "2524:145:5", "text": "@dev function to get the pools to withdraw from and the amount to withdraw from each pool\n@param _amount - amount in usd to be withdrawn"}, "functionSelector": "3f41addd", "id": 212, "implemented": true, "kind": "function", "modifiers": [], "name": "tokensToWithdraw", "nameLocation": "2683:16:5", "nodeType": "FunctionDefinition", "parameters": {"id": 187, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 186, "mutability": "mutable", "name": "_amount", "nameLocation": "2708:7:5", "nodeType": "VariableDeclaration", "scope": 212, "src": "2700:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 185, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2700:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2699:17:5"}, "returnParameters": {"id": 194, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 190, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 212, "src": "2738:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 188, "name": "address", "nodeType": "ElementaryTypeName", "src": "2738:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 189, "nodeType": "ArrayTypeName", "src": "2738:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 193, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 212, "src": "2756:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 191, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2756:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 192, "nodeType": "ArrayTypeName", "src": "2756:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "2737:36:5"}, "scope": 680, "src": "2674:226:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 325, "nodeType": "Block", "src": "3320:788:5", "statements": [{"assignments": [223], "declarations": [{"constant": false, "id": 223, "mutability": "mutable", "name": "len", "nameLocation": "3335:3:5", "nodeType": "VariableDeclaration", "scope": 325, "src": "3330:8:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 222, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3330:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 226, "initialValue": {"expression": {"id": 224, "name": "tokenPools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "3341:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3341:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3330:28:5"}, {"assignments": [231], "declarations": [{"constant": false, "id": 231, "mutability": "mutable", "name": "withdraw", "nameLocation": "3389:8:5", "nodeType": "VariableDeclaration", "scope": 325, "src": "3368:29:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing[]"}, "typeName": {"baseType": {"id": 229, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 228, "name": "Rebalancing", "nodeType": "IdentifierPath", "referencedDeclaration": 31, "src": "3368:11:5"}, "referencedDeclaration": 31, "src": "3368:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr", "typeString": "struct Registry.Rebalancing"}}, "id": 230, "nodeType": "ArrayTypeName", "src": "3368:13:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr", "typeString": "struct Registry.Rebalancing[]"}}, "visibility": "internal"}], "id": 238, "initialValue": {"arguments": [{"id": 236, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "3418:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 235, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "3400:17:5", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct Registry.Rebalancing memory[] memory)"}, "typeName": {"baseType": {"id": 233, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 232, "name": "Rebalancing", "nodeType": "IdentifierPath", "referencedDeclaration": 31, "src": "3404:11:5"}, "referencedDeclaration": 31, "src": "3404:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr", "typeString": "struct Registry.Rebalancing"}}, "id": 234, "nodeType": "ArrayTypeName", "src": "3404:13:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr", "typeString": "struct Registry.Rebalancing[]"}}}, "id": 237, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3400:22:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "3368:54:5"}, {"assignments": [240], "declarations": [{"constant": false, "id": 240, "mutability": "mutable", "name": "aum", "nameLocation": "3437:3:5", "nodeType": "VariableDeclaration", "scope": 325, "src": "3432:8:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 239, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3432:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 243, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 241, "name": "getTotalAUMinUSD", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 183, "src": "3443:16:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 242, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3443:18:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3432:29:5"}, {"assignments": [245], "declarations": [{"constant": false, "id": 245, "mutability": "mutable", "name": "newAUM", "nameLocation": "3476:6:5", "nodeType": "VariableDeclaration", "scope": 325, "src": "3471:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 244, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3471:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 249, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 248, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 246, "name": "aum", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 240, "src": "3485:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 247, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 215, "src": "3491:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3485:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3471:27:5"}, {"body": {"id": 321, "nodeType": "Block", "src": "3535:538:5", "statements": [{"assignments": [258], "declarations": [{"constant": false, "id": 258, "mutability": "mutable", "name": "pool", "nameLocation": "3557:4:5", "nodeType": "VariableDeclaration", "scope": 321, "src": "3549:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 257, "name": "address", "nodeType": "ElementaryTypeName", "src": "3549:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 262, "initialValue": {"baseExpression": {"id": 259, "name": "tokenPools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "3564:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 261, "indexExpression": {"id": 260, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 251, "src": "3575:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3564:13:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "3549:28:5"}, {"assignments": [264], "declarations": [{"constant": false, "id": 264, "mutability": "mutable", "name": "poolBalance", "nameLocation": "3599:11:5", "nodeType": "VariableDeclaration", "scope": 321, "src": "3591:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 263, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3591:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 270, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 266, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "3624:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 265, "name": "ITokenPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2078, "src": "3613:10:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ITokenPool_$2078_$", "typeString": "type(contract ITokenPool)"}}, "id": 267, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3613:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ITokenPool_$2078", "typeString": "contract ITokenPool"}}, "id": 268, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolValue", "nodeType": "MemberAccess", "referencedDeclaration": 2058, "src": "3613:29:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 269, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3613:31:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3591:53:5"}, {"assignments": [272], "declarations": [{"constant": false, "id": 272, "mutability": "mutable", "name": "target", "nameLocation": "3666:6:5", "nodeType": "VariableDeclaration", "scope": 321, "src": "3658:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 271, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3658:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 276, "initialValue": {"baseExpression": {"id": 273, "name": "PoolToConcentration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "3675:19:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 275, "indexExpression": {"id": 274, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "3695:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3675:25:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3658:42:5"}, {"assignments": [278], "declarations": [{"constant": false, "id": 278, "mutability": "mutable", "name": "poolTarget", "nameLocation": "3722:10:5", "nodeType": "VariableDeclaration", "scope": 321, "src": "3714:18:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 277, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3714:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 284, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 283, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 279, "name": "newAUM", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 245, "src": "3735:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 280, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 272, "src": "3742:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3735:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 282, "name": "PRECISION", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "3749:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3735:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3714:44:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 287, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 285, "name": "poolBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 264, "src": "3775:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 286, "name": "poolTarget", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "3789:10:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3775:24:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 315, "nodeType": "Block", "src": "3955:80:5", "statements": [{"expression": {"id": 313, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 305, "name": "withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "3973:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "id": 307, "indexExpression": {"id": 306, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 251, "src": "3982:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3973:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"arguments": [{"id": 309, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "4005:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"hexValue": "30", "id": 310, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4016:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 308, "name": "Rebalancing", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "3986:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Rebalancing_$31_storage_ptr_$", "typeString": "type(struct Registry.Rebalancing storage pointer)"}}, "id": 311, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": ["pool", "amt"], "nodeType": "FunctionCall", "src": "3986:33:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}], "id": 312, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3985:35:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "src": "3973:47:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 314, "nodeType": "ExpressionStatement", "src": "3973:47:5"}]}, "id": 316, "nodeType": "IfStatement", "src": "3772:263:5", "trueBody": {"id": 304, "nodeType": "Block", "src": "3800:138:5", "statements": [{"assignments": [289], "declarations": [{"constant": false, "id": 289, "mutability": "mutable", "name": "amt", "nameLocation": "3826:3:5", "nodeType": "VariableDeclaration", "scope": 304, "src": "3818:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3818:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 293, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 292, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 290, "name": "poolBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 264, "src": "3832:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 291, "name": "poolTarget", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "3846:10:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3832:24:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3818:38:5"}, {"expression": {"id": 302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 294, "name": "withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "3874:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "id": 296, "indexExpression": {"id": 295, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 251, "src": "3883:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3874:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"arguments": [{"id": 298, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "3906:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 299, "name": "amt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 289, "src": "3917:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 297, "name": "Rebalancing", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "3887:11:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Rebalancing_$31_storage_ptr_$", "typeString": "type(struct Registry.Rebalancing storage pointer)"}}, "id": 300, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": ["pool", "amt"], "nodeType": "FunctionCall", "src": "3887:35:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}], "id": 301, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3886:37:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "src": "3874:49:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 303, "nodeType": "ExpressionStatement", "src": "3874:49:5"}]}}, {"id": 320, "nodeType": "UncheckedBlock", "src": "4048:15:5", "statements": [{"expression": {"id": 318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "4058:3:5", "subExpression": {"id": 317, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 251, "src": "4060:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 319, "nodeType": "ExpressionStatement", "src": "4058:3:5"}]}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 254, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 251, "src": "3525:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 255, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "3529:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3525:7:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 322, "initializationExpression": {"assignments": [251], "declarations": [{"constant": false, "id": 251, "mutability": "mutable", "name": "i", "nameLocation": "3518:1:5", "nodeType": "VariableDeclaration", "scope": 322, "src": "3513:6:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 250, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3513:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 253, "initialValue": {"hexValue": "30", "id": 252, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3522:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "3513:10:5"}, "nodeType": "ForStatement", "src": "3508:565:5"}, {"expression": {"id": 323, "name": "withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "4089:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "functionReturnParameters": 221, "id": 324, "nodeType": "Return", "src": "4082:15:5"}]}, "documentation": {"id": 213, "nodeType": "StructuredDocumentation", "src": "2903:328:5", "text": "@dev function that finds which pools need to be rebalanced through a withdraw\n@param _amount - how much usd is to be withdrawn\nCalculates new aum and how much money has to be added/removed from pool to reach the target concentration\nChecks which pool have to have money removed (and how much) and adds them to the array "}, "functionSelector": "29857fd1", "id": 326, "implemented": true, "kind": "function", "modifiers": [], "name": "liquidityCheck", "nameLocation": "3245:14:5", "nodeType": "FunctionDefinition", "parameters": {"id": 216, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 215, "mutability": "mutable", "name": "_amount", "nameLocation": "3268:7:5", "nodeType": "VariableDeclaration", "scope": 326, "src": "3260:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 214, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3260:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3259:17:5"}, "returnParameters": {"id": 221, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 220, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 326, "src": "3297:20:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing[]"}, "typeName": {"baseType": {"id": 218, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 217, "name": "Rebalancing", "nodeType": "IdentifierPath", "referencedDeclaration": 31, "src": "3297:11:5"}, "referencedDeclaration": 31, "src": "3297:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr", "typeString": "struct Registry.Rebalancing"}}, "id": 219, "nodeType": "ArrayTypeName", "src": "3297:13:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr", "typeString": "struct Registry.Rebalancing[]"}}, "visibility": "internal"}], "src": "3296:22:5"}, "scope": 680, "src": "3236:872:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 482, "nodeType": "Block", "src": "4517:850:5", "statements": [{"assignments": [342], "declarations": [{"constant": false, "id": 342, "mutability": "mutable", "name": "withdraw", "nameLocation": "4548:8:5", "nodeType": "VariableDeclaration", "scope": 482, "src": "4527:29:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing[]"}, "typeName": {"baseType": {"id": 340, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 339, "name": "Rebalancing", "nodeType": "IdentifierPath", "referencedDeclaration": 31, "src": "4527:11:5"}, "referencedDeclaration": 31, "src": "4527:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr", "typeString": "struct Registry.Rebalancing"}}, "id": 341, "nodeType": "ArrayTypeName", "src": "4527:13:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr", "typeString": "struct Registry.Rebalancing[]"}}, "visibility": "internal"}], "id": 346, "initialValue": {"arguments": [{"id": 344, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "4574:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 343, "name": "liquidityCheck", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 326, "src": "4559:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) view returns (struct Registry.Rebalancing memory[] memory)"}}, "id": 345, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4559:23:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4527:55:5"}, {"assignments": [348], "declarations": [{"constant": false, "id": 348, "mutability": "mutable", "name": "len", "nameLocation": "4600:3:5", "nodeType": "VariableDeclaration", "scope": 482, "src": "4592:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 347, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4592:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 351, "initialValue": {"expression": {"id": 349, "name": "withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 342, "src": "4606:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "id": 350, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4606:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4592:29:5"}, {"assignments": [356], "declarations": [{"constant": false, "id": 356, "mutability": "mutable", "name": "pool", "nameLocation": "4648:4:5", "nodeType": "VariableDeclaration", "scope": 482, "src": "4631:21:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 354, "name": "address", "nodeType": "ElementaryTypeName", "src": "4631:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 355, "nodeType": "ArrayTypeName", "src": "4631:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "id": 362, "initialValue": {"arguments": [{"id": 360, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 348, "src": "4669:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 359, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4655:13:5", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 357, "name": "address", "nodeType": "ElementaryTypeName", "src": "4659:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 358, "nodeType": "ArrayTypeName", "src": "4659:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 361, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4655:18:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4631:42:5"}, {"assignments": [367], "declarations": [{"constant": false, "id": 367, "mutability": "mutable", "name": "tokenamt", "nameLocation": "4697:8:5", "nodeType": "VariableDeclaration", "scope": 482, "src": "4683:22:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 365, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4683:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 366, "nodeType": "ArrayTypeName", "src": "4683:6:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 373, "initialValue": {"arguments": [{"id": 371, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 348, "src": "4719:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 370, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4708:10:5", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 368, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4712:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 369, "nodeType": "ArrayTypeName", "src": "4712:6:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 372, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4708:15:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4683:40:5"}, {"assignments": [375], "declarations": [{"constant": false, "id": 375, "mutability": "mutable", "name": "total", "nameLocation": "4738:5:5", "nodeType": "VariableDeclaration", "scope": 482, "src": "4733:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 374, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4733:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 377, "initialValue": {"hexValue": "30", "id": 376, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4746:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4733:14:5"}, {"body": {"id": 476, "nodeType": "Block", "src": "4777:551:5", "statements": [{"assignments": [386, 388], "declarations": [{"constant": false, "id": 386, "mutability": "mutable", "name": "max", "nameLocation": "4811:3:5", "nodeType": "VariableDeclaration", "scope": 476, "src": "4792:22:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing"}, "typeName": {"id": 385, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 384, "name": "Rebalancing", "nodeType": "IdentifierPath", "referencedDeclaration": 31, "src": "4792:11:5"}, "referencedDeclaration": 31, "src": "4792:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr", "typeString": "struct Registry.Rebalancing"}}, "visibility": "internal"}, {"constant": false, "id": 388, "mutability": "mutable", "name": "index", "nameLocation": "4821:5:5", "nodeType": "VariableDeclaration", "scope": 476, "src": "4816:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 387, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4816:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 392, "initialValue": {"arguments": [{"id": 390, "name": "withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 342, "src": "4838:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}], "id": 389, "name": "findMax", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 548, "src": "4830:7:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_Rebalancing_$31_memory_ptr_$_t_uint256_$", "typeString": "function (struct Registry.Rebalancing memory[] memory) pure returns (struct Registry.Rebalancing memory,uint256)"}}, "id": 391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4830:17:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Rebalancing_$31_memory_ptr_$_t_uint256_$", "typeString": "tuple(struct Registry.Rebalancing memory,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "4791:56:5"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 404, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 395, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 393, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "4866:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 394, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "4872:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4866:13:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 396, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4865:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 402, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 400, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 397, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "4883:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 398, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "4891:3:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 399, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amt", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "4891:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4883:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 401, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "4901:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4883:25:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 403, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4882:27:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4865:44:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 440, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 431, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 429, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "5072:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 430, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "5078:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5072:13:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 432, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5071:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 438, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 433, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "5089:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 434, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "5097:3:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 435, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amt", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "5097:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5089:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 437, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "5108:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5089:26:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 439, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5088:28:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5071:45:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 470, "nodeType": "IfStatement", "src": "5067:220:5", "trueBody": {"id": 469, "nodeType": "Block", "src": "5117:170:5", "statements": [{"expression": {"id": 447, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 441, "name": "tokenamt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 367, "src": "5135:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 443, "indexExpression": {"id": 442, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "5144:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5135:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"expression": {"id": 444, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "5150:3:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 445, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amt", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "5150:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 446, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5149:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5135:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 448, "nodeType": "ExpressionStatement", "src": "5135:23:5"}, {"expression": {"id": 455, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 449, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 356, "src": "5176:4:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 451, "indexExpression": {"id": 450, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "5181:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5176:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"expression": {"id": 452, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "5187:3:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 453, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pool", "nodeType": "MemberAccess", "referencedDeclaration": 28, "src": "5187:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 454, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5186:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5176:20:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 456, "nodeType": "ExpressionStatement", "src": "5176:20:5"}, {"expression": {"id": 460, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 457, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "5214:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"expression": {"id": 458, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "5223:3:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 459, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amt", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "5223:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5214:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 461, "nodeType": "ExpressionStatement", "src": "5214:16:5"}, {"expression": {"id": 467, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 462, "name": "withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 342, "src": "5249:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "id": 464, "indexExpression": {"id": 463, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "5258:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5249:15:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 465, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amt", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "5249:19:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 466, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5271:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5249:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 468, "nodeType": "ExpressionStatement", "src": "5249:23:5"}]}}, "id": 471, "nodeType": "IfStatement", "src": "4861:426:5", "trueBody": {"id": 428, "nodeType": "Block", "src": "4910:139:5", "statements": [{"expression": {"id": 412, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 405, "name": "tokenamt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 367, "src": "4928:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 407, "indexExpression": {"id": 406, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "4937:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4928:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 410, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 408, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "4942:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 409, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "4952:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4942:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 411, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4941:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4928:30:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 413, "nodeType": "ExpressionStatement", "src": "4928:30:5"}, {"expression": {"id": 420, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 414, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 356, "src": "4976:4:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 416, "indexExpression": {"id": 415, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "4981:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4976:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"components": [{"expression": {"id": 417, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "4987:3:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 418, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "pool", "nodeType": "MemberAccess", "referencedDeclaration": 28, "src": "4987:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 419, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4986:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4976:20:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 421, "nodeType": "ExpressionStatement", "src": "4976:20:5"}, {"expression": {"id": 426, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 422, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "5014:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"baseExpression": {"id": 423, "name": "tokenamt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 367, "src": "5023:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 425, "indexExpression": {"id": 424, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "5032:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5023:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5014:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 427, "nodeType": "ExpressionStatement", "src": "5014:20:5"}]}}, {"id": 475, "nodeType": "UncheckedBlock", "src": "5300:15:5", "statements": [{"expression": {"id": 473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "5310:3:5", "subExpression": {"id": 472, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "5312:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 474, "nodeType": "ExpressionStatement", "src": "5310:3:5"}]}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 383, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 381, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "4770:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 382, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 348, "src": "4772:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4770:5:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 477, "initializationExpression": {"assignments": [379], "declarations": [{"constant": false, "id": 379, "mutability": "mutable", "name": "i", "nameLocation": "4767:1:5", "nodeType": "VariableDeclaration", "scope": 477, "src": "4762:6:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 378, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4762:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 380, "nodeType": "VariableDeclarationStatement", "src": "4762:6:5"}, "nodeType": "ForStatement", "src": "4757:571:5"}, {"expression": {"components": [{"id": 478, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 356, "src": "5345:4:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, {"id": 479, "name": "tokenamt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 367, "src": "5351:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}], "id": 480, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5344:16:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(address[] memory,uint256[] memory)"}}, "functionReturnParameters": 337, "id": 481, "nodeType": "Return", "src": "5337:23:5"}]}, "documentation": {"id": 327, "nodeType": "StructuredDocumentation", "src": "4114:306:5", "text": "@dev function that takes the rebalancing array from liquidityCheck and returns the pools to withdraw from\nand how much to withdraw from each pool\nChecks total amount to be withdraw, finds pools with greatest concentration disparity and takes from those first\n@param _amount - amount to be withdrawn"}, "functionSelector": "9a9f3e35", "id": 483, "implemented": true, "kind": "function", "modifiers": [], "name": "checkWithdraw", "nameLocation": "4434:13:5", "nodeType": "FunctionDefinition", "parameters": {"id": 330, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 329, "mutability": "mutable", "name": "_amount", "nameLocation": "4453:7:5", "nodeType": "VariableDeclaration", "scope": 483, "src": "4448:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 328, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4448:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4447:14:5"}, "returnParameters": {"id": 337, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 333, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 483, "src": "4482:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 331, "name": "address", "nodeType": "ElementaryTypeName", "src": "4482:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 332, "nodeType": "ArrayTypeName", "src": "4482:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 336, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 483, "src": "4500:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 334, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4500:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 335, "nodeType": "ArrayTypeName", "src": "4500:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "4481:36:5"}, "scope": 680, "src": "4425:942:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 547, "nodeType": "Block", "src": "5603:333:5", "statements": [{"assignments": [497], "declarations": [{"constant": false, "id": 497, "mutability": "mutable", "name": "len", "nameLocation": "5622:3:5", "nodeType": "VariableDeclaration", "scope": 547, "src": "5614:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5614:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 500, "initialValue": {"expression": {"id": 498, "name": "_rebalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "5628:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "id": 499, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5628:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5614:31:5"}, {"assignments": [502], "declarations": [{"constant": false, "id": 502, "mutability": "mutable", "name": "max", "nameLocation": "5660:3:5", "nodeType": "VariableDeclaration", "scope": 547, "src": "5655:8:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 501, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5655:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 504, "initialValue": {"hexValue": "30", "id": 503, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5666:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5655:12:5"}, {"assignments": [506], "declarations": [{"constant": false, "id": 506, "mutability": "mutable", "name": "index", "nameLocation": "5682:5:5", "nodeType": "VariableDeclaration", "scope": 547, "src": "5677:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 505, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5677:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 508, "initialValue": {"hexValue": "30", "id": 507, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5690:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5677:14:5"}, {"body": {"id": 539, "nodeType": "Block", "src": "5725:163:5", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 521, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 516, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "5743:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 517, "name": "_rebalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "5749:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "id": 519, "indexExpression": {"id": 518, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "5760:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5749:13:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 520, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amt", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "5749:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5743:23:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 534, "nodeType": "IfStatement", "src": "5739:111:5", "trueBody": {"id": 533, "nodeType": "Block", "src": "5767:83:5", "statements": [{"expression": {"id": 527, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 522, "name": "max", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 502, "src": "5785:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"baseExpression": {"id": 523, "name": "_rebalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "5791:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "id": 525, "indexExpression": {"id": 524, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "5802:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5791:13:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, "id": 526, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amt", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "5791:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5785:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 528, "nodeType": "ExpressionStatement", "src": "5785:23:5"}, {"expression": {"id": 531, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 529, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 506, "src": "5826:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 530, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "5834:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5826:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 532, "nodeType": "ExpressionStatement", "src": "5826:9:5"}]}}, {"id": 538, "nodeType": "UncheckedBlock", "src": "5863:15:5", "statements": [{"expression": {"id": 536, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "5873:3:5", "subExpression": {"id": 535, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "5875:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 537, "nodeType": "ExpressionStatement", "src": "5873:3:5"}]}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 513, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "5718:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 514, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 497, "src": "5720:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5718:5:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 540, "initializationExpression": {"assignments": [510], "declarations": [{"constant": false, "id": 510, "mutability": "mutable", "name": "i", "nameLocation": "5711:1:5", "nodeType": "VariableDeclaration", "scope": 540, "src": "5706:6:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 509, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5706:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 512, "initialValue": {"hexValue": "30", "id": 511, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5715:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5706:10:5"}, "nodeType": "ForStatement", "src": "5701:187:5"}, {"expression": {"components": [{"baseExpression": {"id": 541, "name": "_rebalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "5905:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing memory[] memory"}}, "id": 543, "indexExpression": {"id": 542, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 506, "src": "5916:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5905:17:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing memory"}}, {"id": 544, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 506, "src": "5923:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 545, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5904:25:5", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_Rebalancing_$31_memory_ptr_$_t_uint256_$", "typeString": "tuple(struct Registry.Rebalancing memory,uint256)"}}, "functionReturnParameters": 495, "id": 546, "nodeType": "Return", "src": "5897:32:5"}]}, "documentation": {"id": 484, "nodeType": "StructuredDocumentation", "src": "5368:126:5", "text": "@dev helper function that finds which pool has to have the most money withdrawn\n@param _rebalance - rebalancing array "}, "functionSelector": "2db20886", "id": 548, "implemented": true, "kind": "function", "modifiers": [], "name": "findMax", "nameLocation": "5512:7:5", "nodeType": "FunctionDefinition", "parameters": {"id": 489, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 488, "mutability": "mutable", "name": "_rebalance", "nameLocation": "5542:10:5", "nodeType": "VariableDeclaration", "scope": 548, "src": "5521:31:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr", "typeString": "struct Registry.Rebalancing[]"}, "typeName": {"baseType": {"id": 486, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 485, "name": "Rebalancing", "nodeType": "IdentifierPath", "referencedDeclaration": 31, "src": "5521:11:5"}, "referencedDeclaration": 31, "src": "5521:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr", "typeString": "struct Registry.Rebalancing"}}, "id": 487, "nodeType": "ArrayTypeName", "src": "5521:13:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr", "typeString": "struct Registry.Rebalancing[]"}}, "visibility": "internal"}], "src": "5520:33:5"}, "returnParameters": {"id": 495, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 492, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 548, "src": "5575:18:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr", "typeString": "struct Registry.Rebalancing"}, "typeName": {"id": 491, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 490, "name": "Rebalancing", "nodeType": "IdentifierPath", "referencedDeclaration": 31, "src": "5575:11:5"}, "referencedDeclaration": 31, "src": "5575:11:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr", "typeString": "struct Registry.Rebalancing"}}, "visibility": "internal"}, {"constant": false, "id": 494, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 548, "src": "5595:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 493, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5595:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5574:29:5"}, "scope": 680, "src": "5503:433:5", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"body": {"id": 580, "nodeType": "Block", "src": "6125:197:5", "statements": [{"assignments": [557], "declarations": [{"constant": false, "id": 557, "mutability": "mutable", "name": "total", "nameLocation": "6147:5:5", "nodeType": "VariableDeclaration", "scope": 580, "src": "6139:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 556, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6139:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 560, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 558, "name": "getTotalAUMinUSD", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 183, "src": "6155:16:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 559, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6155:18:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6139:34:5"}, {"assignments": [562], "declarations": [{"constant": false, "id": 562, "mutability": "mutable", "name": "poolBalance", "nameLocation": "6195:11:5", "nodeType": "VariableDeclaration", "scope": 580, "src": "6187:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 561, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6187:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 568, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 564, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 551, "src": "6220:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 563, "name": "ITokenPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2078, "src": "6209:10:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ITokenPool_$2078_$", "typeString": "type(contract ITokenPool)"}}, "id": 565, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6209:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ITokenPool_$2078", "typeString": "contract ITokenPool"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolValue", "nodeType": "MemberAccess", "referencedDeclaration": 2058, "src": "6209:29:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 567, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6209:31:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6187:53:5"}, {"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 571, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 569, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 557, "src": "6268:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 570, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6277:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6268:10:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 577, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 573, "name": "poolBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 562, "src": "6284:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 574, "name": "PRECISION", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "6296:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6284:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 576, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 557, "src": "6306:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6284:27:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 578, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6268:43:5", "trueExpression": {"hexValue": "30", "id": 572, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6281:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 555, "id": 579, "nodeType": "Return", "src": "6261:50:5"}]}, "documentation": {"id": 549, "nodeType": "StructuredDocumentation", "src": "5937:117:5", "text": "@dev function to get the current concentration of a specific pool\n@param pool - pool to fnd concentration of "}, "functionSelector": "3e85d5f0", "id": 581, "implemented": true, "kind": "function", "modifiers": [], "name": "getConcentration", "nameLocation": "6069:16:5", "nodeType": "FunctionDefinition", "parameters": {"id": 552, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 551, "mutability": "mutable", "name": "pool", "nameLocation": "6094:4:5", "nodeType": "VariableDeclaration", "scope": 581, "src": "6086:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 550, "name": "address", "nodeType": "ElementaryTypeName", "src": "6086:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "6085:14:5"}, "returnParameters": {"id": 555, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 554, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 581, "src": "6120:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 553, "name": "uint", "nodeType": "ElementaryTypeName", "src": "6120:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6119:6:5"}, "scope": 680, "src": "6060:262:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 617, "nodeType": "Block", "src": "6603:223:5", "statements": [{"assignments": [592], "declarations": [{"constant": false, "id": 592, "mutability": "mutable", "name": "total", "nameLocation": "6629:5:5", "nodeType": "VariableDeclaration", "scope": 617, "src": "6621:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 591, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6621:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 595, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 593, "name": "getTotalAUMinUSD", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 183, "src": "6637:16:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 594, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6637:18:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6621:34:5"}, {"assignments": [597], "declarations": [{"constant": false, "id": 597, "mutability": "mutable", "name": "poolBalance", "nameLocation": "6677:11:5", "nodeType": "VariableDeclaration", "scope": 617, "src": "6669:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 596, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6669:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 605, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 604, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 599, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 584, "src": "6702:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 598, "name": "ITokenPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2078, "src": "6691:10:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ITokenPool_$2078_$", "typeString": "type(contract ITokenPool)"}}, "id": 600, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6691:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ITokenPool_$2078", "typeString": "contract ITokenPool"}}, "id": 601, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolValue", "nodeType": "MemberAccess", "referencedDeclaration": 2058, "src": "6691:29:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 602, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6691:31:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 603, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 586, "src": "6725:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6691:40:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6669:62:5"}, {"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 606, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 592, "src": "6759:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 607, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6768:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6759:10:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 610, "name": "poolBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 597, "src": "6775:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 611, "name": "PRECISION", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "6787:9:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6775:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 613, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 592, "src": "6797:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6775:27:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 615, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6759:43:5", "trueExpression": {"hexValue": "30", "id": 609, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6772:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 590, "id": 616, "nodeType": "Return", "src": "6752:50:5"}]}, "documentation": {"id": 582, "nodeType": "StructuredDocumentation", "src": "6323:192:5", "text": "@dev function to get the concentration of certain pool when a certain amount is added to the pool\n@param pool - pool to find concentration of\n@param amount - amount to be added to pool"}, "functionSelector": "c0f1cce5", "id": 618, "implemented": true, "kind": "function", "modifiers": [], "name": "getNewConcentration", "nameLocation": "6529:19:5", "nodeType": "FunctionDefinition", "parameters": {"id": 587, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 584, "mutability": "mutable", "name": "pool", "nameLocation": "6558:4:5", "nodeType": "VariableDeclaration", "scope": 618, "src": "6550:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 583, "name": "address", "nodeType": "ElementaryTypeName", "src": "6550:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 586, "mutability": "mutable", "name": "amount", "nameLocation": "6569:6:5", "nodeType": "VariableDeclaration", "scope": 618, "src": "6564:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 585, "name": "uint", "nodeType": "ElementaryTypeName", "src": "6564:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6549:27:5"}, "returnParameters": {"id": 590, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 589, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 618, "src": "6598:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 588, "name": "uint", "nodeType": "ElementaryTypeName", "src": "6598:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6597:6:5"}, "scope": 680, "src": "6520:306:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 678, "nodeType": "Block", "src": "6979:407:5", "statements": [{"assignments": [625], "declarations": [{"constant": false, "id": 625, "mutability": "mutable", "name": "len", "nameLocation": "6994:3:5", "nodeType": "VariableDeclaration", "scope": 678, "src": "6989:8:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 624, "name": "uint", "nodeType": "ElementaryTypeName", "src": "6989:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 628, "initialValue": {"expression": {"id": 626, "name": "tokenPools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "7000:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "7000:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6989:28:5"}, {"body": {"id": 674, "nodeType": "Block", "src": "7054:304:5", "statements": [{"assignments": [637], "declarations": [{"constant": false, "id": 637, "mutability": "mutable", "name": "pool", "nameLocation": "7076:4:5", "nodeType": "VariableDeclaration", "scope": 674, "src": "7068:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 636, "name": "address", "nodeType": "ElementaryTypeName", "src": "7068:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 641, "initialValue": {"baseExpression": {"id": 638, "name": "tokenPools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9, "src": "7083:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 640, "indexExpression": {"id": 639, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 630, "src": "7094:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7083:13:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "7068:28:5"}, {"assignments": [643], "declarations": [{"constant": false, "id": 643, "mutability": "mutable", "name": "currentConcentration", "nameLocation": "7115:20:5", "nodeType": "VariableDeclaration", "scope": 674, "src": "7110:25:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 642, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7110:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 647, "initialValue": {"arguments": [{"id": 645, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "7155:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 644, "name": "getConcentration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 581, "src": "7138:16:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 646, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7138:22:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7110:50:5"}, {"assignments": [649], "declarations": [{"constant": false, "id": 649, "mutability": "mutable", "name": "diff", "nameLocation": "7178:4:5", "nodeType": "VariableDeclaration", "scope": 674, "src": "7174:8:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 648, "name": "int", "nodeType": "ElementaryTypeName", "src": "7174:3:5", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 661, "initialValue": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 660, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 652, "name": "currentConcentration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 643, "src": "7189:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 651, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7185:3:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 650, "name": "int", "nodeType": "ElementaryTypeName", "src": "7185:3:5", "typeDescriptions": {}}}, "id": 653, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7185:25:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [{"baseExpression": {"id": 656, "name": "PoolToConcentration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "7217:19:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 658, "indexExpression": {"id": 657, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "7237:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7217:25:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 655, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7213:3:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 654, "name": "int", "nodeType": "ElementaryTypeName", "src": "7213:3:5", "typeDescriptions": {}}}, "id": 659, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7213:30:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "7185:58:5", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "7174:69:5"}, {"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 664, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 662, "name": "diff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 649, "src": "7261:4:5", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "353030303030", "id": 663, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7266:6:5", "typeDescriptions": {"typeIdentifier": "t_rational_500000_by_1", "typeString": "int_const 500000"}, "value": "500000"}, "src": "7261:11:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 669, "nodeType": "IfStatement", "src": "7257:63:5", "trueBody": {"id": 668, "nodeType": "Block", "src": "7274:46:5", "statements": [{"expression": {"components": [{"hexValue": "74727565", "id": 665, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7300:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "id": 666, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7299:6:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 623, "id": 667, "nodeType": "Return", "src": "7292:13:5"}]}}, {"id": 673, "nodeType": "UncheckedBlock", "src": "7333:15:5", "statements": [{"expression": {"id": 671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "7343:3:5", "subExpression": {"id": 670, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 630, "src": "7345:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 672, "nodeType": "ExpressionStatement", "src": "7343:3:5"}]}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 635, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 633, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 630, "src": "7044:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 634, "name": "len", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 625, "src": "7048:3:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7044:7:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 675, "initializationExpression": {"assignments": [630], "declarations": [{"constant": false, "id": 630, "mutability": "mutable", "name": "i", "nameLocation": "7037:1:5", "nodeType": "VariableDeclaration", "scope": 675, "src": "7032:6:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 629, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7032:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 632, "initialValue": {"hexValue": "30", "id": 631, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7041:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "7032:10:5"}, "nodeType": "ForStatement", "src": "7027:331:5"}, {"expression": {"hexValue": "66616c7365", "id": 676, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7374:5:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 623, "id": 677, "nodeType": "Return", "src": "7367:12:5"}]}, "documentation": {"id": 619, "nodeType": "StructuredDocumentation", "src": "6827:97:5", "text": "@dev checks if any pool has a concentration more than 5% above/below target concentration"}, "functionSelector": "55be04ad", "id": 679, "implemented": true, "kind": "function", "modifiers": [], "name": "checkDeposit", "nameLocation": "6938:12:5", "nodeType": "FunctionDefinition", "parameters": {"id": 620, "nodeType": "ParameterList", "parameters": [], "src": "6950:2:5"}, "returnParameters": {"id": 623, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 622, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 679, "src": "6974:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 621, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6974:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "6973:6:5"}, "scope": 680, "src": "6929:457:5", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 681, "src": "179:8193:5", "usedErrors": [33]}], "src": "31:8348:5"}, "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561103c806100326000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80638da5cb5b116100a2578063ac73b1bb11610071578063ac73b1bb1461028c578063bccc01ba146102b5578063c0f1cce5146102bd578063c45a0155146102d0578063d04238ee146102e357600080fd5b80638da5cb5b1461022a578063989796b51461023d5780639a9f3e35146102665780639b7653391461027957600080fd5b80633f41addd116100de5780633f41addd146101bc57806355be04ad146101dd5780635bb47808146101f5578063675c7c711461020a57600080fd5b8062c0f9161461010f57806329857fd11461013f5780632db208861461015f5780633e85d5f01461019b575b600080fd5b61012261011d366004610c2d565b6102f6565b6040516001600160a01b0390911681526020015b60405180910390f35b61015261014d366004610c2d565b610320565b6040516101369190610c46565b61017261016d366004610d32565b61051d565b6040805183516001600160a01b0316815260209384015193810193909352820152606001610136565b6101ae6101a9366004610e06565b6105bb565b604051908152602001610136565b6101cf6101ca366004610c2d565b61065c565b604051610136929190610e28565b6101e5610677565b6040519015158152602001610136565b610208610203366004610e06565b610712565b005b6101ae610218366004610e06565b60056020526000908152604090205481565b600054610122906001600160a01b031681565b61012261024b366004610e06565b6003602052600090815260409020546001600160a01b031681565b6101cf610274366004610c2d565b61075f565b610208610287366004610eac565b610989565b61012261029a366004610e06565b6004602052600090815260409020546001600160a01b031681565b6101ae610a79565b6101ae6102cb366004610ee8565b610b39565b600254610122906001600160a01b031681565b6102086102f1366004610ee8565b610be6565b6001818154811061030657600080fd5b6000918252602090912001546001600160a01b0316905081565b60015460609060008167ffffffffffffffff81111561034157610341610ca6565b60405190808252806020026020018201604052801561038657816020015b604080518082019091526000808252602082015281526020019060019003908161035f5790505b5090506000610393610a79565b905060006103a18683610f28565b905060005b84811015610512576000600182815481106103c3576103c3610f3f565b600091825260208083209091015460408051631ba2f53160e01b815290516001600160a01b0390921694508492631ba2f531926004808401938290030181865afa158015610415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104399190610f55565b6001600160a01b038316600090815260056020526040812054919250620f42406104638388610f6e565b61046d9190610f8d565b9050808311156104c65760006104838285610f28565b90506040518060400160405280866001600160a01b03168152602001828152508987815181106104b5576104b5610f3f565b602002602001018190525050610503565b6040518060400160405280856001600160a01b0316815260200160008152508886815181106104f7576104f7610f3f565b60200260200101819052505b846001019450505050506103a6565b509195945050505050565b604080518082019091526000808252602082015281516000908180805b838110156105935786818151811061055457610554610f3f565b60200260200101516020015183101561058b5786818151811061057957610579610f3f565b60200260200101516020015192508091505b60010161053a565b508581815181106105a6576105a6610f3f565b60200260200101518194509450505050915091565b6000806105c6610a79565b90506000836001600160a01b0316631ba2f5316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190610f55565b905081156106515781610642620f424083610f6e565b61064c9190610f8d565b610654565b60005b949350505050565b60608060008061066b8561075f565b90969095509350505050565b600154600090815b818110156107095760006001828154811061069c5761069c610f3f565b60009182526020822001546001600160a01b031691506106bb826105bb565b6001600160a01b038316600090815260056020526040812054919250906106e29083610faf565b90506207a1208113156106fb5760019550505050505090565b83600101935050505061067f565b50600091505090565b6000546001600160a01b0316331461073d5760405163da476dd760e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b606080600061076d84610320565b805190915060008167ffffffffffffffff81111561078d5761078d610ca6565b6040519080825280602002602001820160405280156107b6578160200160208202803683370190505b50905060008267ffffffffffffffff8111156107d4576107d4610ca6565b6040519080825280602002602001820160405280156107fd578160200160208202803683370190505b5090506000805b8481101561097b576000806108188861051d565b915091508a8410801561083957508a8260200151856108379190610fee565b115b156108c957610848848c610f28565b85848151811061085a5761085a610f3f565b602002602001018181525050816000015186848151811061087d5761087d610f3f565b60200260200101906001600160a01b031690816001600160a01b0316815250508483815181106108af576108af610f3f565b6020026020010151846108c29190610fee565b9350610971565b8a841080156108e757508a8260200151856108e49190610fee565b11155b1561097157816020015185848151811061090357610903610f3f565b602002602001018181525050816000015186848151811061092657610926610f3f565b6001600160a01b0390921660209283029190910182015282015161094a9085610fee565b9350600088828151811061096057610960610f3f565b602002602001015160200181815250505b5050600101610804565b509197909650945050505050565b6002546001600160a01b031633146109f35760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520666163746f72792063616e2061646420746f6b656e20706044820152636f6f6c7360e01b606482015260840160405180910390fd5b600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039485166001600160a01b0319918216811790925592909316600081815260036020908152604080832080548716881790559582526004815285822080549095169092179093556005905291902055565b6001546000908190815b81811015610b3157600060018281548110610aa057610aa0610f3f565b600091825260208083209091015460408051631ba2f53160e01b815290516001600160a01b0390921694508492631ba2f531926004808401938290030181865afa158015610af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b169190610f55565b9050610b228186610fee565b94508260010192505050610a83565b509092915050565b600080610b44610a79565b9050600083856001600160a01b0316631ba2f5316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190610f55565b610bb59190610fee565b90508115610bda5781610bcb620f424083610f6e565b610bd59190610f8d565b610bdd565b60005b95945050505050565b6000546001600160a01b03163314610c115760405163da476dd760e01b815260040160405180910390fd5b6001600160a01b03909116600090815260056020526040902055565b600060208284031215610c3f57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610c9957610c8984835180516001600160a01b03168252602090810151910152565b9284019290850190600101610c63565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610cdf57610cdf610ca6565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d0e57610d0e610ca6565b604052919050565b80356001600160a01b0381168114610d2d57600080fd5b919050565b60006020808385031215610d4557600080fd5b823567ffffffffffffffff80821115610d5d57600080fd5b818501915085601f830112610d7157600080fd5b813581811115610d8357610d83610ca6565b610d91848260051b01610ce5565b818152848101925060069190911b830184019087821115610db157600080fd5b928401925b81841015610dfb5760408489031215610dcf5760008081fd5b610dd7610cbc565b610de085610d16565b81528486013586820152835260409093019291840191610db6565b979650505050505050565b600060208284031215610e1857600080fd5b610e2182610d16565b9392505050565b604080825283519082018190526000906020906060840190828701845b82811015610e6a5781516001600160a01b031684529284019290840190600101610e45565b5050508381038285015284518082528583019183019060005b81811015610e9f57835183529284019291840191600101610e83565b5090979650505050505050565b600080600060608486031215610ec157600080fd5b610eca84610d16565b9250610ed860208501610d16565b9150604084013590509250925092565b60008060408385031215610efb57600080fd5b610f0483610d16565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f3a57610f3a610f12565b500390565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610f6757600080fd5b5051919050565b6000816000190483118215151615610f8857610f88610f12565b500290565b600082610faa57634e487b7160e01b600052601260045260246000fd5b500490565b60008083128015600160ff1b850184121615610fcd57610fcd610f12565b6001600160ff1b0384018313811615610fe857610fe8610f12565b50500390565b6000821982111561100157611001610f12565b50019056fea264697066735822122074b3b39cbeb699235646617889d07b89c084d72c36532f6fcf23052e3334092964736f6c634300080c0033", "bytecodeSha1": "478becb956d7f651ff11702a8a311fb9248032fe", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.12+commit.f00d7308"}, "contractName": "Registry", "coverageMap": {"branches": {"11": {}, "5": {"Registry.addTokenPool": {"36": [1404, 1425, true]}, "Registry.checkDeposit": {"35": [7261, 7272, false]}, "Registry.findMax": {"33": [5743, 5766, false]}, "Registry.getConcentration": {"34": [6268, 6278, true]}, "Registry.getNewConcentration": {"37": [6759, 6769, true]}, "Registry.liquidityCheck": {"32": [3775, 3799, false]}}}, "statements": {"11": {}, "5": {"Registry.addTokenPool": {"22": [1396, 1466], "23": [1476, 1503], "24": [1513, 1545], "25": [1555, 1587], "26": [1597, 1644]}, "Registry.checkDeposit": {"9": [7292, 7305], "10": [7343, 7346], "11": [7367, 7379]}, "Registry.checkWithdraw": {"13": [4928, 4958], "14": [4976, 4996], "15": [5014, 5034], "16": [5135, 5158], "17": [5176, 5196], "18": [5214, 5230], "19": [5249, 5272], "20": [5310, 5313], "21": [5337, 5360]}, "Registry.findMax": {"4": [5785, 5808], "5": [5826, 5835], "6": [5873, 5876], "7": [5897, 5929]}, "Registry.getConcentration": {"8": [6261, 6311]}, "Registry.getNewConcentration": {"30": [6752, 6802]}, "Registry.getTotalAUMinUSD": {"27": [2435, 2455], "28": [2479, 2482], "29": [2503, 2515]}, "Registry.liquidityCheck": {"0": [3874, 3923], "1": [3973, 4020], "2": [4058, 4061], "3": [4082, 4097]}, "Registry.setFactory": {"12": [1060, 1078]}, "Registry.setTargetConcentration": {"31": [1931, 1967]}}}}, "dependencies": ["ITokenPool"], "deployedBytecode": "608060405234801561001057600080fd5b506004361061010a5760003560e01c80638da5cb5b116100a2578063ac73b1bb11610071578063ac73b1bb1461028c578063bccc01ba146102b5578063c0f1cce5146102bd578063c45a0155146102d0578063d04238ee146102e357600080fd5b80638da5cb5b1461022a578063989796b51461023d5780639a9f3e35146102665780639b7653391461027957600080fd5b80633f41addd116100de5780633f41addd146101bc57806355be04ad146101dd5780635bb47808146101f5578063675c7c711461020a57600080fd5b8062c0f9161461010f57806329857fd11461013f5780632db208861461015f5780633e85d5f01461019b575b600080fd5b61012261011d366004610c2d565b6102f6565b6040516001600160a01b0390911681526020015b60405180910390f35b61015261014d366004610c2d565b610320565b6040516101369190610c46565b61017261016d366004610d32565b61051d565b6040805183516001600160a01b0316815260209384015193810193909352820152606001610136565b6101ae6101a9366004610e06565b6105bb565b604051908152602001610136565b6101cf6101ca366004610c2d565b61065c565b604051610136929190610e28565b6101e5610677565b6040519015158152602001610136565b610208610203366004610e06565b610712565b005b6101ae610218366004610e06565b60056020526000908152604090205481565b600054610122906001600160a01b031681565b61012261024b366004610e06565b6003602052600090815260409020546001600160a01b031681565b6101cf610274366004610c2d565b61075f565b610208610287366004610eac565b610989565b61012261029a366004610e06565b6004602052600090815260409020546001600160a01b031681565b6101ae610a79565b6101ae6102cb366004610ee8565b610b39565b600254610122906001600160a01b031681565b6102086102f1366004610ee8565b610be6565b6001818154811061030657600080fd5b6000918252602090912001546001600160a01b0316905081565b60015460609060008167ffffffffffffffff81111561034157610341610ca6565b60405190808252806020026020018201604052801561038657816020015b604080518082019091526000808252602082015281526020019060019003908161035f5790505b5090506000610393610a79565b905060006103a18683610f28565b905060005b84811015610512576000600182815481106103c3576103c3610f3f565b600091825260208083209091015460408051631ba2f53160e01b815290516001600160a01b0390921694508492631ba2f531926004808401938290030181865afa158015610415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104399190610f55565b6001600160a01b038316600090815260056020526040812054919250620f42406104638388610f6e565b61046d9190610f8d565b9050808311156104c65760006104838285610f28565b90506040518060400160405280866001600160a01b03168152602001828152508987815181106104b5576104b5610f3f565b602002602001018190525050610503565b6040518060400160405280856001600160a01b0316815260200160008152508886815181106104f7576104f7610f3f565b60200260200101819052505b846001019450505050506103a6565b509195945050505050565b604080518082019091526000808252602082015281516000908180805b838110156105935786818151811061055457610554610f3f565b60200260200101516020015183101561058b5786818151811061057957610579610f3f565b60200260200101516020015192508091505b60010161053a565b508581815181106105a6576105a6610f3f565b60200260200101518194509450505050915091565b6000806105c6610a79565b90506000836001600160a01b0316631ba2f5316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190610f55565b905081156106515781610642620f424083610f6e565b61064c9190610f8d565b610654565b60005b949350505050565b60608060008061066b8561075f565b90969095509350505050565b600154600090815b818110156107095760006001828154811061069c5761069c610f3f565b60009182526020822001546001600160a01b031691506106bb826105bb565b6001600160a01b038316600090815260056020526040812054919250906106e29083610faf565b90506207a1208113156106fb5760019550505050505090565b83600101935050505061067f565b50600091505090565b6000546001600160a01b0316331461073d5760405163da476dd760e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b606080600061076d84610320565b805190915060008167ffffffffffffffff81111561078d5761078d610ca6565b6040519080825280602002602001820160405280156107b6578160200160208202803683370190505b50905060008267ffffffffffffffff8111156107d4576107d4610ca6565b6040519080825280602002602001820160405280156107fd578160200160208202803683370190505b5090506000805b8481101561097b576000806108188861051d565b915091508a8410801561083957508a8260200151856108379190610fee565b115b156108c957610848848c610f28565b85848151811061085a5761085a610f3f565b602002602001018181525050816000015186848151811061087d5761087d610f3f565b60200260200101906001600160a01b031690816001600160a01b0316815250508483815181106108af576108af610f3f565b6020026020010151846108c29190610fee565b9350610971565b8a841080156108e757508a8260200151856108e49190610fee565b11155b1561097157816020015185848151811061090357610903610f3f565b602002602001018181525050816000015186848151811061092657610926610f3f565b6001600160a01b0390921660209283029190910182015282015161094a9085610fee565b9350600088828151811061096057610960610f3f565b602002602001015160200181815250505b5050600101610804565b509197909650945050505050565b6002546001600160a01b031633146109f35760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520666163746f72792063616e2061646420746f6b656e20706044820152636f6f6c7360e01b606482015260840160405180910390fd5b600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039485166001600160a01b0319918216811790925592909316600081815260036020908152604080832080548716881790559582526004815285822080549095169092179093556005905291902055565b6001546000908190815b81811015610b3157600060018281548110610aa057610aa0610f3f565b600091825260208083209091015460408051631ba2f53160e01b815290516001600160a01b0390921694508492631ba2f531926004808401938290030181865afa158015610af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b169190610f55565b9050610b228186610fee565b94508260010192505050610a83565b509092915050565b600080610b44610a79565b9050600083856001600160a01b0316631ba2f5316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190610f55565b610bb59190610fee565b90508115610bda5781610bcb620f424083610f6e565b610bd59190610f8d565b610bdd565b60005b95945050505050565b6000546001600160a01b03163314610c115760405163da476dd760e01b815260040160405180910390fd5b6001600160a01b03909116600090815260056020526040902055565b600060208284031215610c3f57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610c9957610c8984835180516001600160a01b03168252602090810151910152565b9284019290850190600101610c63565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610cdf57610cdf610ca6565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d0e57610d0e610ca6565b604052919050565b80356001600160a01b0381168114610d2d57600080fd5b919050565b60006020808385031215610d4557600080fd5b823567ffffffffffffffff80821115610d5d57600080fd5b818501915085601f830112610d7157600080fd5b813581811115610d8357610d83610ca6565b610d91848260051b01610ce5565b818152848101925060069190911b830184019087821115610db157600080fd5b928401925b81841015610dfb5760408489031215610dcf5760008081fd5b610dd7610cbc565b610de085610d16565b81528486013586820152835260409093019291840191610db6565b979650505050505050565b600060208284031215610e1857600080fd5b610e2182610d16565b9392505050565b604080825283519082018190526000906020906060840190828701845b82811015610e6a5781516001600160a01b031684529284019290840190600101610e45565b5050508381038285015284518082528583019183019060005b81811015610e9f57835183529284019291840191600101610e83565b5090979650505050505050565b600080600060608486031215610ec157600080fd5b610eca84610d16565b9250610ed860208501610d16565b9150604084013590509250925092565b60008060408385031215610efb57600080fd5b610f0483610d16565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f3a57610f3a610f12565b500390565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610f6757600080fd5b5051919050565b6000816000190483118215151615610f8857610f88610f12565b500290565b600082610faa57634e487b7160e01b600052601260045260246000fd5b500490565b60008083128015600160ff1b850184121615610fcd57610fcd610f12565b6001600160ff1b0384018313811615610fe857610fe8610f12565b50500390565b6000821982111561100157611001610f12565b50019056fea264697066735822122074b3b39cbeb699235646617889d07b89c084d72c36532f6fcf23052e3334092964736f6c634300080c0033", "deployedSourceMap": "179:8193:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:27;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:12;;;345:51;;333:2;318:18;233:27:5;;;;;;;;3236:872;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5503:433::-;;;;;;:::i;:::-;;:::i;:::-;;;;488:12:12;;-1:-1:-1;;;;;484:38:12;472:51;;572:4;561:16;;;555:23;539:14;;;532:47;;;;3717:18;;3710:34;3641:2;3626:18;5503:433:5;3425:325:12;6060:262:5;;;;;;:::i;:::-;;:::i;:::-;;;4092:25:12;;;4080:2;4065:18;6060:262:5;3946:177:12;2674:226:5;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6929:457::-;;;:::i;:::-;;;5476:14:12;;5469:22;5451:41;;5439:2;5424:18;6929:457:5;5311:187:12;993:92:5;;;;;;:::i;:::-;;:::i;:::-;;385:55;;;;;;:::i;:::-;;;;;;;;;;;;;;211:20;;;;;-1:-1:-1;;;;;211:20:5;;;287:47;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;287:47:5;;;4425:942;;;;;;:::i;:::-;;:::i;1298:353::-;;;;;;:::i;:::-;;:::i;336:47::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;336:47:5;;;2147:375;;;:::i;6520:306::-;;;;;;:::i;:::-;;:::i;262:22::-;;;;;-1:-1:-1;;;;;262:22:5;;;1818:156;;;;;;:::i;:::-;;:::i;233:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;233:27:5;;-1:-1:-1;233:27:5;:::o;3236:872::-;3341:10;:17;3297:20;;3330:8;3341:17;3400:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3400:22:5;;;;;;;;;;;;;;;;3368:54;;3432:8;3443:18;:16;:18::i;:::-;3432:29;-1:-1:-1;3471:11:5;3485:13;3491:7;3432:29;3485:13;:::i;:::-;3471:27;;3513:6;3508:565;3529:3;3525:1;:7;3508:565;;;3549:12;3564:10;3575:1;3564:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;3613:31;;;-1:-1:-1;;;3613:31:5;;;;-1:-1:-1;;;;;3564:13:5;;;;-1:-1:-1;3564:13:5;;3613:29;;:31;;;;;;;;;;3564:13;3613:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3675:25:5;;3658:14;3675:25;;;:19;:25;;;;;;3591:53;;-1:-1:-1;471:3:5;3735:13;3675:25;3735:6;:13;:::i;:::-;:23;;;;:::i;:::-;3714:44;;3789:10;3775:11;:24;3772:263;;;3818:11;3832:24;3846:10;3832:11;:24;:::i;:::-;3818:38;;3887:35;;;;;;;;3906:4;-1:-1:-1;;;;;3887:35:5;;;;;3917:3;3887:35;;;3874:8;3883:1;3874:11;;;;;;;;:::i;:::-;;;;;;:49;;;;3800:138;3772:263;;;3986:33;;;;;;;;4005:4;-1:-1:-1;;;;;3986:33:5;;;;;4016:1;3986:33;;;3973:8;3982:1;3973:11;;;;;;;;:::i;:::-;;;;;;:47;;;;3772:263;4058:3;;;;;3535:538;;;;3508:565;;;-1:-1:-1;4089:8:5;;3236:872;-1:-1:-1;;;;;3236:872:5:o;5503:433::-;-1:-1:-1;;;;;;;;;;;;;;;;;5628:17:5;;5595:7;;;;;5701:187;5720:3;5718:1;:5;5701:187;;;5749:10;5760:1;5749:13;;;;;;;;:::i;:::-;;;;;;;:17;;;5743:3;:23;5739:111;;;5791:10;5802:1;5791:13;;;;;;;;:::i;:::-;;;;;;;:17;;;5785:23;;5834:1;5826:9;;5739:111;5873:3;;5701:187;;;;5905:10;5916:5;5905:17;;;;;;;;:::i;:::-;;;;;;;5923:5;5897:32;;;;;;;5503:433;;;:::o;6060:262::-;6120:4;6139:13;6155:18;:16;:18::i;:::-;6139:34;;6187:19;6220:4;-1:-1:-1;;;;;6209:29:5;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6187:53;-1:-1:-1;6268:10:5;;:43;;6306:5;6284:21;471:3;6284:11;:21;:::i;:::-;:27;;;;:::i;:::-;6268:43;;;6281:1;6268:43;6261:50;6060:262;-1:-1:-1;;;;6060:262:5:o;2674:226::-;2738:16;2756;2784:22;2808:25;2837:22;2851:7;2837:13;:22::i;:::-;2783:76;;;;-1:-1:-1;2674:226:5;-1:-1:-1;;;;2674:226:5:o;6929:457::-;7000:10;:17;6974:4;;;7027:331;7048:3;7044:1;:7;7027:331;;;7068:12;7083:10;7094:1;7083:13;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;7083:13:5;;-1:-1:-1;7138:22:5;7083:13;7138:16;:22::i;:::-;-1:-1:-1;;;;;7217:25:5;;7174:8;7217:25;;;:19;:25;;;;;;7110:50;;-1:-1:-1;7174:8:5;7185:58;;7110:50;7185:58;:::i;:::-;7174:69;;7266:6;7261:4;:11;7257:63;;;7300:4;7292:13;;;;;;;6929:457;:::o;7257:63::-;7343:3;;;;;7054:304;;;7027:331;;;;7374:5;7367:12;;;6929:457;:::o;993:92::-;755:5;;-1:-1:-1;;;;;755:5:5;741:10;:19;737:77;;783:20;;-1:-1:-1;;;783:20:5;;;;;;;;;;;737:77;1060:7:::1;:18:::0;;-1:-1:-1;;;;;;1060:18:5::1;-1:-1:-1::0;;;;;1060:18:5;;;::::1;::::0;;;::::1;::::0;;993:92::o;4425:942::-;4482:16;4500;4527:29;4559:23;4574:7;4559:14;:23::i;:::-;4606:15;;4527:55;;-1:-1:-1;4592:11:5;4606:15;4655:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4655:18:5;;4631:42;;4683:22;4719:3;4708:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4708:15:5;;4683:40;;4733:10;4762:6;4757:571;4772:3;4770:1;:5;4757:571;;;4792:22;4816:10;4830:17;4838:8;4830:7;:17::i;:::-;4791:56;;;;4872:7;4866:5;:13;4865:44;;;;;4901:7;4891:3;:7;;;4883:5;:15;;;;:::i;:::-;:25;4865:44;4861:426;;;4942:15;4952:5;4942:7;:15;:::i;:::-;4928:8;4937:1;4928:11;;;;;;;;:::i;:::-;;;;;;:30;;;;;4987:3;:8;;;4976:4;4981:1;4976:7;;;;;;;;:::i;:::-;;;;;;:20;-1:-1:-1;;;;;4976:20:5;;;-1:-1:-1;;;;;4976:20:5;;;;;5023:8;5032:1;5023:11;;;;;;;;:::i;:::-;;;;;;;5014:20;;;;;:::i;:::-;;;4861:426;;;5078:7;5072:5;:13;5071:45;;;;;5108:7;5097:3;:7;;;5089:5;:15;;;;:::i;:::-;:26;;5071:45;5067:220;;;5150:3;:7;;;5135:8;5144:1;5135:11;;;;;;;;:::i;:::-;;;;;;:23;;;;;5187:3;:8;;;5176:4;5181:1;5176:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5176:20:5;;;:7;;;;;;;;;;:20;5223:7;;;5214:16;;;;:::i;:::-;;;5271:1;5249:8;5258:5;5249:15;;;;;;;;:::i;:::-;;;;;;;:19;;:23;;;;;5067:220;-1:-1:-1;;5310:3:5;;4757:571;;;-1:-1:-1;5345:4:5;;5351:8;;-1:-1:-1;4425:942:5;-1:-1:-1;;;;;4425:942:5:o;1298:353::-;1418:7;;-1:-1:-1;;;;;1418:7:5;1404:10;:21;1396:70;;;;-1:-1:-1;;;1396:70:5;;7680:2:12;1396:70:5;;;7662:21:12;7719:2;7699:18;;;7692:30;7758:34;7738:18;;;7731:62;-1:-1:-1;;;7809:18:12;;;7802:34;7853:19;;1396:70:5;;;;;;;;1476:10;:27;;;;;;;;;;;;-1:-1:-1;;;;;1476:27:5;;;-1:-1:-1;;;;;;1476:27:5;;;;;;;;1513:19;;;;-1:-1:-1;1513:19:5;;;:11;1476:27;1513:19;;;;;;;:32;;;;;;;;1555:23;;;:11;:23;;;;;:32;;;;;;;;;;;1597:19;:31;;;;;:47;1298:353::o;2147:375::-;2256:10;:17;2196:7;;;;;2283:211;2304:3;2300:1;:7;2283:211;;;2324:12;2339:10;2350:1;2339:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;2390:31;;;-1:-1:-1;;;2390:31:5;;;;-1:-1:-1;;;;;2339:13:5;;;;-1:-1:-1;2339:13:5;;2390:29;;:31;;;;;;;;;;2339:13;2390:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2368:53;-1:-1:-1;2435:20:5;2368:53;2435:20;;:::i;:::-;;;2479:3;;;;;2310:184;;2283:211;;;-1:-1:-1;2510:5:5;;2147:375;-1:-1:-1;;2147:375:5:o;6520:306::-;6598:4;6621:13;6637:18;:16;:18::i;:::-;6621:34;;6669:19;6725:6;6702:4;-1:-1:-1;;;;;6691:29:5;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;6669:62;-1:-1:-1;6759:10:5;;:43;;6797:5;6775:21;471:3;6775:11;:21;:::i;:::-;:27;;;;:::i;:::-;6759:43;;;6772:1;6759:43;6752:50;6520:306;-1:-1:-1;;;;;6520:306:5:o;1818:156::-;755:5;;-1:-1:-1;;;;;755:5:5;741:10;:19;737:77;;783:20;;-1:-1:-1;;;783:20:5;;;;;;;;;;;737:77;-1:-1:-1;;;;;1931:26:5;;::::1;;::::0;;;:19:::1;:26;::::0;;;;:36;1818:156::o;14:180:12:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:12;;14:180;-1:-1:-1;14:180:12:o;590:730::-;815:2;867:21;;;937:13;;840:18;;;959:22;;;786:4;;815:2;1000;;1018:18;;;;1059:15;;;786:4;1102:192;1116:6;1113:1;1110:13;1102:192;;;1165:49;1210:3;1201:6;1195:13;488:12;;-1:-1:-1;;;;;484:38:12;472:51;;572:4;561:16;;;555:23;539:14;;532:47;407:178;1165:49;1234:12;;;;1269:15;;;;1138:1;1131:9;1102:192;;;-1:-1:-1;1311:3:12;;590:730;-1:-1:-1;;;;;;;590:730:12:o;1325:127::-;1386:10;1381:3;1377:20;1374:1;1367:31;1417:4;1414:1;1407:15;1441:4;1438:1;1431:15;1457:257;1529:4;1523:11;;;1561:17;;1608:18;1593:34;;1629:22;;;1590:62;1587:88;;;1655:18;;:::i;:::-;1691:4;1684:24;1457:257;:::o;1719:275::-;1790:2;1784:9;1855:2;1836:13;;-1:-1:-1;;1832:27:12;1820:40;;1890:18;1875:34;;1911:22;;;1872:62;1869:88;;;1937:18;;:::i;:::-;1973:2;1966:22;1719:275;;-1:-1:-1;1719:275:12:o;1999:173::-;2067:20;;-1:-1:-1;;;;;2116:31:12;;2106:42;;2096:70;;2162:1;2159;2152:12;2096:70;1999:173;;;:::o;2177:1243::-;2288:6;2319:2;2362;2350:9;2341:7;2337:23;2333:32;2330:52;;;2378:1;2375;2368:12;2330:52;2418:9;2405:23;2447:18;2488:2;2480:6;2477:14;2474:34;;;2504:1;2501;2494:12;2474:34;2542:6;2531:9;2527:22;2517:32;;2587:7;2580:4;2576:2;2572:13;2568:27;2558:55;;2609:1;2606;2599:12;2558:55;2645:2;2632:16;2667:2;2663;2660:10;2657:36;;;2673:18;;:::i;:::-;2713:36;2745:2;2740;2737:1;2733:10;2729:19;2713:36;:::i;:::-;2783:15;;;2814:12;;;;-1:-1:-1;2865:1:12;2861:10;;;;2853:19;;2849:28;;;2889:19;;;2886:39;;;2921:1;2918;2911:12;2886:39;2945:11;;;;2965:425;2981:6;2976:3;2973:15;2965:425;;;3063:4;3057:3;3048:7;3044:17;3040:28;3037:118;;;3109:1;3138:2;3134;3127:14;3037:118;3181:22;;:::i;:::-;3230:23;3249:3;3230:23;:::i;:::-;3216:38;;3303:12;;;3290:26;3274:14;;;3267:50;3330:18;;3007:4;2998:14;;;;3368:12;;;;2965:425;;;3409:5;2177:1243;-1:-1:-1;;;;;;;2177:1243:12:o;3755:186::-;3814:6;3867:2;3855:9;3846:7;3842:23;3838:32;3835:52;;;3883:1;3880;3873:12;3835:52;3906:29;3925:9;3906:29;:::i;:::-;3896:39;3755:186;-1:-1:-1;;;3755:186:12:o;4128:1178::-;4396:2;4408:21;;;4478:13;;4381:18;;;4500:22;;;4348:4;;4575;;4553:2;4538:18;;;4602:15;;;4348:4;4645:195;4659:6;4656:1;4653:13;4645:195;;;4724:13;;-1:-1:-1;;;;;4720:39:12;4708:52;;4780:12;;;;4815:15;;;;4756:1;4674:9;4645:195;;;-1:-1:-1;;;4876:19:12;;;4856:18;;;4849:47;4946:13;;4968:21;;;5044:15;;;;5007:12;;;5079:1;5089:189;5105:8;5100:3;5097:17;5089:189;;;5174:15;;5160:30;;5251:17;;;;5212:14;;;;5133:1;5124:11;5089:189;;;-1:-1:-1;5295:5:12;;4128:1178;-1:-1:-1;;;;;;;4128:1178:12:o;5503:328::-;5580:6;5588;5596;5649:2;5637:9;5628:7;5624:23;5620:32;5617:52;;;5665:1;5662;5655:12;5617:52;5688:29;5707:9;5688:29;:::i;:::-;5678:39;;5736:38;5770:2;5759:9;5755:18;5736:38;:::i;:::-;5726:48;;5821:2;5810:9;5806:18;5793:32;5783:42;;5503:328;;;;;:::o;5836:254::-;5904:6;5912;5965:2;5953:9;5944:7;5940:23;5936:32;5933:52;;;5981:1;5978;5971:12;5933:52;6004:29;6023:9;6004:29;:::i;:::-;5994:39;6080:2;6065:18;;;;6052:32;;-1:-1:-1;;;5836:254:12:o;6095:127::-;6156:10;6151:3;6147:20;6144:1;6137:31;6187:4;6184:1;6177:15;6211:4;6208:1;6201:15;6227:125;6267:4;6295:1;6292;6289:8;6286:34;;;6300:18;;:::i;:::-;-1:-1:-1;6337:9:12;;6227:125::o;6357:127::-;6418:10;6413:3;6409:20;6406:1;6399:31;6449:4;6446:1;6439:15;6473:4;6470:1;6463:15;6489:184;6559:6;6612:2;6600:9;6591:7;6587:23;6583:32;6580:52;;;6628:1;6625;6618:12;6580:52;-1:-1:-1;6651:16:12;;6489:184;-1:-1:-1;6489:184:12:o;6678:168::-;6718:7;6784:1;6780;6776:6;6772:14;6769:1;6766:21;6761:1;6754:9;6747:17;6743:45;6740:71;;;6791:18;;:::i;:::-;-1:-1:-1;6831:9:12;;6678:168::o;6851:217::-;6891:1;6917;6907:132;;6961:10;6956:3;6952:20;6949:1;6942:31;6996:4;6993:1;6986:15;7024:4;7021:1;7014:15;6907:132;-1:-1:-1;7053:9:12;;6851:217::o;7073:267::-;7112:4;7141:9;;;7166:10;;-1:-1:-1;;;7185:19:12;;7178:27;;7162:44;7159:70;;;7209:18;;:::i;:::-;-1:-1:-1;;;;;7256:27:12;;7249:35;;7241:44;;7238:70;;;7288:18;;:::i;:::-;-1:-1:-1;;7325:9:12;;7073:267::o;7345:128::-;7385:3;7416:1;7412:6;7409:1;7406:13;7403:39;;;7422:18;;:::i;:::-;-1:-1:-1;7458:9:12;;7345:128::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"addTokenPool(address,address,uint256)": {"details": "function to add TokenPool to tokenPool array and various mappings", "params": {"_token": "- address of token", "_tokenPool": "- address of tokenPool", "concentration": "- value of target concentration "}}, "checkDeposit()": {"details": "checks if any pool has a concentration more than 5% above/below target concentration"}, "checkWithdraw(uint256)": {"details": "function that takes the rebalancing array from liquidityCheck and returns the pools to withdraw from and how much to withdraw from each pool Checks total amount to be withdraw, finds pools with greatest concentration disparity and takes from those first", "params": {"_amount": "- amount to be withdrawn"}}, "findMax((address,uint256)[])": {"details": "helper function that finds which pool has to have the most money withdrawn", "params": {"_rebalance": "- rebalancing array "}}, "getConcentration(address)": {"details": "function to get the current concentration of a specific pool", "params": {"pool": "- pool to fnd concentration of "}}, "getNewConcentration(address,uint256)": {"details": "function to get the concentration of certain pool when a certain amount is added to the pool", "params": {"amount": "- amount to be added to pool", "pool": "- pool to find concentration of"}}, "getTotalAUMinUSD()": {"details": "function to get the total USD value of all assets in the protocol iterates through all the pools to get their usd value and adds all the values together"}, "liquidityCheck(uint256)": {"details": "function that finds which pools need to be rebalanced through a withdraw", "params": {"_amount": "- how much usd is to be withdrawn Calculates new aum and how much money has to be added/removed from pool to reach the target concentration Checks which pool have to have money removed (and how much) and adds them to the array "}}, "setFactory(address)": {"details": "function to set the factory address", "params": {"_factory": "(address of the factory)"}}, "setTargetConcentration(address,uint256)": {"details": "function to update the target concentration of a specific pool ", "params": {"_pool": "- address of tokenPool", "_target": "- value of target concentration"}}, "tokensToWithdraw(uint256)": {"details": "function to get the pools to withdraw from and the amount to withdraw from each pool", "params": {"_amount": "- amount in usd to be withdrawn"}}}, "version": 1}, "offset": [179, 8372], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAC73B1BB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC73B1BB EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xBCCC01BA EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xC0F1CCE5 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xD04238EE EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x989796B5 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x9A9F3E35 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x9B765339 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F41ADDD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x3F41ADDD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x55BE04AD EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x5BB47808 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x675C7C71 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xC0F916 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x29857FD1 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x2DB20886 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x3E85D5F0 EQ PUSH2 0x19B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x136 JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x136 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP3 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x136 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x122 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH2 0x208 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1AE PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x122 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x341 JUMPI PUSH2 0x341 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x386 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x35F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x393 PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3A1 DUP7 DUP4 PUSH2 0xF28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3C3 JUMPI PUSH2 0x3C3 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BA2F531 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP5 POP DUP5 SWAP3 PUSH4 0x1BA2F531 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x415 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH3 0xF4240 PUSH2 0x463 DUP4 DUP9 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x46D SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 PUSH2 0x483 DUP3 DUP6 PUSH2 0xF28 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x4B5 JUMPI PUSH2 0x4B5 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH2 0x4F7 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP5 PUSH1 0x1 ADD SWAP5 POP POP POP POP POP PUSH2 0x3A6 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x0 SWAP1 DUP2 DUP1 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x593 JUMPI DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x554 JUMPI PUSH2 0x554 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 LT ISZERO PUSH2 0x58B JUMPI DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x579 JUMPI PUSH2 0x579 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x53A JUMP JUMPDEST POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5A6 JUMPI PUSH2 0x5A6 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 SWAP5 POP SWAP5 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5C6 PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BA2F531 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x608 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0xF55 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x651 JUMPI DUP2 PUSH2 0x642 PUSH3 0xF4240 DUP4 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH2 0x66B DUP6 PUSH2 0x75F JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x69C JUMPI PUSH2 0x69C PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x6BB DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x6E2 SWAP1 DUP4 PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP PUSH3 0x7A120 DUP2 SGT ISZERO PUSH2 0x6FB JUMPI PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SWAP4 POP POP POP POP PUSH2 0x67F JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH4 0xDA476DD7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x76D DUP5 PUSH2 0x320 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78D PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7B6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D4 JUMPI PUSH2 0x7D4 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7FD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 PUSH2 0x818 DUP9 PUSH2 0x51D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP11 DUP5 LT DUP1 ISZERO PUSH2 0x839 JUMPI POP DUP11 DUP3 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xFEE JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x8C9 JUMPI PUSH2 0x848 DUP5 DUP13 PUSH2 0xF28 JUMP JUMPDEST DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x85A JUMPI PUSH2 0x85A PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x87D JUMPI PUSH2 0x87D PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8AF JUMPI PUSH2 0x8AF PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x8C2 SWAP2 SWAP1 PUSH2 0xFEE JUMP JUMPDEST SWAP4 POP PUSH2 0x971 JUMP JUMPDEST DUP11 DUP5 LT DUP1 ISZERO PUSH2 0x8E7 JUMPI POP DUP11 DUP3 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0xFEE JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x971 JUMPI DUP2 PUSH1 0x20 ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x903 JUMPI PUSH2 0x903 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x926 JUMPI PUSH2 0x926 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x94A SWAP1 DUP6 PUSH2 0xFEE JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x960 JUMPI PUSH2 0x960 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x804 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520666163746F72792063616E2061646420746F6B656E2070 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6F6F6C73 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD SWAP1 SWAP2 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 AND DUP9 OR SWAP1 SSTORE SWAP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE DUP6 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND SWAP1 SWAP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB31 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA0 JUMPI PUSH2 0xAA0 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BA2F531 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP5 POP DUP5 SWAP3 PUSH4 0x1BA2F531 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0xF55 JUMP JUMPDEST SWAP1 POP PUSH2 0xB22 DUP2 DUP7 PUSH2 0xFEE JUMP JUMPDEST SWAP5 POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xA83 JUMP JUMPDEST POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB44 PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BA2F531 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH2 0xBB5 SWAP2 SWAP1 PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0xBDA JUMPI DUP2 PUSH2 0xBCB PUSH3 0xF4240 DUP4 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDA476DD7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC99 JUMPI PUSH2 0xC89 DUP5 DUP4 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC63 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCDF JUMPI PUSH2 0xCDF PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD0E JUMPI PUSH2 0xD0E PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD83 JUMPI PUSH2 0xD83 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0xD91 DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xCE5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 DUP5 DUP10 SUB SLT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDD7 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0xDE0 DUP6 PUSH2 0xD16 JUMP JUMPDEST DUP2 MSTORE DUP5 DUP7 ADD CALLDATALOAD DUP7 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE21 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE6A JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE45 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP6 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE9F JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xE83 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xECA DUP5 PUSH2 0xD16 JUMP JUMPDEST SWAP3 POP PUSH2 0xED8 PUSH1 0x20 DUP6 ADD PUSH2 0xD16 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF04 DUP4 PUSH2 0xD16 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF3A PUSH2 0xF12 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF88 PUSH2 0xF12 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0xFF SHL DUP6 ADD DUP5 SLT AND ISZERO PUSH2 0xFCD JUMPI PUSH2 0xFCD PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0xFE8 JUMPI PUSH2 0xFE8 PUSH2 0xF12 JUMP JUMPDEST POP POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1001 JUMPI PUSH2 0x1001 PUSH2 0xF12 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xB3B39CBEB699235646617889D07B89C084D72C3653 0x2F PUSH16 0xCF23052E3334092964736F6C63430008 0xC STOP CALLER ", "pcMap": {"0": {"offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0x80"}, "2": {"fn": null, "offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0x40"}, "4": {"fn": null, "offset": [179, 8372], "op": "MSTORE", "path": "5"}, "5": {"fn": null, "offset": [179, 8372], "op": "CALLVALUE", "path": "5"}, "6": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "7": {"fn": null, "offset": [179, 8372], "op": "ISZERO", "path": "5"}, "8": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x10"}, "11": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "12": {"fn": null, "offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0x0"}, "14": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [179, 8372], "op": "REVERT", "path": "5"}, "16": {"fn": null, "offset": [179, 8372], "op": "JUMPDEST", "path": "5"}, "17": {"fn": null, "offset": [179, 8372], "op": "POP", "path": "5"}, "18": {"fn": null, "offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0x4"}, "20": {"fn": null, "offset": [179, 8372], "op": "CALLDATASIZE", "path": "5"}, "21": {"fn": null, "offset": [179, 8372], "op": "LT", "path": "5"}, "22": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x10A"}, "25": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "26": {"fn": null, "offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0x0"}, "28": {"fn": null, "offset": [179, 8372], "op": "CALLDATALOAD", "path": "5"}, "29": {"fn": null, "offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0xE0"}, "31": {"fn": null, "offset": [179, 8372], "op": "SHR", "path": "5"}, "32": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "33": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x8DA5CB5B"}, "38": {"fn": null, "offset": [179, 8372], "op": "GT", "path": "5"}, "39": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0xA2"}, "42": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "43": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "44": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0xAC73B1BB"}, "49": {"fn": null, "offset": [179, 8372], "op": "GT", "path": "5"}, "50": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x71"}, "53": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "54": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "55": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0xAC73B1BB"}, "60": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "61": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x28C"}, "64": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "65": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "66": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0xBCCC01BA"}, "71": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "72": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x2B5"}, "75": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "76": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "77": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0xC0F1CCE5"}, "82": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "83": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x2BD"}, "86": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "87": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "88": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0xC45A0155"}, "93": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "94": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x2D0"}, "97": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "98": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "99": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0xD04238EE"}, "104": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "105": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x2E3"}, "108": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "109": {"fn": null, "offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0x0"}, "111": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "112": {"fn": null, "offset": [179, 8372], "op": "REVERT", "path": "5"}, "113": {"fn": null, "offset": [179, 8372], "op": "JUMPDEST", "path": "5"}, "114": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "115": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x8DA5CB5B"}, "120": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "121": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x22A"}, "124": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "125": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "126": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x989796B5"}, "131": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "132": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x23D"}, "135": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "136": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "137": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x9A9F3E35"}, "142": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "143": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x266"}, "146": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "147": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "148": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x9B765339"}, "153": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "154": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x279"}, "157": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "158": {"fn": null, "offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0x0"}, "160": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "161": {"fn": null, "offset": [179, 8372], "op": "REVERT", "path": "5"}, "162": {"fn": null, "offset": [179, 8372], "op": "JUMPDEST", "path": "5"}, "163": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "164": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x3F41ADDD"}, "169": {"fn": null, "offset": [179, 8372], "op": "GT", "path": "5"}, "170": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0xDE"}, "173": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "174": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "175": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x3F41ADDD"}, "180": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "181": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x1BC"}, "184": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "185": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "186": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x55BE04AD"}, "191": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "192": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x1DD"}, "195": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "196": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "197": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x5BB47808"}, "202": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "203": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x1F5"}, "206": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "207": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "208": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x675C7C71"}, "213": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "214": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x20A"}, "217": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "218": {"fn": null, "offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0x0"}, "220": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "221": {"fn": null, "offset": [179, 8372], "op": "REVERT", "path": "5"}, "222": {"fn": null, "offset": [179, 8372], "op": "JUMPDEST", "path": "5"}, "223": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "224": {"fn": null, "offset": [179, 8372], "op": "PUSH3", "path": "5", "value": "0xC0F916"}, "228": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "229": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x10F"}, "232": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "233": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "234": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x29857FD1"}, "239": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "240": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x13F"}, "243": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "244": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "245": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x2DB20886"}, "250": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "251": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x15F"}, "254": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "255": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "256": {"fn": null, "offset": [179, 8372], "op": "PUSH4", "path": "5", "value": "0x3E85D5F0"}, "261": {"fn": null, "offset": [179, 8372], "op": "EQ", "path": "5"}, "262": {"fn": null, "offset": [179, 8372], "op": "PUSH2", "path": "5", "value": "0x19B"}, "265": {"fn": null, "offset": [179, 8372], "op": "JUMPI", "path": "5"}, "266": {"fn": null, "offset": [179, 8372], "op": "JUMPDEST", "path": "5"}, "267": {"fn": null, "offset": [179, 8372], "op": "PUSH1", "path": "5", "value": "0x0"}, "269": {"fn": null, "offset": [179, 8372], "op": "DUP1", "path": "5"}, "270": {"first_revert": true, "fn": null, "offset": [179, 8372], "op": "REVERT", "path": "5"}, "271": {"offset": [233, 260], "op": "JUMPDEST", "path": "5"}, "272": {"fn": null, "offset": [233, 260], "op": "PUSH2", "path": "5", "value": "0x122"}, "275": {"fn": null, "offset": [233, 260], "op": "PUSH2", "path": "5", "value": "0x11D"}, "278": {"fn": null, "offset": [233, 260], "op": "CALLDATASIZE", "path": "5"}, "279": {"fn": null, "offset": [233, 260], "op": "PUSH1", "path": "5", "value": "0x4"}, "281": {"fn": null, "offset": [233, 260], "op": "PUSH2", "path": "5", "value": "0xC2D"}, "284": {"fn": null, "jump": "i", "offset": [233, 260], "op": "JUMP", "path": "5"}, "285": {"fn": null, "offset": [233, 260], "op": "JUMPDEST", "path": "5"}, "286": {"fn": null, "offset": [233, 260], "op": "PUSH2", "path": "5", "value": "0x2F6"}, "289": {"fn": null, "jump": "i", "offset": [233, 260], "op": "JUMP", "path": "5"}, "290": {"fn": null, "offset": [233, 260], "op": "JUMPDEST", "path": "5"}, "291": {"fn": null, "offset": [233, 260], "op": "PUSH1", "path": "5", "value": "0x40"}, "293": {"fn": null, "offset": [233, 260], "op": "MLOAD", "path": "5"}, "294": {"op": "PUSH1", "value": "0x1"}, "296": {"op": "PUSH1", "value": "0x1"}, "298": {"op": "PUSH1", "value": "0xA0"}, "300": {"op": "SHL"}, "301": {"op": "SUB"}, "302": {"op": "SWAP1"}, "303": {"op": "SWAP2"}, "304": {"op": "AND"}, "305": {"op": "DUP2"}, "306": {"op": "MSTORE"}, "307": {"op": "PUSH1", "value": "0x20"}, "309": {"op": "ADD"}, "310": {"offset": [233, 260], "op": "JUMPDEST", "path": "5"}, "311": {"fn": null, "offset": [233, 260], "op": "PUSH1", "path": "5", "value": "0x40"}, "313": {"fn": null, "offset": [233, 260], "op": "MLOAD", "path": "5"}, "314": {"fn": null, "offset": [233, 260], "op": "DUP1", "path": "5"}, "315": {"fn": null, "offset": [233, 260], "op": "SWAP2", "path": "5"}, "316": {"fn": null, "offset": [233, 260], "op": "SUB", "path": "5"}, "317": {"fn": null, "offset": [233, 260], "op": "SWAP1", "path": "5"}, "318": {"fn": null, "offset": [233, 260], "op": "RETURN", "path": "5"}, "319": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "JUMPDEST", "path": "5"}, "320": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "PUSH2", "path": "5", "value": "0x152"}, "323": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "PUSH2", "path": "5", "value": "0x14D"}, "326": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "CALLDATASIZE", "path": "5"}, "327": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "PUSH1", "path": "5", "value": "0x4"}, "329": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "PUSH2", "path": "5", "value": "0xC2D"}, "332": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3236, 4108], "op": "JUMP", "path": "5"}, "333": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "JUMPDEST", "path": "5"}, "334": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "PUSH2", "path": "5", "value": "0x320"}, "337": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3236, 4108], "op": "JUMP", "path": "5"}, "338": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "JUMPDEST", "path": "5"}, "339": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "PUSH1", "path": "5", "value": "0x40"}, "341": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "MLOAD", "path": "5"}, "342": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "PUSH2", "path": "5", "value": "0x136"}, "345": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "SWAP2", "path": "5"}, "346": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "SWAP1", "path": "5"}, "347": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "PUSH2", "path": "5", "value": "0xC46"}, "350": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3236, 4108], "op": "JUMP", "path": "5"}, "351": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "JUMPDEST", "path": "5"}, "352": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "PUSH2", "path": "5", "value": "0x172"}, "355": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "PUSH2", "path": "5", "value": "0x16D"}, "358": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "CALLDATASIZE", "path": "5"}, "359": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "PUSH1", "path": "5", "value": "0x4"}, "361": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "PUSH2", "path": "5", "value": "0xD32"}, "364": {"fn": "Registry.findMax", "jump": "i", "offset": [5503, 5936], "op": "JUMP", "path": "5"}, "365": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "JUMPDEST", "path": "5"}, "366": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "PUSH2", "path": "5", "value": "0x51D"}, "369": {"fn": "Registry.findMax", "jump": "i", "offset": [5503, 5936], "op": "JUMP", "path": "5"}, "370": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "JUMPDEST", "path": "5"}, "371": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "PUSH1", "path": "5", "value": "0x40"}, "373": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "DUP1", "path": "5"}, "374": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "MLOAD", "path": "5"}, "375": {"op": "DUP4"}, "376": {"op": "MLOAD"}, "377": {"op": "PUSH1", "value": "0x1"}, "379": {"op": "PUSH1", "value": "0x1"}, "381": {"op": "PUSH1", "value": "0xA0"}, "383": {"op": "SHL"}, "384": {"op": "SUB"}, "385": {"op": "AND"}, "386": {"op": "DUP2"}, "387": {"op": "MSTORE"}, "388": {"op": "PUSH1", "value": "0x20"}, "390": {"op": "SWAP4"}, "391": {"op": "DUP5"}, "392": {"op": "ADD"}, "393": {"op": "MLOAD"}, "394": {"op": "SWAP4"}, "395": {"op": "DUP2"}, "396": {"op": "ADD"}, "397": {"op": "SWAP4"}, "398": {"op": "SWAP1"}, "399": {"op": "SWAP4"}, "400": {"op": "MSTORE"}, "401": {"op": "DUP3"}, "402": {"op": "ADD"}, "403": {"op": "MSTORE"}, "404": {"op": "PUSH1", "value": "0x60"}, "406": {"op": "ADD"}, "407": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "PUSH2", "path": "5", "value": "0x136"}, "410": {"op": "JUMP"}, "411": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "JUMPDEST", "path": "5"}, "412": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "PUSH2", "path": "5", "value": "0x1AE"}, "415": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "PUSH2", "path": "5", "value": "0x1A9"}, "418": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "CALLDATASIZE", "path": "5"}, "419": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "PUSH1", "path": "5", "value": "0x4"}, "421": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "PUSH2", "path": "5", "value": "0xE06"}, "424": {"fn": "Registry.getConcentration", "jump": "i", "offset": [6060, 6322], "op": "JUMP", "path": "5"}, "425": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "JUMPDEST", "path": "5"}, "426": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "PUSH2", "path": "5", "value": "0x5BB"}, "429": {"fn": "Registry.getConcentration", "jump": "i", "offset": [6060, 6322], "op": "JUMP", "path": "5"}, "430": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "JUMPDEST", "path": "5"}, "431": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "PUSH1", "path": "5", "value": "0x40"}, "433": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "MLOAD", "path": "5"}, "434": {"op": "SWAP1"}, "435": {"op": "DUP2"}, "436": {"op": "MSTORE"}, "437": {"op": "PUSH1", "value": "0x20"}, "439": {"op": "ADD"}, "440": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "PUSH2", "path": "5", "value": "0x136"}, "443": {"op": "JUMP"}, "444": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "JUMPDEST", "path": "5"}, "445": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "PUSH2", "path": "5", "value": "0x1CF"}, "448": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "PUSH2", "path": "5", "value": "0x1CA"}, "451": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "CALLDATASIZE", "path": "5"}, "452": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "PUSH1", "path": "5", "value": "0x4"}, "454": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "PUSH2", "path": "5", "value": "0xC2D"}, "457": {"fn": "Registry.tokensToWithdraw", "jump": "i", "offset": [2674, 2900], "op": "JUMP", "path": "5"}, "458": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "JUMPDEST", "path": "5"}, "459": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "PUSH2", "path": "5", "value": "0x65C"}, "462": {"fn": "Registry.tokensToWithdraw", "jump": "i", "offset": [2674, 2900], "op": "JUMP", "path": "5"}, "463": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "JUMPDEST", "path": "5"}, "464": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "PUSH1", "path": "5", "value": "0x40"}, "466": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "MLOAD", "path": "5"}, "467": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "PUSH2", "path": "5", "value": "0x136"}, "470": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "SWAP3", "path": "5"}, "471": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "SWAP2", "path": "5"}, "472": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "SWAP1", "path": "5"}, "473": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "PUSH2", "path": "5", "value": "0xE28"}, "476": {"fn": "Registry.tokensToWithdraw", "jump": "i", "offset": [2674, 2900], "op": "JUMP", "path": "5"}, "477": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "JUMPDEST", "path": "5"}, "478": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "PUSH2", "path": "5", "value": "0x1E5"}, "481": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "PUSH2", "path": "5", "value": "0x677"}, "484": {"fn": "Registry.checkDeposit", "jump": "i", "offset": [6929, 7386], "op": "JUMP", "path": "5"}, "485": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "JUMPDEST", "path": "5"}, "486": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "PUSH1", "path": "5", "value": "0x40"}, "488": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "MLOAD", "path": "5"}, "489": {"op": "SWAP1"}, "490": {"op": "ISZERO"}, "491": {"op": "ISZERO"}, "492": {"op": "DUP2"}, "493": {"op": "MSTORE"}, "494": {"op": "PUSH1", "value": "0x20"}, "496": {"op": "ADD"}, "497": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "PUSH2", "path": "5", "value": "0x136"}, "500": {"op": "JUMP"}, "501": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "JUMPDEST", "path": "5"}, "502": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "PUSH2", "path": "5", "value": "0x208"}, "505": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "PUSH2", "path": "5", "value": "0x203"}, "508": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "CALLDATASIZE", "path": "5"}, "509": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "PUSH1", "path": "5", "value": "0x4"}, "511": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "PUSH2", "path": "5", "value": "0xE06"}, "514": {"fn": "Registry.setFactory", "jump": "i", "offset": [993, 1085], "op": "JUMP", "path": "5"}, "515": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "JUMPDEST", "path": "5"}, "516": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "PUSH2", "path": "5", "value": "0x712"}, "519": {"fn": "Registry.setFactory", "jump": "i", "offset": [993, 1085], "op": "JUMP", "path": "5"}, "520": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "JUMPDEST", "path": "5"}, "521": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "STOP", "path": "5"}, "522": {"offset": [385, 440], "op": "JUMPDEST", "path": "5"}, "523": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "PUSH2", "path": "5", "value": "0x1AE"}, "526": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "PUSH2", "path": "5", "value": "0x218"}, "529": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "CALLDATASIZE", "path": "5"}, "530": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "PUSH1", "path": "5", "value": "0x4"}, "532": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "PUSH2", "path": "5", "value": "0xE06"}, "535": {"fn": "Registry.setFactory", "jump": "i", "offset": [385, 440], "op": "JUMP", "path": "5"}, "536": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "JUMPDEST", "path": "5"}, "537": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "PUSH1", "path": "5", "value": "0x5"}, "539": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "PUSH1", "path": "5", "value": "0x20"}, "541": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "MSTORE", "path": "5"}, "542": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "PUSH1", "path": "5", "value": "0x0"}, "544": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "SWAP1", "path": "5"}, "545": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "DUP2", "path": "5"}, "546": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "MSTORE", "path": "5"}, "547": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "PUSH1", "path": "5", "value": "0x40"}, "549": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "SWAP1", "path": "5"}, "550": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "KECCAK256", "path": "5"}, "551": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "SLOAD", "path": "5"}, "552": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "DUP2", "path": "5"}, "553": {"fn": "Registry.setFactory", "offset": [385, 440], "op": "JUMP", "path": "5"}, "554": {"offset": [211, 231], "op": "JUMPDEST", "path": "5"}, "555": {"fn": "Registry.setFactory", "offset": [211, 231], "op": "PUSH1", "path": "5", "value": "0x0"}, "557": {"fn": "Registry.setFactory", "offset": [211, 231], "op": "SLOAD", "path": "5"}, "558": {"fn": "Registry.setFactory", "offset": [211, 231], "op": "PUSH2", "path": "5", "value": "0x122"}, "561": {"fn": "Registry.setFactory", "offset": [211, 231], "op": "SWAP1", "path": "5"}, "562": {"op": "PUSH1", "value": "0x1"}, "564": {"op": "PUSH1", "value": "0x1"}, "566": {"op": "PUSH1", "value": "0xA0"}, "568": {"op": "SHL"}, "569": {"op": "SUB"}, "570": {"offset": [211, 231], "op": "AND", "path": "5"}, "571": {"fn": "Registry.setFactory", "offset": [211, 231], "op": "DUP2", "path": "5"}, "572": {"fn": "Registry.setFactory", "offset": [211, 231], "op": "JUMP", "path": "5"}, "573": {"offset": [287, 334], "op": "JUMPDEST", "path": "5"}, "574": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "PUSH2", "path": "5", "value": "0x122"}, "577": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "PUSH2", "path": "5", "value": "0x24B"}, "580": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "CALLDATASIZE", "path": "5"}, "581": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "PUSH1", "path": "5", "value": "0x4"}, "583": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "PUSH2", "path": "5", "value": "0xE06"}, "586": {"fn": "Registry.setFactory", "jump": "i", "offset": [287, 334], "op": "JUMP", "path": "5"}, "587": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "JUMPDEST", "path": "5"}, "588": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "PUSH1", "path": "5", "value": "0x3"}, "590": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "PUSH1", "path": "5", "value": "0x20"}, "592": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "MSTORE", "path": "5"}, "593": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "PUSH1", "path": "5", "value": "0x0"}, "595": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "SWAP1", "path": "5"}, "596": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "DUP2", "path": "5"}, "597": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "MSTORE", "path": "5"}, "598": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "PUSH1", "path": "5", "value": "0x40"}, "600": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "SWAP1", "path": "5"}, "601": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "KECCAK256", "path": "5"}, "602": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "SLOAD", "path": "5"}, "603": {"op": "PUSH1", "value": "0x1"}, "605": {"op": "PUSH1", "value": "0x1"}, "607": {"op": "PUSH1", "value": "0xA0"}, "609": {"op": "SHL"}, "610": {"op": "SUB"}, "611": {"offset": [287, 334], "op": "AND", "path": "5"}, "612": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "DUP2", "path": "5"}, "613": {"fn": "Registry.setFactory", "offset": [287, 334], "op": "JUMP", "path": "5"}, "614": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "JUMPDEST", "path": "5"}, "615": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "PUSH2", "path": "5", "value": "0x1CF"}, "618": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "PUSH2", "path": "5", "value": "0x274"}, "621": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "CALLDATASIZE", "path": "5"}, "622": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "PUSH1", "path": "5", "value": "0x4"}, "624": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "PUSH2", "path": "5", "value": "0xC2D"}, "627": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4425, 5367], "op": "JUMP", "path": "5"}, "628": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "JUMPDEST", "path": "5"}, "629": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "PUSH2", "path": "5", "value": "0x75F"}, "632": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4425, 5367], "op": "JUMP", "path": "5"}, "633": {"fn": "Registry.addTokenPool", "offset": [1298, 1651], "op": "JUMPDEST", "path": "5"}, "634": {"fn": "Registry.addTokenPool", "offset": [1298, 1651], "op": "PUSH2", "path": "5", "value": "0x208"}, "637": {"fn": "Registry.addTokenPool", "offset": [1298, 1651], "op": "PUSH2", "path": "5", "value": "0x287"}, "640": {"fn": "Registry.addTokenPool", "offset": [1298, 1651], "op": "CALLDATASIZE", "path": "5"}, "641": {"fn": "Registry.addTokenPool", "offset": [1298, 1651], "op": "PUSH1", "path": "5", "value": "0x4"}, "643": {"fn": "Registry.addTokenPool", "offset": [1298, 1651], "op": "PUSH2", "path": "5", "value": "0xEAC"}, "646": {"fn": "Registry.addTokenPool", "jump": "i", "offset": [1298, 1651], "op": "JUMP", "path": "5"}, "647": {"fn": "Registry.addTokenPool", "offset": [1298, 1651], "op": "JUMPDEST", "path": "5"}, "648": {"fn": "Registry.addTokenPool", "offset": [1298, 1651], "op": "PUSH2", "path": "5", "value": "0x989"}, "651": {"fn": "Registry.addTokenPool", "jump": "i", "offset": [1298, 1651], "op": "JUMP", "path": "5"}, "652": {"offset": [336, 383], "op": "JUMPDEST", "path": "5"}, "653": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "PUSH2", "path": "5", "value": "0x122"}, "656": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "PUSH2", "path": "5", "value": "0x29A"}, "659": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "CALLDATASIZE", "path": "5"}, "660": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "PUSH1", "path": "5", "value": "0x4"}, "662": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "PUSH2", "path": "5", "value": "0xE06"}, "665": {"fn": "Registry.addTokenPool", "jump": "i", "offset": [336, 383], "op": "JUMP", "path": "5"}, "666": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "JUMPDEST", "path": "5"}, "667": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "PUSH1", "path": "5", "value": "0x4"}, "669": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "PUSH1", "path": "5", "value": "0x20"}, "671": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "MSTORE", "path": "5"}, "672": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "PUSH1", "path": "5", "value": "0x0"}, "674": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "SWAP1", "path": "5"}, "675": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "DUP2", "path": "5"}, "676": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "MSTORE", "path": "5"}, "677": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "PUSH1", "path": "5", "value": "0x40"}, "679": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "SWAP1", "path": "5"}, "680": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "KECCAK256", "path": "5"}, "681": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "SLOAD", "path": "5"}, "682": {"op": "PUSH1", "value": "0x1"}, "684": {"op": "PUSH1", "value": "0x1"}, "686": {"op": "PUSH1", "value": "0xA0"}, "688": {"op": "SHL"}, "689": {"op": "SUB"}, "690": {"offset": [336, 383], "op": "AND", "path": "5"}, "691": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "DUP2", "path": "5"}, "692": {"fn": "Registry.addTokenPool", "offset": [336, 383], "op": "JUMP", "path": "5"}, "693": {"fn": "Registry.getTotalAUMinUSD", "offset": [2147, 2522], "op": "JUMPDEST", "path": "5"}, "694": {"fn": "Registry.getTotalAUMinUSD", "offset": [2147, 2522], "op": "PUSH2", "path": "5", "value": "0x1AE"}, "697": {"fn": "Registry.getTotalAUMinUSD", "offset": [2147, 2522], "op": "PUSH2", "path": "5", "value": "0xA79"}, "700": {"fn": "Registry.getTotalAUMinUSD", "jump": "i", "offset": [2147, 2522], "op": "JUMP", "path": "5"}, "701": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "JUMPDEST", "path": "5"}, "702": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "PUSH2", "path": "5", "value": "0x1AE"}, "705": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "PUSH2", "path": "5", "value": "0x2CB"}, "708": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "CALLDATASIZE", "path": "5"}, "709": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "PUSH1", "path": "5", "value": "0x4"}, "711": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "PUSH2", "path": "5", "value": "0xEE8"}, "714": {"fn": "Registry.getNewConcentration", "jump": "i", "offset": [6520, 6826], "op": "JUMP", "path": "5"}, "715": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "JUMPDEST", "path": "5"}, "716": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "PUSH2", "path": "5", "value": "0xB39"}, "719": {"fn": "Registry.getNewConcentration", "jump": "i", "offset": [6520, 6826], "op": "JUMP", "path": "5"}, "720": {"offset": [262, 284], "op": "JUMPDEST", "path": "5"}, "721": {"fn": "Registry.getNewConcentration", "offset": [262, 284], "op": "PUSH1", "path": "5", "value": "0x2"}, "723": {"fn": "Registry.getNewConcentration", "offset": [262, 284], "op": "SLOAD", "path": "5"}, "724": {"fn": "Registry.getNewConcentration", "offset": [262, 284], "op": "PUSH2", "path": "5", "value": "0x122"}, "727": {"fn": "Registry.getNewConcentration", "offset": [262, 284], "op": "SWAP1", "path": "5"}, "728": {"op": "PUSH1", "value": "0x1"}, "730": {"op": "PUSH1", "value": "0x1"}, "732": {"op": "PUSH1", "value": "0xA0"}, "734": {"op": "SHL"}, "735": {"op": "SUB"}, "736": {"offset": [262, 284], "op": "AND", "path": "5"}, "737": {"fn": "Registry.getNewConcentration", "offset": [262, 284], "op": "DUP2", "path": "5"}, "738": {"fn": "Registry.getNewConcentration", "offset": [262, 284], "op": "JUMP", "path": "5"}, "739": {"fn": "Registry.setTargetConcentration", "offset": [1818, 1974], "op": "JUMPDEST", "path": "5"}, "740": {"fn": "Registry.setTargetConcentration", "offset": [1818, 1974], "op": "PUSH2", "path": "5", "value": "0x208"}, "743": {"fn": "Registry.setTargetConcentration", "offset": [1818, 1974], "op": "PUSH2", "path": "5", "value": "0x2F1"}, "746": {"fn": "Registry.setTargetConcentration", "offset": [1818, 1974], "op": "CALLDATASIZE", "path": "5"}, "747": {"fn": "Registry.setTargetConcentration", "offset": [1818, 1974], "op": "PUSH1", "path": "5", "value": "0x4"}, "749": {"fn": "Registry.setTargetConcentration", "offset": [1818, 1974], "op": "PUSH2", "path": "5", "value": "0xEE8"}, "752": {"fn": "Registry.setTargetConcentration", "jump": "i", "offset": [1818, 1974], "op": "JUMP", "path": "5"}, "753": {"fn": "Registry.setTargetConcentration", "offset": [1818, 1974], "op": "JUMPDEST", "path": "5"}, "754": {"fn": "Registry.setTargetConcentration", "offset": [1818, 1974], "op": "PUSH2", "path": "5", "value": "0xBE6"}, "757": {"fn": "Registry.setTargetConcentration", "jump": "i", "offset": [1818, 1974], "op": "JUMP", "path": "5"}, "758": {"offset": [233, 260], "op": "JUMPDEST", "path": "5"}, "759": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "PUSH1", "path": "5", "value": "0x1"}, "761": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "DUP2", "path": "5"}, "762": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "DUP2", "path": "5"}, "763": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "SLOAD", "path": "5"}, "764": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "DUP2", "path": "5"}, "765": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "LT", "path": "5"}, "766": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "PUSH2", "path": "5", "value": "0x306"}, "769": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "JUMPI", "path": "5"}, "770": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "PUSH1", "path": "5", "value": "0x0"}, "772": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "DUP1", "path": "5"}, "773": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "REVERT", "path": "5"}, "774": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "JUMPDEST", "path": "5"}, "775": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "PUSH1", "path": "5", "value": "0x0"}, "777": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "SWAP2", "path": "5"}, "778": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "DUP3", "path": "5"}, "779": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "MSTORE", "path": "5"}, "780": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "PUSH1", "path": "5", "value": "0x20"}, "782": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "SWAP1", "path": "5"}, "783": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "SWAP2", "path": "5"}, "784": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "KECCAK256", "path": "5"}, "785": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "ADD", "path": "5"}, "786": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "SLOAD", "path": "5"}, "787": {"op": "PUSH1", "value": "0x1"}, "789": {"op": "PUSH1", "value": "0x1"}, "791": {"op": "PUSH1", "value": "0xA0"}, "793": {"op": "SHL"}, "794": {"op": "SUB"}, "795": {"offset": [233, 260], "op": "AND", "path": "5"}, "796": {"fn": "Registry.setTargetConcentration", "offset": [233, 260], "op": "SWAP1", "path": "5"}, "797": {"op": "POP"}, "798": {"offset": [233, 260], "op": "DUP2", "path": "5"}, "799": {"fn": "Registry.setTargetConcentration", "jump": "o", "offset": [233, 260], "op": "JUMP", "path": "5"}, "800": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "JUMPDEST", "path": "5"}, "801": {"fn": "Registry.liquidityCheck", "offset": [3341, 3351], "op": "PUSH1", "path": "5", "value": "0x1"}, "803": {"fn": "Registry.liquidityCheck", "offset": [3341, 3358], "op": "SLOAD", "path": "5"}, "804": {"fn": "Registry.liquidityCheck", "offset": [3297, 3317], "op": "PUSH1", "path": "5", "value": "0x60"}, "806": {"fn": "Registry.liquidityCheck", "offset": [3297, 3317], "op": "SWAP1", "path": "5"}, "807": {"fn": "Registry.liquidityCheck", "offset": [3330, 3338], "op": "PUSH1", "path": "5", "value": "0x0"}, "809": {"fn": "Registry.liquidityCheck", "offset": [3341, 3358], "op": "DUP2", "path": "5"}, "810": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH8", "path": "5", "value": "0xFFFFFFFFFFFFFFFF"}, "819": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "DUP2", "path": "5"}, "820": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "GT", "path": "5"}, "821": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "ISZERO", "path": "5"}, "822": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH2", "path": "5", "value": "0x341"}, "825": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "JUMPI", "path": "5"}, "826": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH2", "path": "5", "value": "0x341"}, "829": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH2", "path": "5", "value": "0xCA6"}, "832": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3400, 3422], "op": "JUMP", "path": "5"}, "833": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "JUMPDEST", "path": "5"}, "834": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH1", "path": "5", "value": "0x40"}, "836": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "MLOAD", "path": "5"}, "837": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "SWAP1", "path": "5"}, "838": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "DUP1", "path": "5"}, "839": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "DUP3", "path": "5"}, "840": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "MSTORE", "path": "5"}, "841": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "DUP1", "path": "5"}, "842": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH1", "path": "5", "value": "0x20"}, "844": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "MUL", "path": "5"}, "845": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH1", "path": "5", "value": "0x20"}, "847": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "ADD", "path": "5"}, "848": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "DUP3", "path": "5"}, "849": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "ADD", "path": "5"}, "850": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH1", "path": "5", "value": "0x40"}, "852": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "MSTORE", "path": "5"}, "853": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "DUP1", "path": "5"}, "854": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "ISZERO", "path": "5"}, "855": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH2", "path": "5", "value": "0x386"}, "858": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "JUMPI", "path": "5"}, "859": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "DUP2", "path": "5"}, "860": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH1", "path": "5", "value": "0x20"}, "862": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "ADD", "path": "5"}, "863": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "JUMPDEST", "path": "5"}, "864": {"op": "PUSH1", "value": "0x40"}, "866": {"op": "DUP1"}, "867": {"op": "MLOAD"}, "868": {"op": "DUP1"}, "869": {"op": "DUP3"}, "870": {"op": "ADD"}, "871": {"op": "SWAP1"}, "872": {"op": "SWAP2"}, "873": {"op": "MSTORE"}, "874": {"op": "PUSH1", "value": "0x0"}, "876": {"op": "DUP1"}, "877": {"op": "DUP3"}, "878": {"op": "MSTORE"}, "879": {"op": "PUSH1", "value": "0x20"}, "881": {"op": "DUP3"}, "882": {"op": "ADD"}, "883": {"op": "MSTORE"}, "884": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "DUP2", "path": "5"}, "885": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "MSTORE", "path": "5"}, "886": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH1", "path": "5", "value": "0x20"}, "888": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "ADD", "path": "5"}, "889": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "SWAP1", "path": "5"}, "890": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH1", "path": "5", "value": "0x1"}, "892": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "SWAP1", "path": "5"}, "893": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "SUB", "path": "5"}, "894": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "SWAP1", "path": "5"}, "895": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "DUP2", "path": "5"}, "896": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "PUSH2", "path": "5", "value": "0x35F"}, "899": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "JUMPI", "path": "5"}, "900": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "SWAP1", "path": "5"}, "901": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "POP", "path": "5"}, "902": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "JUMPDEST", "path": "5"}, "903": {"fn": "Registry.liquidityCheck", "offset": [3400, 3422], "op": "POP", "path": "5"}, "904": {"fn": "Registry.liquidityCheck", "offset": [3368, 3422], "op": "SWAP1", "path": "5"}, "905": {"fn": "Registry.liquidityCheck", "offset": [3368, 3422], "op": "POP", "path": "5"}, "906": {"fn": "Registry.liquidityCheck", "offset": [3432, 3440], "op": "PUSH1", "path": "5", "value": "0x0"}, "908": {"fn": "Registry.liquidityCheck", "offset": [3443, 3461], "op": "PUSH2", "path": "5", "value": "0x393"}, "911": {"fn": "Registry.liquidityCheck", "offset": [3443, 3459], "op": "PUSH2", "path": "5", "value": "0xA79"}, "914": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3443, 3461], "op": "JUMP", "path": "5"}, "915": {"fn": "Registry.liquidityCheck", "offset": [3443, 3461], "op": "JUMPDEST", "path": "5"}, "916": {"fn": "Registry.liquidityCheck", "offset": [3432, 3461], "op": "SWAP1", "path": "5"}, "917": {"op": "POP"}, "918": {"fn": "Registry.liquidityCheck", "offset": [3471, 3482], "op": "PUSH1", "path": "5", "value": "0x0"}, "920": {"fn": "Registry.liquidityCheck", "offset": [3485, 3498], "op": "PUSH2", "path": "5", "value": "0x3A1"}, "923": {"fn": "Registry.liquidityCheck", "offset": [3491, 3498], "op": "DUP7", "path": "5"}, "924": {"fn": "Registry.liquidityCheck", "offset": [3432, 3461], "op": "DUP4", "path": "5"}, "925": {"fn": "Registry.liquidityCheck", "offset": [3485, 3498], "op": "PUSH2", "path": "5", "value": "0xF28"}, "928": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3485, 3498], "op": "JUMP", "path": "5"}, "929": {"fn": "Registry.liquidityCheck", "offset": [3485, 3498], "op": "JUMPDEST", "path": "5"}, "930": {"fn": "Registry.liquidityCheck", "offset": [3471, 3498], "op": "SWAP1", "path": "5"}, "931": {"fn": "Registry.liquidityCheck", "offset": [3471, 3498], "op": "POP", "path": "5"}, "932": {"fn": "Registry.liquidityCheck", "offset": [3513, 3519], "op": "PUSH1", "path": "5", "value": "0x0"}, "934": {"fn": "Registry.liquidityCheck", "offset": [3508, 4073], "op": "JUMPDEST", "path": "5"}, "935": {"fn": "Registry.liquidityCheck", "offset": [3529, 3532], "op": "DUP5", "path": "5"}, "936": {"fn": "Registry.liquidityCheck", "offset": [3525, 3526], "op": "DUP2", "path": "5"}, "937": {"fn": "Registry.liquidityCheck", "offset": [3525, 3532], "op": "LT", "path": "5"}, "938": {"fn": "Registry.liquidityCheck", "offset": [3508, 4073], "op": "ISZERO", "path": "5"}, "939": {"fn": "Registry.liquidityCheck", "offset": [3508, 4073], "op": "PUSH2", "path": "5", "value": "0x512"}, "942": {"fn": "Registry.liquidityCheck", "offset": [3508, 4073], "op": "JUMPI", "path": "5"}, "943": {"fn": "Registry.liquidityCheck", "offset": [3549, 3561], "op": "PUSH1", "path": "5", "value": "0x0"}, "945": {"fn": "Registry.liquidityCheck", "offset": [3564, 3574], "op": "PUSH1", "path": "5", "value": "0x1"}, "947": {"fn": "Registry.liquidityCheck", "offset": [3575, 3576], "op": "DUP3", "path": "5"}, "948": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "DUP2", "path": "5"}, "949": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "SLOAD", "path": "5"}, "950": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "DUP2", "path": "5"}, "951": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "LT", "path": "5"}, "952": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "PUSH2", "path": "5", "value": "0x3C3"}, "955": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "JUMPI", "path": "5"}, "956": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "PUSH2", "path": "5", "value": "0x3C3"}, "959": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "962": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3564, 3577], "op": "JUMP", "path": "5"}, "963": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "JUMPDEST", "path": "5"}, "964": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "PUSH1", "path": "5", "value": "0x0"}, "966": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "SWAP2", "path": "5"}, "967": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "DUP3", "path": "5"}, "968": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "MSTORE", "path": "5"}, "969": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "PUSH1", "path": "5", "value": "0x20"}, "971": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "DUP1", "path": "5"}, "972": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "DUP4", "path": "5"}, "973": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "KECCAK256", "path": "5"}, "974": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "SWAP1", "path": "5"}, "975": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "SWAP2", "path": "5"}, "976": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "ADD", "path": "5"}, "977": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "SLOAD", "path": "5"}, "978": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH1", "path": "5", "value": "0x40"}, "980": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP1", "path": "5"}, "981": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "MLOAD", "path": "5"}, "982": {"op": "PUSH4", "value": "0x1BA2F531"}, "987": {"op": "PUSH1", "value": "0xE0"}, "989": {"op": "SHL"}, "990": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP2", "path": "5"}, "991": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "MSTORE", "path": "5"}, "992": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "SWAP1", "path": "5"}, "993": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "MLOAD", "path": "5"}, "994": {"op": "PUSH1", "value": "0x1"}, "996": {"op": "PUSH1", "value": "0x1"}, "998": {"op": "PUSH1", "value": "0xA0"}, "1000": {"op": "SHL"}, "1001": {"op": "SUB"}, "1002": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "SWAP1", "path": "5"}, "1003": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "SWAP3", "path": "5"}, "1004": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "AND", "path": "5"}, "1005": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "SWAP5", "path": "5"}, "1006": {"op": "POP"}, "1007": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "DUP5", "path": "5"}, "1008": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "SWAP3", "path": "5"}, "1009": {"fn": "Registry.liquidityCheck", "offset": [3613, 3642], "op": "PUSH4", "path": "5", "value": "0x1BA2F531"}, "1014": {"fn": "Registry.liquidityCheck", "offset": [3613, 3642], "op": "SWAP3", "path": "5"}, "1015": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH1", "path": "5", "value": "0x4"}, "1017": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP1", "path": "5"}, "1018": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP5", "path": "5"}, "1019": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "ADD", "path": "5"}, "1020": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "SWAP4", "path": "5"}, "1021": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP3", "path": "5"}, "1022": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "SWAP1", "path": "5"}, "1023": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "SUB", "path": "5"}, "1024": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "ADD", "path": "5"}, "1025": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP2", "path": "5"}, "1026": {"fn": "Registry.liquidityCheck", "offset": [3564, 3577], "op": "DUP7", "path": "5"}, "1027": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "GAS", "path": "5"}, "1028": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "STATICCALL", "path": "5"}, "1029": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "ISZERO", "path": "5"}, "1030": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP1", "path": "5"}, "1031": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "ISZERO", "path": "5"}, "1032": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH2", "path": "5", "value": "0x415"}, "1035": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "JUMPI", "path": "5"}, "1036": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "RETURNDATASIZE", "path": "5"}, "1037": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH1", "path": "5", "value": "0x0"}, "1039": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP1", "path": "5"}, "1040": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "RETURNDATACOPY", "path": "5"}, "1041": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "RETURNDATASIZE", "path": "5"}, "1042": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH1", "path": "5", "value": "0x0"}, "1044": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "REVERT", "path": "5"}, "1045": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "JUMPDEST", "path": "5"}, "1046": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "POP", "path": "5"}, "1047": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "POP", "path": "5"}, "1048": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "POP", "path": "5"}, "1049": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "POP", "path": "5"}, "1050": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH1", "path": "5", "value": "0x40"}, "1052": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "MLOAD", "path": "5"}, "1053": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "RETURNDATASIZE", "path": "5"}, "1054": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH1", "path": "5", "value": "0x1F"}, "1056": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "NOT", "path": "5"}, "1057": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH1", "path": "5", "value": "0x1F"}, "1059": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP3", "path": "5"}, "1060": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "ADD", "path": "5"}, "1061": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "AND", "path": "5"}, "1062": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP3", "path": "5"}, "1063": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "ADD", "path": "5"}, "1064": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP1", "path": "5"}, "1065": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH1", "path": "5", "value": "0x40"}, "1067": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "MSTORE", "path": "5"}, "1068": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "POP", "path": "5"}, "1069": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "DUP2", "path": "5"}, "1070": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "ADD", "path": "5"}, "1071": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "SWAP1", "path": "5"}, "1072": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH2", "path": "5", "value": "0x439"}, "1075": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "SWAP2", "path": "5"}, "1076": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "SWAP1", "path": "5"}, "1077": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "PUSH2", "path": "5", "value": "0xF55"}, "1080": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3613, 3644], "op": "JUMP", "path": "5"}, "1081": {"fn": "Registry.liquidityCheck", "offset": [3613, 3644], "op": "JUMPDEST", "path": "5"}, "1082": {"op": "PUSH1", "value": "0x1"}, "1084": {"op": "PUSH1", "value": "0x1"}, "1086": {"op": "PUSH1", "value": "0xA0"}, "1088": {"op": "SHL"}, "1089": {"op": "SUB"}, "1090": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "DUP4", "path": "5"}, "1091": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "AND", "path": "5"}, "1092": {"fn": "Registry.liquidityCheck", "offset": [3658, 3672], "op": "PUSH1", "path": "5", "value": "0x0"}, "1094": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "SWAP1", "path": "5"}, "1095": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "DUP2", "path": "5"}, "1096": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "MSTORE", "path": "5"}, "1097": {"fn": "Registry.liquidityCheck", "offset": [3675, 3694], "op": "PUSH1", "path": "5", "value": "0x5"}, "1099": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "PUSH1", "path": "5", "value": "0x20"}, "1101": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "MSTORE", "path": "5"}, "1102": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "PUSH1", "path": "5", "value": "0x40"}, "1104": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "DUP2", "path": "5"}, "1105": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "KECCAK256", "path": "5"}, "1106": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "SLOAD", "path": "5"}, "1107": {"fn": "Registry.liquidityCheck", "offset": [3591, 3644], "op": "SWAP2", "path": "5"}, "1108": {"fn": "Registry.liquidityCheck", "offset": [3591, 3644], "op": "SWAP3", "path": "5"}, "1109": {"op": "POP"}, "1110": {"offset": [471, 474], "op": "PUSH3", "path": "5", "value": "0xF4240"}, "1114": {"fn": "Registry.liquidityCheck", "offset": [3735, 3748], "op": "PUSH2", "path": "5", "value": "0x463"}, "1117": {"fn": "Registry.liquidityCheck", "offset": [3675, 3700], "op": "DUP4", "path": "5"}, "1118": {"fn": "Registry.liquidityCheck", "offset": [3735, 3741], "op": "DUP9", "path": "5"}, "1119": {"fn": "Registry.liquidityCheck", "offset": [3735, 3748], "op": "PUSH2", "path": "5", "value": "0xF6E"}, "1122": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3735, 3748], "op": "JUMP", "path": "5"}, "1123": {"fn": "Registry.liquidityCheck", "offset": [3735, 3748], "op": "JUMPDEST", "path": "5"}, "1124": {"fn": "Registry.liquidityCheck", "offset": [3735, 3758], "op": "PUSH2", "path": "5", "value": "0x46D"}, "1127": {"fn": "Registry.liquidityCheck", "offset": [3735, 3758], "op": "SWAP2", "path": "5"}, "1128": {"fn": "Registry.liquidityCheck", "offset": [3735, 3758], "op": "SWAP1", "path": "5"}, "1129": {"fn": "Registry.liquidityCheck", "offset": [3735, 3758], "op": "PUSH2", "path": "5", "value": "0xF8D"}, "1132": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3735, 3758], "op": "JUMP", "path": "5"}, "1133": {"fn": "Registry.liquidityCheck", "offset": [3735, 3758], "op": "JUMPDEST", "path": "5"}, "1134": {"fn": "Registry.liquidityCheck", "offset": [3714, 3758], "op": "SWAP1", "path": "5"}, "1135": {"fn": "Registry.liquidityCheck", "offset": [3714, 3758], "op": "POP", "path": "5"}, "1136": {"fn": "Registry.liquidityCheck", "offset": [3789, 3799], "op": "DUP1", "path": "5"}, "1137": {"fn": "Registry.liquidityCheck", "offset": [3775, 3786], "op": "DUP4", "path": "5"}, "1138": {"branch": 32, "fn": "Registry.liquidityCheck", "offset": [3775, 3799], "op": "GT", "path": "5"}, "1139": {"fn": "Registry.liquidityCheck", "offset": [3772, 4035], "op": "ISZERO", "path": "5"}, "1140": {"fn": "Registry.liquidityCheck", "offset": [3772, 4035], "op": "PUSH2", "path": "5", "value": "0x4C6"}, "1143": {"branch": 32, "fn": "Registry.liquidityCheck", "offset": [3772, 4035], "op": "JUMPI", "path": "5"}, "1144": {"fn": "Registry.liquidityCheck", "offset": [3818, 3829], "op": "PUSH1", "path": "5", "value": "0x0"}, "1146": {"fn": "Registry.liquidityCheck", "offset": [3832, 3856], "op": "PUSH2", "path": "5", "value": "0x483"}, "1149": {"fn": "Registry.liquidityCheck", "offset": [3846, 3856], "op": "DUP3", "path": "5"}, "1150": {"fn": "Registry.liquidityCheck", "offset": [3832, 3843], "op": "DUP6", "path": "5"}, "1151": {"fn": "Registry.liquidityCheck", "offset": [3832, 3856], "op": "PUSH2", "path": "5", "value": "0xF28"}, "1154": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3832, 3856], "op": "JUMP", "path": "5"}, "1155": {"fn": "Registry.liquidityCheck", "offset": [3832, 3856], "op": "JUMPDEST", "path": "5"}, "1156": {"fn": "Registry.liquidityCheck", "offset": [3818, 3856], "op": "SWAP1", "path": "5"}, "1157": {"fn": "Registry.liquidityCheck", "offset": [3818, 3856], "op": "POP", "path": "5"}, "1158": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "PUSH1", "path": "5", "statement": 0, "value": "0x40"}, "1160": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "MLOAD", "path": "5"}, "1161": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "DUP1", "path": "5"}, "1162": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "PUSH1", "path": "5", "value": "0x40"}, "1164": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "ADD", "path": "5"}, "1165": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "PUSH1", "path": "5", "value": "0x40"}, "1167": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "MSTORE", "path": "5"}, "1168": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "DUP1", "path": "5"}, "1169": {"fn": "Registry.liquidityCheck", "offset": [3906, 3910], "op": "DUP7", "path": "5"}, "1170": {"op": "PUSH1", "value": "0x1"}, "1172": {"op": "PUSH1", "value": "0x1"}, "1174": {"op": "PUSH1", "value": "0xA0"}, "1176": {"op": "SHL"}, "1177": {"op": "SUB"}, "1178": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "AND", "path": "5"}, "1179": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "DUP2", "path": "5"}, "1180": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "MSTORE", "path": "5"}, "1181": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "PUSH1", "path": "5", "value": "0x20"}, "1183": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "ADD", "path": "5"}, "1184": {"fn": "Registry.liquidityCheck", "offset": [3917, 3920], "op": "DUP3", "path": "5"}, "1185": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "DUP2", "path": "5"}, "1186": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "MSTORE", "path": "5"}, "1187": {"fn": "Registry.liquidityCheck", "offset": [3887, 3922], "op": "POP", "path": "5"}, "1188": {"fn": "Registry.liquidityCheck", "offset": [3874, 3882], "op": "DUP10", "path": "5"}, "1189": {"fn": "Registry.liquidityCheck", "offset": [3883, 3884], "op": "DUP8", "path": "5"}, "1190": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "DUP2", "path": "5"}, "1191": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "MLOAD", "path": "5"}, "1192": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "DUP2", "path": "5"}, "1193": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "LT", "path": "5"}, "1194": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "PUSH2", "path": "5", "value": "0x4B5"}, "1197": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "JUMPI", "path": "5"}, "1198": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "PUSH2", "path": "5", "value": "0x4B5"}, "1201": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "1204": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3874, 3885], "op": "JUMP", "path": "5"}, "1205": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "JUMPDEST", "path": "5"}, "1206": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "PUSH1", "path": "5", "value": "0x20"}, "1208": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "MUL", "path": "5"}, "1209": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "PUSH1", "path": "5", "value": "0x20"}, "1211": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "ADD", "path": "5"}, "1212": {"fn": "Registry.liquidityCheck", "offset": [3874, 3885], "op": "ADD", "path": "5"}, "1213": {"fn": "Registry.liquidityCheck", "offset": [3874, 3923], "op": "DUP2", "path": "5"}, "1214": {"fn": "Registry.liquidityCheck", "offset": [3874, 3923], "op": "SWAP1", "path": "5"}, "1215": {"fn": "Registry.liquidityCheck", "offset": [3874, 3923], "op": "MSTORE", "path": "5"}, "1216": {"fn": "Registry.liquidityCheck", "offset": [3874, 3923], "op": "POP", "path": "5"}, "1217": {"fn": "Registry.liquidityCheck", "offset": [3800, 3938], "op": "POP", "path": "5"}, "1218": {"fn": "Registry.liquidityCheck", "offset": [3772, 4035], "op": "PUSH2", "path": "5", "value": "0x503"}, "1221": {"fn": "Registry.liquidityCheck", "offset": [3772, 4035], "op": "JUMP", "path": "5"}, "1222": {"fn": "Registry.liquidityCheck", "offset": [3772, 4035], "op": "JUMPDEST", "path": "5"}, "1223": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "PUSH1", "path": "5", "statement": 1, "value": "0x40"}, "1225": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "MLOAD", "path": "5"}, "1226": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "DUP1", "path": "5"}, "1227": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "PUSH1", "path": "5", "value": "0x40"}, "1229": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "ADD", "path": "5"}, "1230": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "PUSH1", "path": "5", "value": "0x40"}, "1232": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "MSTORE", "path": "5"}, "1233": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "DUP1", "path": "5"}, "1234": {"fn": "Registry.liquidityCheck", "offset": [4005, 4009], "op": "DUP6", "path": "5"}, "1235": {"op": "PUSH1", "value": "0x1"}, "1237": {"op": "PUSH1", "value": "0x1"}, "1239": {"op": "PUSH1", "value": "0xA0"}, "1241": {"op": "SHL"}, "1242": {"op": "SUB"}, "1243": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "AND", "path": "5"}, "1244": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "DUP2", "path": "5"}, "1245": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "MSTORE", "path": "5"}, "1246": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "PUSH1", "path": "5", "value": "0x20"}, "1248": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "ADD", "path": "5"}, "1249": {"fn": "Registry.liquidityCheck", "offset": [4016, 4017], "op": "PUSH1", "path": "5", "value": "0x0"}, "1251": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "DUP2", "path": "5"}, "1252": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "MSTORE", "path": "5"}, "1253": {"fn": "Registry.liquidityCheck", "offset": [3986, 4019], "op": "POP", "path": "5"}, "1254": {"fn": "Registry.liquidityCheck", "offset": [3973, 3981], "op": "DUP9", "path": "5"}, "1255": {"fn": "Registry.liquidityCheck", "offset": [3982, 3983], "op": "DUP7", "path": "5"}, "1256": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "DUP2", "path": "5"}, "1257": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "MLOAD", "path": "5"}, "1258": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "DUP2", "path": "5"}, "1259": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "LT", "path": "5"}, "1260": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "PUSH2", "path": "5", "value": "0x4F7"}, "1263": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "JUMPI", "path": "5"}, "1264": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "PUSH2", "path": "5", "value": "0x4F7"}, "1267": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "1270": {"fn": "Registry.liquidityCheck", "jump": "i", "offset": [3973, 3984], "op": "JUMP", "path": "5"}, "1271": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "JUMPDEST", "path": "5"}, "1272": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "PUSH1", "path": "5", "value": "0x20"}, "1274": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "MUL", "path": "5"}, "1275": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "PUSH1", "path": "5", "value": "0x20"}, "1277": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "ADD", "path": "5"}, "1278": {"fn": "Registry.liquidityCheck", "offset": [3973, 3984], "op": "ADD", "path": "5"}, "1279": {"fn": "Registry.liquidityCheck", "offset": [3973, 4020], "op": "DUP2", "path": "5"}, "1280": {"fn": "Registry.liquidityCheck", "offset": [3973, 4020], "op": "SWAP1", "path": "5"}, "1281": {"fn": "Registry.liquidityCheck", "offset": [3973, 4020], "op": "MSTORE", "path": "5"}, "1282": {"fn": "Registry.liquidityCheck", "offset": [3973, 4020], "op": "POP", "path": "5"}, "1283": {"fn": "Registry.liquidityCheck", "offset": [3772, 4035], "op": "JUMPDEST", "path": "5"}, "1284": {"fn": "Registry.liquidityCheck", "offset": [4058, 4061], "op": "DUP5", "path": "5", "statement": 2}, "1285": {"fn": "Registry.liquidityCheck", "offset": [4058, 4061], "op": "PUSH1", "path": "5", "value": "0x1"}, "1287": {"fn": "Registry.liquidityCheck", "offset": [4058, 4061], "op": "ADD", "path": "5"}, "1288": {"fn": "Registry.liquidityCheck", "offset": [4058, 4061], "op": "SWAP5", "path": "5"}, "1289": {"fn": "Registry.liquidityCheck", "offset": [4058, 4061], "op": "POP", "path": "5"}, "1290": {"fn": "Registry.liquidityCheck", "offset": [3535, 4073], "op": "POP", "path": "5"}, "1291": {"fn": "Registry.liquidityCheck", "offset": [3535, 4073], "op": "POP", "path": "5"}, "1292": {"fn": "Registry.liquidityCheck", "offset": [3535, 4073], "op": "POP", "path": "5"}, "1293": {"fn": "Registry.liquidityCheck", "offset": [3535, 4073], "op": "POP", "path": "5"}, "1294": {"fn": "Registry.liquidityCheck", "offset": [3508, 4073], "op": "PUSH2", "path": "5", "value": "0x3A6"}, "1297": {"fn": "Registry.liquidityCheck", "offset": [3508, 4073], "op": "JUMP", "path": "5"}, "1298": {"fn": "Registry.liquidityCheck", "offset": [3508, 4073], "op": "JUMPDEST", "path": "5"}, "1299": {"op": "POP"}, "1300": {"fn": "Registry.liquidityCheck", "offset": [4089, 4097], "op": "SWAP2", "path": "5", "statement": 3}, "1301": {"fn": "Registry.liquidityCheck", "offset": [4089, 4097], "op": "SWAP6", "path": "5"}, "1302": {"fn": "Registry.liquidityCheck", "offset": [3236, 4108], "op": "SWAP5", "path": "5"}, "1303": {"op": "POP"}, "1304": {"op": "POP"}, "1305": {"op": "POP"}, "1306": {"op": "POP"}, "1307": {"op": "POP"}, "1308": {"fn": "Registry.liquidityCheck", "jump": "o", "offset": [3236, 4108], "op": "JUMP", "path": "5"}, "1309": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "JUMPDEST", "path": "5"}, "1310": {"op": "PUSH1", "value": "0x40"}, "1312": {"op": "DUP1"}, "1313": {"op": "MLOAD"}, "1314": {"op": "DUP1"}, "1315": {"op": "DUP3"}, "1316": {"op": "ADD"}, "1317": {"op": "SWAP1"}, "1318": {"op": "SWAP2"}, "1319": {"op": "MSTORE"}, "1320": {"op": "PUSH1", "value": "0x0"}, "1322": {"op": "DUP1"}, "1323": {"op": "DUP3"}, "1324": {"op": "MSTORE"}, "1325": {"op": "PUSH1", "value": "0x20"}, "1327": {"op": "DUP3"}, "1328": {"op": "ADD"}, "1329": {"op": "MSTORE"}, "1330": {"fn": "Registry.findMax", "offset": [5628, 5645], "op": "DUP2", "path": "5"}, "1331": {"fn": "Registry.findMax", "offset": [5628, 5645], "op": "MLOAD", "path": "5"}, "1332": {"fn": "Registry.findMax", "offset": [5595, 5602], "op": "PUSH1", "path": "5", "value": "0x0"}, "1334": {"fn": "Registry.findMax", "offset": [5595, 5602], "op": "SWAP1", "path": "5"}, "1335": {"fn": "Registry.findMax", "offset": [5595, 5602], "op": "DUP2", "path": "5"}, "1336": {"fn": "Registry.findMax", "offset": [5595, 5602], "op": "DUP1", "path": "5"}, "1337": {"fn": "Registry.findMax", "offset": [5595, 5602], "op": "DUP1", "path": "5"}, "1338": {"fn": "Registry.findMax", "offset": [5701, 5888], "op": "JUMPDEST", "path": "5"}, "1339": {"fn": "Registry.findMax", "offset": [5720, 5723], "op": "DUP4", "path": "5"}, "1340": {"fn": "Registry.findMax", "offset": [5718, 5719], "op": "DUP2", "path": "5"}, "1341": {"fn": "Registry.findMax", "offset": [5718, 5723], "op": "LT", "path": "5"}, "1342": {"fn": "Registry.findMax", "offset": [5701, 5888], "op": "ISZERO", "path": "5"}, "1343": {"fn": "Registry.findMax", "offset": [5701, 5888], "op": "PUSH2", "path": "5", "value": "0x593"}, "1346": {"fn": "Registry.findMax", "offset": [5701, 5888], "op": "JUMPI", "path": "5"}, "1347": {"fn": "Registry.findMax", "offset": [5749, 5759], "op": "DUP7", "path": "5"}, "1348": {"fn": "Registry.findMax", "offset": [5760, 5761], "op": "DUP2", "path": "5"}, "1349": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "DUP2", "path": "5"}, "1350": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "MLOAD", "path": "5"}, "1351": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "DUP2", "path": "5"}, "1352": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "LT", "path": "5"}, "1353": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "PUSH2", "path": "5", "value": "0x554"}, "1356": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "JUMPI", "path": "5"}, "1357": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "PUSH2", "path": "5", "value": "0x554"}, "1360": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "1363": {"fn": "Registry.findMax", "jump": "i", "offset": [5749, 5762], "op": "JUMP", "path": "5"}, "1364": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "JUMPDEST", "path": "5"}, "1365": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "PUSH1", "path": "5", "value": "0x20"}, "1367": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "MUL", "path": "5"}, "1368": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "PUSH1", "path": "5", "value": "0x20"}, "1370": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "ADD", "path": "5"}, "1371": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "ADD", "path": "5"}, "1372": {"fn": "Registry.findMax", "offset": [5749, 5762], "op": "MLOAD", "path": "5"}, "1373": {"fn": "Registry.findMax", "offset": [5749, 5766], "op": "PUSH1", "path": "5", "value": "0x20"}, "1375": {"fn": "Registry.findMax", "offset": [5749, 5766], "op": "ADD", "path": "5"}, "1376": {"fn": "Registry.findMax", "offset": [5749, 5766], "op": "MLOAD", "path": "5"}, "1377": {"fn": "Registry.findMax", "offset": [5743, 5746], "op": "DUP4", "path": "5"}, "1378": {"branch": 33, "fn": "Registry.findMax", "offset": [5743, 5766], "op": "LT", "path": "5"}, "1379": {"fn": "Registry.findMax", "offset": [5739, 5850], "op": "ISZERO", "path": "5"}, "1380": {"fn": "Registry.findMax", "offset": [5739, 5850], "op": "PUSH2", "path": "5", "value": "0x58B"}, "1383": {"branch": 33, "fn": "Registry.findMax", "offset": [5739, 5850], "op": "JUMPI", "path": "5"}, "1384": {"fn": "Registry.findMax", "offset": [5791, 5801], "op": "DUP7", "path": "5", "statement": 4}, "1385": {"fn": "Registry.findMax", "offset": [5802, 5803], "op": "DUP2", "path": "5"}, "1386": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "DUP2", "path": "5"}, "1387": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "MLOAD", "path": "5"}, "1388": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "DUP2", "path": "5"}, "1389": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "LT", "path": "5"}, "1390": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "PUSH2", "path": "5", "value": "0x579"}, "1393": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "JUMPI", "path": "5"}, "1394": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "PUSH2", "path": "5", "value": "0x579"}, "1397": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "1400": {"fn": "Registry.findMax", "jump": "i", "offset": [5791, 5804], "op": "JUMP", "path": "5"}, "1401": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "JUMPDEST", "path": "5"}, "1402": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "PUSH1", "path": "5", "value": "0x20"}, "1404": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "MUL", "path": "5"}, "1405": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "PUSH1", "path": "5", "value": "0x20"}, "1407": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "ADD", "path": "5"}, "1408": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "ADD", "path": "5"}, "1409": {"fn": "Registry.findMax", "offset": [5791, 5804], "op": "MLOAD", "path": "5"}, "1410": {"fn": "Registry.findMax", "offset": [5791, 5808], "op": "PUSH1", "path": "5", "value": "0x20"}, "1412": {"fn": "Registry.findMax", "offset": [5791, 5808], "op": "ADD", "path": "5"}, "1413": {"fn": "Registry.findMax", "offset": [5791, 5808], "op": "MLOAD", "path": "5"}, "1414": {"fn": "Registry.findMax", "offset": [5785, 5808], "op": "SWAP3", "path": "5"}, "1415": {"fn": "Registry.findMax", "offset": [5785, 5808], "op": "POP", "path": "5"}, "1416": {"fn": "Registry.findMax", "offset": [5834, 5835], "op": "DUP1", "path": "5", "statement": 5}, "1417": {"fn": "Registry.findMax", "offset": [5826, 5835], "op": "SWAP2", "path": "5"}, "1418": {"fn": "Registry.findMax", "offset": [5826, 5835], "op": "POP", "path": "5"}, "1419": {"fn": "Registry.findMax", "offset": [5739, 5850], "op": "JUMPDEST", "path": "5"}, "1420": {"fn": "Registry.findMax", "offset": [5873, 5876], "op": "PUSH1", "path": "5", "statement": 6, "value": "0x1"}, "1422": {"fn": "Registry.findMax", "offset": [5873, 5876], "op": "ADD", "path": "5"}, "1423": {"fn": "Registry.findMax", "offset": [5701, 5888], "op": "PUSH2", "path": "5", "value": "0x53A"}, "1426": {"fn": "Registry.findMax", "offset": [5701, 5888], "op": "JUMP", "path": "5"}, "1427": {"fn": "Registry.findMax", "offset": [5701, 5888], "op": "JUMPDEST", "path": "5"}, "1428": {"fn": "Registry.findMax", "offset": [5701, 5888], "op": "POP", "path": "5"}, "1429": {"fn": "Registry.findMax", "offset": [5905, 5915], "op": "DUP6", "path": "5", "statement": 7}, "1430": {"fn": "Registry.findMax", "offset": [5916, 5921], "op": "DUP2", "path": "5"}, "1431": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "DUP2", "path": "5"}, "1432": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "MLOAD", "path": "5"}, "1433": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "DUP2", "path": "5"}, "1434": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "LT", "path": "5"}, "1435": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "PUSH2", "path": "5", "value": "0x5A6"}, "1438": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "JUMPI", "path": "5"}, "1439": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "PUSH2", "path": "5", "value": "0x5A6"}, "1442": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "1445": {"fn": "Registry.findMax", "jump": "i", "offset": [5905, 5922], "op": "JUMP", "path": "5"}, "1446": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "JUMPDEST", "path": "5"}, "1447": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "PUSH1", "path": "5", "value": "0x20"}, "1449": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "MUL", "path": "5"}, "1450": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "PUSH1", "path": "5", "value": "0x20"}, "1452": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "ADD", "path": "5"}, "1453": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "ADD", "path": "5"}, "1454": {"fn": "Registry.findMax", "offset": [5905, 5922], "op": "MLOAD", "path": "5"}, "1455": {"fn": "Registry.findMax", "offset": [5923, 5928], "op": "DUP2", "path": "5"}, "1456": {"fn": "Registry.findMax", "offset": [5897, 5929], "op": "SWAP5", "path": "5"}, "1457": {"fn": "Registry.findMax", "offset": [5897, 5929], "op": "POP", "path": "5"}, "1458": {"fn": "Registry.findMax", "offset": [5897, 5929], "op": "SWAP5", "path": "5"}, "1459": {"fn": "Registry.findMax", "offset": [5897, 5929], "op": "POP", "path": "5"}, "1460": {"fn": "Registry.findMax", "offset": [5897, 5929], "op": "POP", "path": "5"}, "1461": {"fn": "Registry.findMax", "offset": [5897, 5929], "op": "POP", "path": "5"}, "1462": {"fn": "Registry.findMax", "offset": [5897, 5929], "op": "POP", "path": "5"}, "1463": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "SWAP2", "path": "5"}, "1464": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "POP", "path": "5"}, "1465": {"fn": "Registry.findMax", "offset": [5503, 5936], "op": "SWAP2", "path": "5"}, "1466": {"fn": "Registry.findMax", "jump": "o", "offset": [5503, 5936], "op": "JUMP", "path": "5"}, "1467": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "JUMPDEST", "path": "5"}, "1468": {"fn": "Registry.getConcentration", "offset": [6120, 6124], "op": "PUSH1", "path": "5", "value": "0x0"}, "1470": {"fn": "Registry.getConcentration", "offset": [6139, 6152], "op": "DUP1", "path": "5"}, "1471": {"fn": "Registry.getConcentration", "offset": [6155, 6173], "op": "PUSH2", "path": "5", "value": "0x5C6"}, "1474": {"fn": "Registry.getConcentration", "offset": [6155, 6171], "op": "PUSH2", "path": "5", "value": "0xA79"}, "1477": {"fn": "Registry.getConcentration", "jump": "i", "offset": [6155, 6173], "op": "JUMP", "path": "5"}, "1478": {"fn": "Registry.getConcentration", "offset": [6155, 6173], "op": "JUMPDEST", "path": "5"}, "1479": {"fn": "Registry.getConcentration", "offset": [6139, 6173], "op": "SWAP1", "path": "5"}, "1480": {"fn": "Registry.getConcentration", "offset": [6139, 6173], "op": "POP", "path": "5"}, "1481": {"fn": "Registry.getConcentration", "offset": [6187, 6206], "op": "PUSH1", "path": "5", "value": "0x0"}, "1483": {"fn": "Registry.getConcentration", "offset": [6220, 6224], "op": "DUP4", "path": "5"}, "1484": {"op": "PUSH1", "value": "0x1"}, "1486": {"op": "PUSH1", "value": "0x1"}, "1488": {"op": "PUSH1", "value": "0xA0"}, "1490": {"op": "SHL"}, "1491": {"op": "SUB"}, "1492": {"fn": "Registry.getConcentration", "offset": [6209, 6238], "op": "AND", "path": "5"}, "1493": {"fn": "Registry.getConcentration", "offset": [6209, 6238], "op": "PUSH4", "path": "5", "value": "0x1BA2F531"}, "1498": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x40"}, "1500": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "MLOAD", "path": "5"}, "1501": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP2", "path": "5"}, "1502": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH4", "path": "5", "value": "0xFFFFFFFF"}, "1507": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "AND", "path": "5"}, "1508": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0xE0"}, "1510": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "SHL", "path": "5"}, "1511": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP2", "path": "5"}, "1512": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "MSTORE", "path": "5"}, "1513": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x4"}, "1515": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "ADD", "path": "5"}, "1516": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x20"}, "1518": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x40"}, "1520": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "MLOAD", "path": "5"}, "1521": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP1", "path": "5"}, "1522": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP4", "path": "5"}, "1523": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "SUB", "path": "5"}, "1524": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP2", "path": "5"}, "1525": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP7", "path": "5"}, "1526": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "GAS", "path": "5"}, "1527": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "STATICCALL", "path": "5"}, "1528": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "ISZERO", "path": "5"}, "1529": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP1", "path": "5"}, "1530": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "ISZERO", "path": "5"}, "1531": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH2", "path": "5", "value": "0x608"}, "1534": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "JUMPI", "path": "5"}, "1535": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "RETURNDATASIZE", "path": "5"}, "1536": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x0"}, "1538": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP1", "path": "5"}, "1539": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "RETURNDATACOPY", "path": "5"}, "1540": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "RETURNDATASIZE", "path": "5"}, "1541": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x0"}, "1543": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "REVERT", "path": "5"}, "1544": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "JUMPDEST", "path": "5"}, "1545": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "POP", "path": "5"}, "1546": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "POP", "path": "5"}, "1547": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "POP", "path": "5"}, "1548": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "POP", "path": "5"}, "1549": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x40"}, "1551": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "MLOAD", "path": "5"}, "1552": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "RETURNDATASIZE", "path": "5"}, "1553": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x1F"}, "1555": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "NOT", "path": "5"}, "1556": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x1F"}, "1558": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP3", "path": "5"}, "1559": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "ADD", "path": "5"}, "1560": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "AND", "path": "5"}, "1561": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP3", "path": "5"}, "1562": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "ADD", "path": "5"}, "1563": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP1", "path": "5"}, "1564": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH1", "path": "5", "value": "0x40"}, "1566": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "MSTORE", "path": "5"}, "1567": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "POP", "path": "5"}, "1568": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "DUP2", "path": "5"}, "1569": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "ADD", "path": "5"}, "1570": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "SWAP1", "path": "5"}, "1571": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH2", "path": "5", "value": "0x62C"}, "1574": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "SWAP2", "path": "5"}, "1575": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "SWAP1", "path": "5"}, "1576": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "PUSH2", "path": "5", "value": "0xF55"}, "1579": {"fn": "Registry.getConcentration", "jump": "i", "offset": [6209, 6240], "op": "JUMP", "path": "5"}, "1580": {"fn": "Registry.getConcentration", "offset": [6209, 6240], "op": "JUMPDEST", "path": "5"}, "1581": {"fn": "Registry.getConcentration", "offset": [6187, 6240], "op": "SWAP1", "path": "5"}, "1582": {"op": "POP"}, "1583": {"fn": "Registry.getConcentration", "offset": [6268, 6278], "op": "DUP2", "path": "5", "statement": 8}, "1584": {"branch": 34, "fn": "Registry.getConcentration", "offset": [6268, 6278], "op": "ISZERO", "path": "5"}, "1585": {"fn": "Registry.getConcentration", "offset": [6268, 6311], "op": "PUSH2", "path": "5", "value": "0x651"}, "1588": {"branch": 34, "fn": "Registry.getConcentration", "offset": [6268, 6311], "op": "JUMPI", "path": "5"}, "1589": {"fn": "Registry.getConcentration", "offset": [6306, 6311], "op": "DUP2", "path": "5"}, "1590": {"fn": "Registry.getConcentration", "offset": [6284, 6305], "op": "PUSH2", "path": "5", "value": "0x642"}, "1593": {"offset": [471, 474], "op": "PUSH3", "path": "5", "value": "0xF4240"}, "1597": {"fn": "Registry.getConcentration", "offset": [6284, 6295], "op": "DUP4", "path": "5"}, "1598": {"fn": "Registry.getConcentration", "offset": [6284, 6305], "op": "PUSH2", "path": "5", "value": "0xF6E"}, "1601": {"fn": "Registry.getConcentration", "jump": "i", "offset": [6284, 6305], "op": "JUMP", "path": "5"}, "1602": {"fn": "Registry.getConcentration", "offset": [6284, 6305], "op": "JUMPDEST", "path": "5"}, "1603": {"fn": "Registry.getConcentration", "offset": [6284, 6311], "op": "PUSH2", "path": "5", "value": "0x64C"}, "1606": {"fn": "Registry.getConcentration", "offset": [6284, 6311], "op": "SWAP2", "path": "5"}, "1607": {"fn": "Registry.getConcentration", "offset": [6284, 6311], "op": "SWAP1", "path": "5"}, "1608": {"fn": "Registry.getConcentration", "offset": [6284, 6311], "op": "PUSH2", "path": "5", "value": "0xF8D"}, "1611": {"fn": "Registry.getConcentration", "jump": "i", "offset": [6284, 6311], "op": "JUMP", "path": "5"}, "1612": {"fn": "Registry.getConcentration", "offset": [6284, 6311], "op": "JUMPDEST", "path": "5"}, "1613": {"fn": "Registry.getConcentration", "offset": [6268, 6311], "op": "PUSH2", "path": "5", "value": "0x654"}, "1616": {"fn": "Registry.getConcentration", "offset": [6268, 6311], "op": "JUMP", "path": "5"}, "1617": {"fn": "Registry.getConcentration", "offset": [6268, 6311], "op": "JUMPDEST", "path": "5"}, "1618": {"fn": "Registry.getConcentration", "offset": [6281, 6282], "op": "PUSH1", "path": "5", "value": "0x0"}, "1620": {"fn": "Registry.getConcentration", "offset": [6268, 6311], "op": "JUMPDEST", "path": "5"}, "1621": {"fn": "Registry.getConcentration", "offset": [6261, 6311], "op": "SWAP5", "path": "5"}, "1622": {"fn": "Registry.getConcentration", "offset": [6060, 6322], "op": "SWAP4", "path": "5"}, "1623": {"op": "POP"}, "1624": {"op": "POP"}, "1625": {"op": "POP"}, "1626": {"op": "POP"}, "1627": {"fn": "Registry.getConcentration", "jump": "o", "offset": [6060, 6322], "op": "JUMP", "path": "5"}, "1628": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "JUMPDEST", "path": "5"}, "1629": {"fn": "Registry.tokensToWithdraw", "offset": [2738, 2754], "op": "PUSH1", "path": "5", "value": "0x60"}, "1631": {"fn": "Registry.tokensToWithdraw", "offset": [2756, 2772], "op": "DUP1", "path": "5"}, "1632": {"fn": "Registry.tokensToWithdraw", "offset": [2784, 2806], "op": "PUSH1", "path": "5", "value": "0x0"}, "1634": {"fn": "Registry.tokensToWithdraw", "offset": [2808, 2833], "op": "DUP1", "path": "5"}, "1635": {"fn": "Registry.tokensToWithdraw", "offset": [2837, 2859], "op": "PUSH2", "path": "5", "value": "0x66B"}, "1638": {"fn": "Registry.tokensToWithdraw", "offset": [2851, 2858], "op": "DUP6", "path": "5"}, "1639": {"fn": "Registry.tokensToWithdraw", "offset": [2837, 2850], "op": "PUSH2", "path": "5", "value": "0x75F"}, "1642": {"fn": "Registry.tokensToWithdraw", "jump": "i", "offset": [2837, 2859], "op": "JUMP", "path": "5"}, "1643": {"fn": "Registry.tokensToWithdraw", "offset": [2837, 2859], "op": "JUMPDEST", "path": "5"}, "1644": {"fn": "Registry.tokensToWithdraw", "offset": [2783, 2859], "op": "SWAP1", "path": "5"}, "1645": {"fn": "Registry.tokensToWithdraw", "offset": [2783, 2859], "op": "SWAP7", "path": "5"}, "1646": {"fn": "Registry.tokensToWithdraw", "offset": [2783, 2859], "op": "SWAP1", "path": "5"}, "1647": {"fn": "Registry.tokensToWithdraw", "offset": [2783, 2859], "op": "SWAP6", "path": "5"}, "1648": {"op": "POP"}, "1649": {"fn": "Registry.tokensToWithdraw", "offset": [2674, 2900], "op": "SWAP4", "path": "5"}, "1650": {"op": "POP"}, "1651": {"op": "POP"}, "1652": {"op": "POP"}, "1653": {"op": "POP"}, "1654": {"fn": "Registry.tokensToWithdraw", "jump": "o", "offset": [2674, 2900], "op": "JUMP", "path": "5"}, "1655": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "JUMPDEST", "path": "5"}, "1656": {"fn": "Registry.checkDeposit", "offset": [7000, 7010], "op": "PUSH1", "path": "5", "value": "0x1"}, "1658": {"fn": "Registry.checkDeposit", "offset": [7000, 7017], "op": "SLOAD", "path": "5"}, "1659": {"fn": "Registry.checkDeposit", "offset": [6974, 6978], "op": "PUSH1", "path": "5", "value": "0x0"}, "1661": {"fn": "Registry.checkDeposit", "offset": [6974, 6978], "op": "SWAP1", "path": "5"}, "1662": {"fn": "Registry.checkDeposit", "offset": [6974, 6978], "op": "DUP2", "path": "5"}, "1663": {"fn": "Registry.checkDeposit", "offset": [7027, 7358], "op": "JUMPDEST", "path": "5"}, "1664": {"fn": "Registry.checkDeposit", "offset": [7048, 7051], "op": "DUP2", "path": "5"}, "1665": {"fn": "Registry.checkDeposit", "offset": [7044, 7045], "op": "DUP2", "path": "5"}, "1666": {"fn": "Registry.checkDeposit", "offset": [7044, 7051], "op": "LT", "path": "5"}, "1667": {"fn": "Registry.checkDeposit", "offset": [7027, 7358], "op": "ISZERO", "path": "5"}, "1668": {"fn": "Registry.checkDeposit", "offset": [7027, 7358], "op": "PUSH2", "path": "5", "value": "0x709"}, "1671": {"fn": "Registry.checkDeposit", "offset": [7027, 7358], "op": "JUMPI", "path": "5"}, "1672": {"fn": "Registry.checkDeposit", "offset": [7068, 7080], "op": "PUSH1", "path": "5", "value": "0x0"}, "1674": {"fn": "Registry.checkDeposit", "offset": [7083, 7093], "op": "PUSH1", "path": "5", "value": "0x1"}, "1676": {"fn": "Registry.checkDeposit", "offset": [7094, 7095], "op": "DUP3", "path": "5"}, "1677": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "DUP2", "path": "5"}, "1678": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "SLOAD", "path": "5"}, "1679": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "DUP2", "path": "5"}, "1680": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "LT", "path": "5"}, "1681": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "PUSH2", "path": "5", "value": "0x69C"}, "1684": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "JUMPI", "path": "5"}, "1685": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "PUSH2", "path": "5", "value": "0x69C"}, "1688": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "1691": {"fn": "Registry.checkDeposit", "jump": "i", "offset": [7083, 7096], "op": "JUMP", "path": "5"}, "1692": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "JUMPDEST", "path": "5"}, "1693": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "PUSH1", "path": "5", "value": "0x0"}, "1695": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "SWAP2", "path": "5"}, "1696": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "DUP3", "path": "5"}, "1697": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "MSTORE", "path": "5"}, "1698": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "PUSH1", "path": "5", "value": "0x20"}, "1700": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "DUP3", "path": "5"}, "1701": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "KECCAK256", "path": "5"}, "1702": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "ADD", "path": "5"}, "1703": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "SLOAD", "path": "5"}, "1704": {"op": "PUSH1", "value": "0x1"}, "1706": {"op": "PUSH1", "value": "0x1"}, "1708": {"op": "PUSH1", "value": "0xA0"}, "1710": {"op": "SHL"}, "1711": {"op": "SUB"}, "1712": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "AND", "path": "5"}, "1713": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "SWAP2", "path": "5"}, "1714": {"op": "POP"}, "1715": {"fn": "Registry.checkDeposit", "offset": [7138, 7160], "op": "PUSH2", "path": "5", "value": "0x6BB"}, "1718": {"fn": "Registry.checkDeposit", "offset": [7083, 7096], "op": "DUP3", "path": "5"}, "1719": {"fn": "Registry.checkDeposit", "offset": [7138, 7154], "op": "PUSH2", "path": "5", "value": "0x5BB"}, "1722": {"fn": "Registry.checkDeposit", "jump": "i", "offset": [7138, 7160], "op": "JUMP", "path": "5"}, "1723": {"fn": "Registry.checkDeposit", "offset": [7138, 7160], "op": "JUMPDEST", "path": "5"}, "1724": {"op": "PUSH1", "value": "0x1"}, "1726": {"op": "PUSH1", "value": "0x1"}, "1728": {"op": "PUSH1", "value": "0xA0"}, "1730": {"op": "SHL"}, "1731": {"op": "SUB"}, "1732": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "DUP4", "path": "5"}, "1733": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "AND", "path": "5"}, "1734": {"fn": "Registry.checkDeposit", "offset": [7174, 7182], "op": "PUSH1", "path": "5", "value": "0x0"}, "1736": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "SWAP1", "path": "5"}, "1737": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "DUP2", "path": "5"}, "1738": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "MSTORE", "path": "5"}, "1739": {"fn": "Registry.checkDeposit", "offset": [7217, 7236], "op": "PUSH1", "path": "5", "value": "0x5"}, "1741": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "PUSH1", "path": "5", "value": "0x20"}, "1743": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "MSTORE", "path": "5"}, "1744": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "PUSH1", "path": "5", "value": "0x40"}, "1746": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "DUP2", "path": "5"}, "1747": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "KECCAK256", "path": "5"}, "1748": {"fn": "Registry.checkDeposit", "offset": [7217, 7242], "op": "SLOAD", "path": "5"}, "1749": {"fn": "Registry.checkDeposit", "offset": [7110, 7160], "op": "SWAP2", "path": "5"}, "1750": {"fn": "Registry.checkDeposit", "offset": [7110, 7160], "op": "SWAP3", "path": "5"}, "1751": {"op": "POP"}, "1752": {"fn": "Registry.checkDeposit", "offset": [7174, 7182], "op": "SWAP1", "path": "5"}, "1753": {"fn": "Registry.checkDeposit", "offset": [7185, 7243], "op": "PUSH2", "path": "5", "value": "0x6E2"}, "1756": {"fn": "Registry.checkDeposit", "offset": [7185, 7243], "op": "SWAP1", "path": "5"}, "1757": {"fn": "Registry.checkDeposit", "offset": [7110, 7160], "op": "DUP4", "path": "5"}, "1758": {"fn": "Registry.checkDeposit", "offset": [7185, 7243], "op": "PUSH2", "path": "5", "value": "0xFAF"}, "1761": {"fn": "Registry.checkDeposit", "jump": "i", "offset": [7185, 7243], "op": "JUMP", "path": "5"}, "1762": {"fn": "Registry.checkDeposit", "offset": [7185, 7243], "op": "JUMPDEST", "path": "5"}, "1763": {"fn": "Registry.checkDeposit", "offset": [7174, 7243], "op": "SWAP1", "path": "5"}, "1764": {"fn": "Registry.checkDeposit", "offset": [7174, 7243], "op": "POP", "path": "5"}, "1765": {"fn": "Registry.checkDeposit", "offset": [7266, 7272], "op": "PUSH3", "path": "5", "value": "0x7A120"}, "1769": {"fn": "Registry.checkDeposit", "offset": [7261, 7265], "op": "DUP2", "path": "5"}, "1770": {"branch": 35, "fn": "Registry.checkDeposit", "offset": [7261, 7272], "op": "SGT", "path": "5"}, "1771": {"fn": "Registry.checkDeposit", "offset": [7257, 7320], "op": "ISZERO", "path": "5"}, "1772": {"fn": "Registry.checkDeposit", "offset": [7257, 7320], "op": "PUSH2", "path": "5", "value": "0x6FB"}, "1775": {"branch": 35, "fn": "Registry.checkDeposit", "offset": [7257, 7320], "op": "JUMPI", "path": "5"}, "1776": {"fn": "Registry.checkDeposit", "offset": [7300, 7304], "op": "PUSH1", "path": "5", "statement": 9, "value": "0x1"}, "1778": {"fn": "Registry.checkDeposit", "offset": [7292, 7305], "op": "SWAP6", "path": "5"}, "1779": {"fn": "Registry.checkDeposit", "offset": [7292, 7305], "op": "POP", "path": "5"}, "1780": {"fn": "Registry.checkDeposit", "offset": [7292, 7305], "op": "POP", "path": "5"}, "1781": {"fn": "Registry.checkDeposit", "offset": [7292, 7305], "op": "POP", "path": "5"}, "1782": {"fn": "Registry.checkDeposit", "offset": [7292, 7305], "op": "POP", "path": "5"}, "1783": {"fn": "Registry.checkDeposit", "offset": [7292, 7305], "op": "POP", "path": "5"}, "1784": {"fn": "Registry.checkDeposit", "offset": [7292, 7305], "op": "POP", "path": "5"}, "1785": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "SWAP1", "path": "5"}, "1786": {"fn": "Registry.checkDeposit", "jump": "o", "offset": [6929, 7386], "op": "JUMP", "path": "5"}, "1787": {"fn": "Registry.checkDeposit", "offset": [7257, 7320], "op": "JUMPDEST", "path": "5"}, "1788": {"fn": "Registry.checkDeposit", "offset": [7343, 7346], "op": "DUP4", "path": "5", "statement": 10}, "1789": {"fn": "Registry.checkDeposit", "offset": [7343, 7346], "op": "PUSH1", "path": "5", "value": "0x1"}, "1791": {"fn": "Registry.checkDeposit", "offset": [7343, 7346], "op": "ADD", "path": "5"}, "1792": {"fn": "Registry.checkDeposit", "offset": [7343, 7346], "op": "SWAP4", "path": "5"}, "1793": {"fn": "Registry.checkDeposit", "offset": [7343, 7346], "op": "POP", "path": "5"}, "1794": {"fn": "Registry.checkDeposit", "offset": [7054, 7358], "op": "POP", "path": "5"}, "1795": {"fn": "Registry.checkDeposit", "offset": [7054, 7358], "op": "POP", "path": "5"}, "1796": {"fn": "Registry.checkDeposit", "offset": [7054, 7358], "op": "POP", "path": "5"}, "1797": {"fn": "Registry.checkDeposit", "offset": [7027, 7358], "op": "PUSH2", "path": "5", "value": "0x67F"}, "1800": {"fn": "Registry.checkDeposit", "offset": [7027, 7358], "op": "JUMP", "path": "5"}, "1801": {"fn": "Registry.checkDeposit", "offset": [7027, 7358], "op": "JUMPDEST", "path": "5"}, "1802": {"fn": "Registry.checkDeposit", "offset": [7027, 7358], "op": "POP", "path": "5"}, "1803": {"fn": "Registry.checkDeposit", "offset": [7374, 7379], "op": "PUSH1", "path": "5", "statement": 11, "value": "0x0"}, "1805": {"fn": "Registry.checkDeposit", "offset": [7367, 7379], "op": "SWAP2", "path": "5"}, "1806": {"fn": "Registry.checkDeposit", "offset": [7367, 7379], "op": "POP", "path": "5"}, "1807": {"fn": "Registry.checkDeposit", "offset": [7367, 7379], "op": "POP", "path": "5"}, "1808": {"fn": "Registry.checkDeposit", "offset": [6929, 7386], "op": "SWAP1", "path": "5"}, "1809": {"fn": "Registry.checkDeposit", "jump": "o", "offset": [6929, 7386], "op": "JUMP", "path": "5"}, "1810": {"fn": "Registry.setFactory", "offset": [993, 1085], "op": "JUMPDEST", "path": "5"}, "1811": {"offset": [755, 760], "op": "PUSH1", "path": "5", "value": "0x0"}, "1813": {"fn": "Registry.setFactory", "offset": [755, 760], "op": "SLOAD", "path": "5"}, "1814": {"op": "PUSH1", "value": "0x1"}, "1816": {"op": "PUSH1", "value": "0x1"}, "1818": {"op": "PUSH1", "value": "0xA0"}, "1820": {"op": "SHL"}, "1821": {"op": "SUB"}, "1822": {"offset": [755, 760], "op": "AND", "path": "5"}, "1823": {"offset": [741, 751], "op": "CALLER", "path": "5"}, "1824": {"offset": [741, 760], "op": "EQ", "path": "5"}, "1825": {"offset": [737, 814], "op": "PUSH2", "path": "5", "value": "0x73D"}, "1828": {"offset": [737, 814], "op": "JUMPI", "path": "5"}, "1829": {"offset": [783, 803], "op": "PUSH1", "path": "5", "value": "0x40"}, "1831": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "MLOAD", "path": "5"}, "1832": {"op": "PUSH4", "value": "0xDA476DD7"}, "1837": {"op": "PUSH1", "value": "0xE0"}, "1839": {"op": "SHL"}, "1840": {"offset": [783, 803], "op": "DUP2", "path": "5"}, "1841": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "MSTORE", "path": "5"}, "1842": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "PUSH1", "path": "5", "value": "0x4"}, "1844": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "ADD", "path": "5"}, "1845": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "PUSH1", "path": "5", "value": "0x40"}, "1847": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "MLOAD", "path": "5"}, "1848": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "DUP1", "path": "5"}, "1849": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "SWAP2", "path": "5"}, "1850": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "SUB", "path": "5"}, "1851": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "SWAP1", "path": "5"}, "1852": {"fn": "Registry.setFactory", "offset": [783, 803], "op": "REVERT", "path": "5"}, "1853": {"offset": [737, 814], "op": "JUMPDEST", "path": "5"}, "1854": {"fn": "Registry.setFactory", "offset": [1060, 1067], "op": "PUSH1", "path": "5", "statement": 12, "value": "0x2"}, "1856": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "DUP1", "path": "5"}, "1857": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "SLOAD", "path": "5"}, "1858": {"op": "PUSH1", "value": "0x1"}, "1860": {"op": "PUSH1", "value": "0x1"}, "1862": {"op": "PUSH1", "value": "0xA0"}, "1864": {"op": "SHL"}, "1865": {"op": "SUB"}, "1866": {"op": "NOT"}, "1867": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "AND", "path": "5"}, "1868": {"op": "PUSH1", "value": "0x1"}, "1870": {"op": "PUSH1", "value": "0x1"}, "1872": {"op": "PUSH1", "value": "0xA0"}, "1874": {"op": "SHL"}, "1875": {"op": "SUB"}, "1876": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "SWAP3", "path": "5"}, "1877": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "SWAP1", "path": "5"}, "1878": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "SWAP3", "path": "5"}, "1879": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "AND", "path": "5"}, "1880": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "SWAP2", "path": "5"}, "1881": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "SWAP1", "path": "5"}, "1882": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "SWAP2", "path": "5"}, "1883": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "OR", "path": "5"}, "1884": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "SWAP1", "path": "5"}, "1885": {"fn": "Registry.setFactory", "offset": [1060, 1078], "op": "SSTORE", "path": "5"}, "1886": {"fn": "Registry.setFactory", "jump": "o", "offset": [993, 1085], "op": "JUMP", "path": "5"}, "1887": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "JUMPDEST", "path": "5"}, "1888": {"fn": "Registry.checkWithdraw", "offset": [4482, 4498], "op": "PUSH1", "path": "5", "value": "0x60"}, "1890": {"fn": "Registry.checkWithdraw", "offset": [4500, 4516], "op": "DUP1", "path": "5"}, "1891": {"fn": "Registry.checkWithdraw", "offset": [4527, 4556], "op": "PUSH1", "path": "5", "value": "0x0"}, "1893": {"fn": "Registry.checkWithdraw", "offset": [4559, 4582], "op": "PUSH2", "path": "5", "value": "0x76D"}, "1896": {"fn": "Registry.checkWithdraw", "offset": [4574, 4581], "op": "DUP5", "path": "5"}, "1897": {"fn": "Registry.checkWithdraw", "offset": [4559, 4573], "op": "PUSH2", "path": "5", "value": "0x320"}, "1900": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4559, 4582], "op": "JUMP", "path": "5"}, "1901": {"fn": "Registry.checkWithdraw", "offset": [4559, 4582], "op": "JUMPDEST", "path": "5"}, "1902": {"fn": "Registry.checkWithdraw", "offset": [4606, 4621], "op": "DUP1", "path": "5"}, "1903": {"fn": "Registry.checkWithdraw", "offset": [4606, 4621], "op": "MLOAD", "path": "5"}, "1904": {"fn": "Registry.checkWithdraw", "offset": [4527, 4582], "op": "SWAP1", "path": "5"}, "1905": {"fn": "Registry.checkWithdraw", "offset": [4527, 4582], "op": "SWAP2", "path": "5"}, "1906": {"op": "POP"}, "1907": {"fn": "Registry.checkWithdraw", "offset": [4592, 4603], "op": "PUSH1", "path": "5", "value": "0x0"}, "1909": {"fn": "Registry.checkWithdraw", "offset": [4606, 4621], "op": "DUP2", "path": "5"}, "1910": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH8", "path": "5", "value": "0xFFFFFFFFFFFFFFFF"}, "1919": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP2", "path": "5"}, "1920": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "GT", "path": "5"}, "1921": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "ISZERO", "path": "5"}, "1922": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH2", "path": "5", "value": "0x78D"}, "1925": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "JUMPI", "path": "5"}, "1926": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH2", "path": "5", "value": "0x78D"}, "1929": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH2", "path": "5", "value": "0xCA6"}, "1932": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4655, 4673], "op": "JUMP", "path": "5"}, "1933": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "JUMPDEST", "path": "5"}, "1934": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH1", "path": "5", "value": "0x40"}, "1936": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "MLOAD", "path": "5"}, "1937": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "SWAP1", "path": "5"}, "1938": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP1", "path": "5"}, "1939": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP3", "path": "5"}, "1940": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "MSTORE", "path": "5"}, "1941": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP1", "path": "5"}, "1942": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH1", "path": "5", "value": "0x20"}, "1944": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "MUL", "path": "5"}, "1945": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH1", "path": "5", "value": "0x20"}, "1947": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "ADD", "path": "5"}, "1948": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP3", "path": "5"}, "1949": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "ADD", "path": "5"}, "1950": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH1", "path": "5", "value": "0x40"}, "1952": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "MSTORE", "path": "5"}, "1953": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP1", "path": "5"}, "1954": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "ISZERO", "path": "5"}, "1955": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH2", "path": "5", "value": "0x7B6"}, "1958": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "JUMPI", "path": "5"}, "1959": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP2", "path": "5"}, "1960": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH1", "path": "5", "value": "0x20"}, "1962": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "ADD", "path": "5"}, "1963": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "PUSH1", "path": "5", "value": "0x20"}, "1965": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP3", "path": "5"}, "1966": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "MUL", "path": "5"}, "1967": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP1", "path": "5"}, "1968": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "CALLDATASIZE", "path": "5"}, "1969": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "DUP4", "path": "5"}, "1970": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "CALLDATACOPY", "path": "5"}, "1971": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "ADD", "path": "5"}, "1972": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "SWAP1", "path": "5"}, "1973": {"op": "POP"}, "1974": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "JUMPDEST", "path": "5"}, "1975": {"fn": "Registry.checkWithdraw", "offset": [4655, 4673], "op": "POP", "path": "5"}, "1976": {"fn": "Registry.checkWithdraw", "offset": [4631, 4673], "op": "SWAP1", "path": "5"}, "1977": {"fn": "Registry.checkWithdraw", "offset": [4631, 4673], "op": "POP", "path": "5"}, "1978": {"fn": "Registry.checkWithdraw", "offset": [4683, 4705], "op": "PUSH1", "path": "5", "value": "0x0"}, "1980": {"fn": "Registry.checkWithdraw", "offset": [4719, 4722], "op": "DUP3", "path": "5"}, "1981": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH8", "path": "5", "value": "0xFFFFFFFFFFFFFFFF"}, "1990": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP2", "path": "5"}, "1991": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "GT", "path": "5"}, "1992": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "ISZERO", "path": "5"}, "1993": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH2", "path": "5", "value": "0x7D4"}, "1996": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "JUMPI", "path": "5"}, "1997": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH2", "path": "5", "value": "0x7D4"}, "2000": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH2", "path": "5", "value": "0xCA6"}, "2003": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4708, 4723], "op": "JUMP", "path": "5"}, "2004": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "JUMPDEST", "path": "5"}, "2005": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH1", "path": "5", "value": "0x40"}, "2007": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "MLOAD", "path": "5"}, "2008": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "SWAP1", "path": "5"}, "2009": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP1", "path": "5"}, "2010": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP3", "path": "5"}, "2011": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "MSTORE", "path": "5"}, "2012": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP1", "path": "5"}, "2013": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH1", "path": "5", "value": "0x20"}, "2015": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "MUL", "path": "5"}, "2016": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH1", "path": "5", "value": "0x20"}, "2018": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "ADD", "path": "5"}, "2019": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP3", "path": "5"}, "2020": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "ADD", "path": "5"}, "2021": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH1", "path": "5", "value": "0x40"}, "2023": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "MSTORE", "path": "5"}, "2024": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP1", "path": "5"}, "2025": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "ISZERO", "path": "5"}, "2026": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH2", "path": "5", "value": "0x7FD"}, "2029": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "JUMPI", "path": "5"}, "2030": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP2", "path": "5"}, "2031": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH1", "path": "5", "value": "0x20"}, "2033": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "ADD", "path": "5"}, "2034": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "PUSH1", "path": "5", "value": "0x20"}, "2036": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP3", "path": "5"}, "2037": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "MUL", "path": "5"}, "2038": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP1", "path": "5"}, "2039": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "CALLDATASIZE", "path": "5"}, "2040": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "DUP4", "path": "5"}, "2041": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "CALLDATACOPY", "path": "5"}, "2042": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "ADD", "path": "5"}, "2043": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "SWAP1", "path": "5"}, "2044": {"op": "POP"}, "2045": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "JUMPDEST", "path": "5"}, "2046": {"fn": "Registry.checkWithdraw", "offset": [4708, 4723], "op": "POP", "path": "5"}, "2047": {"fn": "Registry.checkWithdraw", "offset": [4683, 4723], "op": "SWAP1", "path": "5"}, "2048": {"fn": "Registry.checkWithdraw", "offset": [4683, 4723], "op": "POP", "path": "5"}, "2049": {"fn": "Registry.checkWithdraw", "offset": [4733, 4743], "op": "PUSH1", "path": "5", "value": "0x0"}, "2051": {"fn": "Registry.checkWithdraw", "offset": [4762, 4768], "op": "DUP1", "path": "5"}, "2052": {"fn": "Registry.checkWithdraw", "offset": [4757, 5328], "op": "JUMPDEST", "path": "5"}, "2053": {"fn": "Registry.checkWithdraw", "offset": [4772, 4775], "op": "DUP5", "path": "5"}, "2054": {"fn": "Registry.checkWithdraw", "offset": [4770, 4771], "op": "DUP2", "path": "5"}, "2055": {"fn": "Registry.checkWithdraw", "offset": [4770, 4775], "op": "LT", "path": "5"}, "2056": {"fn": "Registry.checkWithdraw", "offset": [4757, 5328], "op": "ISZERO", "path": "5"}, "2057": {"fn": "Registry.checkWithdraw", "offset": [4757, 5328], "op": "PUSH2", "path": "5", "value": "0x97B"}, "2060": {"fn": "Registry.checkWithdraw", "offset": [4757, 5328], "op": "JUMPI", "path": "5"}, "2061": {"fn": "Registry.checkWithdraw", "offset": [4792, 4814], "op": "PUSH1", "path": "5", "value": "0x0"}, "2063": {"fn": "Registry.checkWithdraw", "offset": [4816, 4826], "op": "DUP1", "path": "5"}, "2064": {"fn": "Registry.checkWithdraw", "offset": [4830, 4847], "op": "PUSH2", "path": "5", "value": "0x818"}, "2067": {"fn": "Registry.checkWithdraw", "offset": [4838, 4846], "op": "DUP9", "path": "5"}, "2068": {"fn": "Registry.checkWithdraw", "offset": [4830, 4837], "op": "PUSH2", "path": "5", "value": "0x51D"}, "2071": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4830, 4847], "op": "JUMP", "path": "5"}, "2072": {"fn": "Registry.checkWithdraw", "offset": [4830, 4847], "op": "JUMPDEST", "path": "5"}, "2073": {"fn": "Registry.checkWithdraw", "offset": [4791, 4847], "op": "SWAP2", "path": "5"}, "2074": {"fn": "Registry.checkWithdraw", "offset": [4791, 4847], "op": "POP", "path": "5"}, "2075": {"fn": "Registry.checkWithdraw", "offset": [4791, 4847], "op": "SWAP2", "path": "5"}, "2076": {"fn": "Registry.checkWithdraw", "offset": [4791, 4847], "op": "POP", "path": "5"}, "2077": {"fn": "Registry.checkWithdraw", "offset": [4872, 4879], "op": "DUP11", "path": "5"}, "2078": {"fn": "Registry.checkWithdraw", "offset": [4866, 4871], "op": "DUP5", "path": "5"}, "2079": {"fn": "Registry.checkWithdraw", "offset": [4866, 4879], "op": "LT", "path": "5"}, "2080": {"fn": "Registry.checkWithdraw", "offset": [4865, 4909], "op": "DUP1", "path": "5"}, "2081": {"fn": "Registry.checkWithdraw", "offset": [4865, 4909], "op": "ISZERO", "path": "5"}, "2082": {"fn": "Registry.checkWithdraw", "offset": [4865, 4909], "op": "PUSH2", "path": "5", "value": "0x839"}, "2085": {"fn": "Registry.checkWithdraw", "offset": [4865, 4909], "op": "JUMPI", "path": "5"}, "2086": {"fn": "Registry.checkWithdraw", "offset": [4865, 4909], "op": "POP", "path": "5"}, "2087": {"fn": "Registry.checkWithdraw", "offset": [4901, 4908], "op": "DUP11", "path": "5"}, "2088": {"fn": "Registry.checkWithdraw", "offset": [4891, 4894], "op": "DUP3", "path": "5"}, "2089": {"fn": "Registry.checkWithdraw", "offset": [4891, 4898], "op": "PUSH1", "path": "5", "value": "0x20"}, "2091": {"fn": "Registry.checkWithdraw", "offset": [4891, 4898], "op": "ADD", "path": "5"}, "2092": {"fn": "Registry.checkWithdraw", "offset": [4891, 4898], "op": "MLOAD", "path": "5"}, "2093": {"fn": "Registry.checkWithdraw", "offset": [4883, 4888], "op": "DUP6", "path": "5"}, "2094": {"fn": "Registry.checkWithdraw", "offset": [4883, 4898], "op": "PUSH2", "path": "5", "value": "0x837"}, "2097": {"fn": "Registry.checkWithdraw", "offset": [4883, 4898], "op": "SWAP2", "path": "5"}, "2098": {"fn": "Registry.checkWithdraw", "offset": [4883, 4898], "op": "SWAP1", "path": "5"}, "2099": {"fn": "Registry.checkWithdraw", "offset": [4883, 4898], "op": "PUSH2", "path": "5", "value": "0xFEE"}, "2102": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4883, 4898], "op": "JUMP", "path": "5"}, "2103": {"fn": "Registry.checkWithdraw", "offset": [4883, 4898], "op": "JUMPDEST", "path": "5"}, "2104": {"fn": "Registry.checkWithdraw", "offset": [4883, 4908], "op": "GT", "path": "5"}, "2105": {"fn": "Registry.checkWithdraw", "offset": [4865, 4909], "op": "JUMPDEST", "path": "5"}, "2106": {"fn": "Registry.checkWithdraw", "offset": [4861, 5287], "op": "ISZERO", "path": "5"}, "2107": {"fn": "Registry.checkWithdraw", "offset": [4861, 5287], "op": "PUSH2", "path": "5", "value": "0x8C9"}, "2110": {"fn": "Registry.checkWithdraw", "offset": [4861, 5287], "op": "JUMPI", "path": "5"}, "2111": {"fn": "Registry.checkWithdraw", "offset": [4942, 4957], "op": "PUSH2", "path": "5", "statement": 13, "value": "0x848"}, "2114": {"fn": "Registry.checkWithdraw", "offset": [4952, 4957], "op": "DUP5", "path": "5"}, "2115": {"fn": "Registry.checkWithdraw", "offset": [4942, 4949], "op": "DUP13", "path": "5"}, "2116": {"fn": "Registry.checkWithdraw", "offset": [4942, 4957], "op": "PUSH2", "path": "5", "value": "0xF28"}, "2119": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4942, 4957], "op": "JUMP", "path": "5"}, "2120": {"fn": "Registry.checkWithdraw", "offset": [4942, 4957], "op": "JUMPDEST", "path": "5"}, "2121": {"fn": "Registry.checkWithdraw", "offset": [4928, 4936], "op": "DUP6", "path": "5"}, "2122": {"fn": "Registry.checkWithdraw", "offset": [4937, 4938], "op": "DUP5", "path": "5"}, "2123": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "DUP2", "path": "5"}, "2124": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "MLOAD", "path": "5"}, "2125": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "DUP2", "path": "5"}, "2126": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "LT", "path": "5"}, "2127": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "PUSH2", "path": "5", "value": "0x85A"}, "2130": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "JUMPI", "path": "5"}, "2131": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "PUSH2", "path": "5", "value": "0x85A"}, "2134": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "2137": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4928, 4939], "op": "JUMP", "path": "5"}, "2138": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "JUMPDEST", "path": "5"}, "2139": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "PUSH1", "path": "5", "value": "0x20"}, "2141": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "MUL", "path": "5"}, "2142": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "PUSH1", "path": "5", "value": "0x20"}, "2144": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "ADD", "path": "5"}, "2145": {"fn": "Registry.checkWithdraw", "offset": [4928, 4939], "op": "ADD", "path": "5"}, "2146": {"fn": "Registry.checkWithdraw", "offset": [4928, 4958], "op": "DUP2", "path": "5"}, "2147": {"fn": "Registry.checkWithdraw", "offset": [4928, 4958], "op": "DUP2", "path": "5"}, "2148": {"fn": "Registry.checkWithdraw", "offset": [4928, 4958], "op": "MSTORE", "path": "5"}, "2149": {"fn": "Registry.checkWithdraw", "offset": [4928, 4958], "op": "POP", "path": "5"}, "2150": {"fn": "Registry.checkWithdraw", "offset": [4928, 4958], "op": "POP", "path": "5"}, "2151": {"fn": "Registry.checkWithdraw", "offset": [4987, 4990], "op": "DUP2", "path": "5", "statement": 14}, "2152": {"fn": "Registry.checkWithdraw", "offset": [4987, 4995], "op": "PUSH1", "path": "5", "value": "0x0"}, "2154": {"fn": "Registry.checkWithdraw", "offset": [4987, 4995], "op": "ADD", "path": "5"}, "2155": {"fn": "Registry.checkWithdraw", "offset": [4987, 4995], "op": "MLOAD", "path": "5"}, "2156": {"fn": "Registry.checkWithdraw", "offset": [4976, 4980], "op": "DUP7", "path": "5"}, "2157": {"fn": "Registry.checkWithdraw", "offset": [4981, 4982], "op": "DUP5", "path": "5"}, "2158": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "DUP2", "path": "5"}, "2159": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "MLOAD", "path": "5"}, "2160": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "DUP2", "path": "5"}, "2161": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "LT", "path": "5"}, "2162": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "PUSH2", "path": "5", "value": "0x87D"}, "2165": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "JUMPI", "path": "5"}, "2166": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "PUSH2", "path": "5", "value": "0x87D"}, "2169": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "2172": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [4976, 4983], "op": "JUMP", "path": "5"}, "2173": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "JUMPDEST", "path": "5"}, "2174": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "PUSH1", "path": "5", "value": "0x20"}, "2176": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "MUL", "path": "5"}, "2177": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "PUSH1", "path": "5", "value": "0x20"}, "2179": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "ADD", "path": "5"}, "2180": {"fn": "Registry.checkWithdraw", "offset": [4976, 4983], "op": "ADD", "path": "5"}, "2181": {"fn": "Registry.checkWithdraw", "offset": [4976, 4996], "op": "SWAP1", "path": "5"}, "2182": {"op": "PUSH1", "value": "0x1"}, "2184": {"op": "PUSH1", "value": "0x1"}, "2186": {"op": "PUSH1", "value": "0xA0"}, "2188": {"op": "SHL"}, "2189": {"op": "SUB"}, "2190": {"fn": "Registry.checkWithdraw", "offset": [4976, 4996], "op": "AND", "path": "5"}, "2191": {"fn": "Registry.checkWithdraw", "offset": [4976, 4996], "op": "SWAP1", "path": "5"}, "2192": {"fn": "Registry.checkWithdraw", "offset": [4976, 4996], "op": "DUP2", "path": "5"}, "2193": {"op": "PUSH1", "value": "0x1"}, "2195": {"op": "PUSH1", "value": "0x1"}, "2197": {"op": "PUSH1", "value": "0xA0"}, "2199": {"op": "SHL"}, "2200": {"op": "SUB"}, "2201": {"fn": "Registry.checkWithdraw", "offset": [4976, 4996], "op": "AND", "path": "5"}, "2202": {"fn": "Registry.checkWithdraw", "offset": [4976, 4996], "op": "DUP2", "path": "5"}, "2203": {"fn": "Registry.checkWithdraw", "offset": [4976, 4996], "op": "MSTORE", "path": "5"}, "2204": {"fn": "Registry.checkWithdraw", "offset": [4976, 4996], "op": "POP", "path": "5"}, "2205": {"fn": "Registry.checkWithdraw", "offset": [4976, 4996], "op": "POP", "path": "5"}, "2206": {"fn": "Registry.checkWithdraw", "offset": [5023, 5031], "op": "DUP5", "path": "5", "statement": 15}, "2207": {"fn": "Registry.checkWithdraw", "offset": [5032, 5033], "op": "DUP4", "path": "5"}, "2208": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "DUP2", "path": "5"}, "2209": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "MLOAD", "path": "5"}, "2210": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "DUP2", "path": "5"}, "2211": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "LT", "path": "5"}, "2212": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "PUSH2", "path": "5", "value": "0x8AF"}, "2215": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "JUMPI", "path": "5"}, "2216": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "PUSH2", "path": "5", "value": "0x8AF"}, "2219": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "2222": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [5023, 5034], "op": "JUMP", "path": "5"}, "2223": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "JUMPDEST", "path": "5"}, "2224": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "PUSH1", "path": "5", "value": "0x20"}, "2226": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "MUL", "path": "5"}, "2227": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "PUSH1", "path": "5", "value": "0x20"}, "2229": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "ADD", "path": "5"}, "2230": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "ADD", "path": "5"}, "2231": {"fn": "Registry.checkWithdraw", "offset": [5023, 5034], "op": "MLOAD", "path": "5"}, "2232": {"fn": "Registry.checkWithdraw", "offset": [5014, 5034], "op": "DUP5", "path": "5"}, "2233": {"fn": "Registry.checkWithdraw", "offset": [5014, 5034], "op": "PUSH2", "path": "5", "value": "0x8C2"}, "2236": {"fn": "Registry.checkWithdraw", "offset": [5014, 5034], "op": "SWAP2", "path": "5"}, "2237": {"fn": "Registry.checkWithdraw", "offset": [5014, 5034], "op": "SWAP1", "path": "5"}, "2238": {"fn": "Registry.checkWithdraw", "offset": [5014, 5034], "op": "PUSH2", "path": "5", "value": "0xFEE"}, "2241": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [5014, 5034], "op": "JUMP", "path": "5"}, "2242": {"fn": "Registry.checkWithdraw", "offset": [5014, 5034], "op": "JUMPDEST", "path": "5"}, "2243": {"fn": "Registry.checkWithdraw", "offset": [5014, 5034], "op": "SWAP4", "path": "5"}, "2244": {"fn": "Registry.checkWithdraw", "offset": [5014, 5034], "op": "POP", "path": "5"}, "2245": {"fn": "Registry.checkWithdraw", "offset": [4861, 5287], "op": "PUSH2", "path": "5", "value": "0x971"}, "2248": {"fn": "Registry.checkWithdraw", "offset": [4861, 5287], "op": "JUMP", "path": "5"}, "2249": {"fn": "Registry.checkWithdraw", "offset": [4861, 5287], "op": "JUMPDEST", "path": "5"}, "2250": {"fn": "Registry.checkWithdraw", "offset": [5078, 5085], "op": "DUP11", "path": "5"}, "2251": {"fn": "Registry.checkWithdraw", "offset": [5072, 5077], "op": "DUP5", "path": "5"}, "2252": {"fn": "Registry.checkWithdraw", "offset": [5072, 5085], "op": "LT", "path": "5"}, "2253": {"fn": "Registry.checkWithdraw", "offset": [5071, 5116], "op": "DUP1", "path": "5"}, "2254": {"fn": "Registry.checkWithdraw", "offset": [5071, 5116], "op": "ISZERO", "path": "5"}, "2255": {"fn": "Registry.checkWithdraw", "offset": [5071, 5116], "op": "PUSH2", "path": "5", "value": "0x8E7"}, "2258": {"fn": "Registry.checkWithdraw", "offset": [5071, 5116], "op": "JUMPI", "path": "5"}, "2259": {"fn": "Registry.checkWithdraw", "offset": [5071, 5116], "op": "POP", "path": "5"}, "2260": {"fn": "Registry.checkWithdraw", "offset": [5108, 5115], "op": "DUP11", "path": "5"}, "2261": {"fn": "Registry.checkWithdraw", "offset": [5097, 5100], "op": "DUP3", "path": "5"}, "2262": {"fn": "Registry.checkWithdraw", "offset": [5097, 5104], "op": "PUSH1", "path": "5", "value": "0x20"}, "2264": {"fn": "Registry.checkWithdraw", "offset": [5097, 5104], "op": "ADD", "path": "5"}, "2265": {"fn": "Registry.checkWithdraw", "offset": [5097, 5104], "op": "MLOAD", "path": "5"}, "2266": {"fn": "Registry.checkWithdraw", "offset": [5089, 5094], "op": "DUP6", "path": "5"}, "2267": {"fn": "Registry.checkWithdraw", "offset": [5089, 5104], "op": "PUSH2", "path": "5", "value": "0x8E4"}, "2270": {"fn": "Registry.checkWithdraw", "offset": [5089, 5104], "op": "SWAP2", "path": "5"}, "2271": {"fn": "Registry.checkWithdraw", "offset": [5089, 5104], "op": "SWAP1", "path": "5"}, "2272": {"fn": "Registry.checkWithdraw", "offset": [5089, 5104], "op": "PUSH2", "path": "5", "value": "0xFEE"}, "2275": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [5089, 5104], "op": "JUMP", "path": "5"}, "2276": {"fn": "Registry.checkWithdraw", "offset": [5089, 5104], "op": "JUMPDEST", "path": "5"}, "2277": {"fn": "Registry.checkWithdraw", "offset": [5089, 5115], "op": "GT", "path": "5"}, "2278": {"fn": "Registry.checkWithdraw", "offset": [5089, 5115], "op": "ISZERO", "path": "5"}, "2279": {"fn": "Registry.checkWithdraw", "offset": [5071, 5116], "op": "JUMPDEST", "path": "5"}, "2280": {"fn": "Registry.checkWithdraw", "offset": [5067, 5287], "op": "ISZERO", "path": "5"}, "2281": {"fn": "Registry.checkWithdraw", "offset": [5067, 5287], "op": "PUSH2", "path": "5", "value": "0x971"}, "2284": {"fn": "Registry.checkWithdraw", "offset": [5067, 5287], "op": "JUMPI", "path": "5"}, "2285": {"fn": "Registry.checkWithdraw", "offset": [5150, 5153], "op": "DUP2", "path": "5", "statement": 16}, "2286": {"fn": "Registry.checkWithdraw", "offset": [5150, 5157], "op": "PUSH1", "path": "5", "value": "0x20"}, "2288": {"fn": "Registry.checkWithdraw", "offset": [5150, 5157], "op": "ADD", "path": "5"}, "2289": {"fn": "Registry.checkWithdraw", "offset": [5150, 5157], "op": "MLOAD", "path": "5"}, "2290": {"fn": "Registry.checkWithdraw", "offset": [5135, 5143], "op": "DUP6", "path": "5"}, "2291": {"fn": "Registry.checkWithdraw", "offset": [5144, 5145], "op": "DUP5", "path": "5"}, "2292": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "DUP2", "path": "5"}, "2293": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "MLOAD", "path": "5"}, "2294": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "DUP2", "path": "5"}, "2295": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "LT", "path": "5"}, "2296": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "PUSH2", "path": "5", "value": "0x903"}, "2299": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "JUMPI", "path": "5"}, "2300": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "PUSH2", "path": "5", "value": "0x903"}, "2303": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "2306": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [5135, 5146], "op": "JUMP", "path": "5"}, "2307": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "JUMPDEST", "path": "5"}, "2308": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "PUSH1", "path": "5", "value": "0x20"}, "2310": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "MUL", "path": "5"}, "2311": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "PUSH1", "path": "5", "value": "0x20"}, "2313": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "ADD", "path": "5"}, "2314": {"fn": "Registry.checkWithdraw", "offset": [5135, 5146], "op": "ADD", "path": "5"}, "2315": {"fn": "Registry.checkWithdraw", "offset": [5135, 5158], "op": "DUP2", "path": "5"}, "2316": {"fn": "Registry.checkWithdraw", "offset": [5135, 5158], "op": "DUP2", "path": "5"}, "2317": {"fn": "Registry.checkWithdraw", "offset": [5135, 5158], "op": "MSTORE", "path": "5"}, "2318": {"fn": "Registry.checkWithdraw", "offset": [5135, 5158], "op": "POP", "path": "5"}, "2319": {"fn": "Registry.checkWithdraw", "offset": [5135, 5158], "op": "POP", "path": "5"}, "2320": {"fn": "Registry.checkWithdraw", "offset": [5187, 5190], "op": "DUP2", "path": "5", "statement": 17}, "2321": {"fn": "Registry.checkWithdraw", "offset": [5187, 5195], "op": "PUSH1", "path": "5", "value": "0x0"}, "2323": {"fn": "Registry.checkWithdraw", "offset": [5187, 5195], "op": "ADD", "path": "5"}, "2324": {"fn": "Registry.checkWithdraw", "offset": [5187, 5195], "op": "MLOAD", "path": "5"}, "2325": {"fn": "Registry.checkWithdraw", "offset": [5176, 5180], "op": "DUP7", "path": "5"}, "2326": {"fn": "Registry.checkWithdraw", "offset": [5181, 5182], "op": "DUP5", "path": "5"}, "2327": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "DUP2", "path": "5"}, "2328": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "MLOAD", "path": "5"}, "2329": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "DUP2", "path": "5"}, "2330": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "LT", "path": "5"}, "2331": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "PUSH2", "path": "5", "value": "0x926"}, "2334": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "JUMPI", "path": "5"}, "2335": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "PUSH2", "path": "5", "value": "0x926"}, "2338": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "2341": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [5176, 5183], "op": "JUMP", "path": "5"}, "2342": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "JUMPDEST", "path": "5"}, "2343": {"op": "PUSH1", "value": "0x1"}, "2345": {"op": "PUSH1", "value": "0x1"}, "2347": {"op": "PUSH1", "value": "0xA0"}, "2349": {"op": "SHL"}, "2350": {"op": "SUB"}, "2351": {"fn": "Registry.checkWithdraw", "offset": [5176, 5196], "op": "SWAP1", "path": "5"}, "2352": {"fn": "Registry.checkWithdraw", "offset": [5176, 5196], "op": "SWAP3", "path": "5"}, "2353": {"fn": "Registry.checkWithdraw", "offset": [5176, 5196], "op": "AND", "path": "5"}, "2354": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "PUSH1", "path": "5", "value": "0x20"}, "2356": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "SWAP3", "path": "5"}, "2357": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "DUP4", "path": "5"}, "2358": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "MUL", "path": "5"}, "2359": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "SWAP2", "path": "5"}, "2360": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "SWAP1", "path": "5"}, "2361": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "SWAP2", "path": "5"}, "2362": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "ADD", "path": "5"}, "2363": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "DUP3", "path": "5"}, "2364": {"fn": "Registry.checkWithdraw", "offset": [5176, 5183], "op": "ADD", "path": "5"}, "2365": {"fn": "Registry.checkWithdraw", "offset": [5176, 5196], "op": "MSTORE", "path": "5"}, "2366": {"fn": "Registry.checkWithdraw", "offset": [5223, 5230], "op": "DUP3", "path": "5", "statement": 18}, "2367": {"fn": "Registry.checkWithdraw", "offset": [5223, 5230], "op": "ADD", "path": "5"}, "2368": {"fn": "Registry.checkWithdraw", "offset": [5223, 5230], "op": "MLOAD", "path": "5"}, "2369": {"fn": "Registry.checkWithdraw", "offset": [5214, 5230], "op": "PUSH2", "path": "5", "value": "0x94A"}, "2372": {"fn": "Registry.checkWithdraw", "offset": [5214, 5230], "op": "SWAP1", "path": "5"}, "2373": {"fn": "Registry.checkWithdraw", "offset": [5214, 5230], "op": "DUP6", "path": "5"}, "2374": {"fn": "Registry.checkWithdraw", "offset": [5214, 5230], "op": "PUSH2", "path": "5", "value": "0xFEE"}, "2377": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [5214, 5230], "op": "JUMP", "path": "5"}, "2378": {"fn": "Registry.checkWithdraw", "offset": [5214, 5230], "op": "JUMPDEST", "path": "5"}, "2379": {"fn": "Registry.checkWithdraw", "offset": [5214, 5230], "op": "SWAP4", "path": "5"}, "2380": {"fn": "Registry.checkWithdraw", "offset": [5214, 5230], "op": "POP", "path": "5"}, "2381": {"fn": "Registry.checkWithdraw", "offset": [5271, 5272], "op": "PUSH1", "path": "5", "statement": 19, "value": "0x0"}, "2383": {"fn": "Registry.checkWithdraw", "offset": [5249, 5257], "op": "DUP9", "path": "5"}, "2384": {"fn": "Registry.checkWithdraw", "offset": [5258, 5263], "op": "DUP3", "path": "5"}, "2385": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "DUP2", "path": "5"}, "2386": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "MLOAD", "path": "5"}, "2387": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "DUP2", "path": "5"}, "2388": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "LT", "path": "5"}, "2389": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "PUSH2", "path": "5", "value": "0x960"}, "2392": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "JUMPI", "path": "5"}, "2393": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "PUSH2", "path": "5", "value": "0x960"}, "2396": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "2399": {"fn": "Registry.checkWithdraw", "jump": "i", "offset": [5249, 5264], "op": "JUMP", "path": "5"}, "2400": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "JUMPDEST", "path": "5"}, "2401": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "PUSH1", "path": "5", "value": "0x20"}, "2403": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "MUL", "path": "5"}, "2404": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "PUSH1", "path": "5", "value": "0x20"}, "2406": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "ADD", "path": "5"}, "2407": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "ADD", "path": "5"}, "2408": {"fn": "Registry.checkWithdraw", "offset": [5249, 5264], "op": "MLOAD", "path": "5"}, "2409": {"fn": "Registry.checkWithdraw", "offset": [5249, 5268], "op": "PUSH1", "path": "5", "value": "0x20"}, "2411": {"fn": "Registry.checkWithdraw", "offset": [5249, 5268], "op": "ADD", "path": "5"}, "2412": {"fn": "Registry.checkWithdraw", "offset": [5249, 5272], "op": "DUP2", "path": "5"}, "2413": {"fn": "Registry.checkWithdraw", "offset": [5249, 5272], "op": "DUP2", "path": "5"}, "2414": {"fn": "Registry.checkWithdraw", "offset": [5249, 5272], "op": "MSTORE", "path": "5"}, "2415": {"fn": "Registry.checkWithdraw", "offset": [5249, 5272], "op": "POP", "path": "5"}, "2416": {"fn": "Registry.checkWithdraw", "offset": [5249, 5272], "op": "POP", "path": "5"}, "2417": {"fn": "Registry.checkWithdraw", "offset": [5067, 5287], "op": "JUMPDEST", "path": "5"}, "2418": {"op": "POP"}, "2419": {"op": "POP"}, "2420": {"fn": "Registry.checkWithdraw", "offset": [5310, 5313], "op": "PUSH1", "path": "5", "statement": 20, "value": "0x1"}, "2422": {"fn": "Registry.checkWithdraw", "offset": [5310, 5313], "op": "ADD", "path": "5"}, "2423": {"fn": "Registry.checkWithdraw", "offset": [4757, 5328], "op": "PUSH2", "path": "5", "value": "0x804"}, "2426": {"fn": "Registry.checkWithdraw", "offset": [4757, 5328], "op": "JUMP", "path": "5"}, "2427": {"fn": "Registry.checkWithdraw", "offset": [4757, 5328], "op": "JUMPDEST", "path": "5"}, "2428": {"op": "POP"}, "2429": {"fn": "Registry.checkWithdraw", "offset": [5345, 5349], "op": "SWAP2", "path": "5", "statement": 21}, "2430": {"fn": "Registry.checkWithdraw", "offset": [5345, 5349], "op": "SWAP8", "path": "5"}, "2431": {"fn": "Registry.checkWithdraw", "offset": [5351, 5359], "op": "SWAP1", "path": "5"}, "2432": {"fn": "Registry.checkWithdraw", "offset": [5351, 5359], "op": "SWAP7", "path": "5"}, "2433": {"op": "POP"}, "2434": {"fn": "Registry.checkWithdraw", "offset": [4425, 5367], "op": "SWAP5", "path": "5"}, "2435": {"op": "POP"}, "2436": {"op": "POP"}, "2437": {"op": "POP"}, "2438": {"op": "POP"}, "2439": {"op": "POP"}, "2440": {"fn": "Registry.checkWithdraw", "jump": "o", "offset": [4425, 5367], "op": "JUMP", "path": "5"}, "2441": {"fn": "Registry.addTokenPool", "offset": [1298, 1651], "op": "JUMPDEST", "path": "5"}, "2442": {"fn": "Registry.addTokenPool", "offset": [1418, 1425], "op": "PUSH1", "path": "5", "statement": 22, "value": "0x2"}, "2444": {"fn": "Registry.addTokenPool", "offset": [1418, 1425], "op": "SLOAD", "path": "5"}, "2445": {"op": "PUSH1", "value": "0x1"}, "2447": {"op": "PUSH1", "value": "0x1"}, "2449": {"op": "PUSH1", "value": "0xA0"}, "2451": {"op": "SHL"}, "2452": {"op": "SUB"}, "2453": {"fn": "Registry.addTokenPool", "offset": [1418, 1425], "op": "AND", "path": "5"}, "2454": {"fn": "Registry.addTokenPool", "offset": [1404, 1414], "op": "CALLER", "path": "5"}, "2455": {"branch": 36, "fn": "Registry.addTokenPool", "offset": [1404, 1425], "op": "EQ", "path": "5"}, "2456": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "PUSH2", "path": "5", "value": "0x9F3"}, "2459": {"branch": 36, "fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "JUMPI", "path": "5"}, "2460": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "PUSH1", "path": "5", "value": "0x40"}, "2462": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "MLOAD", "path": "5"}, "2463": {"op": "PUSH3", "value": "0x461BCD"}, "2467": {"op": "PUSH1", "value": "0xE5"}, "2469": {"op": "SHL"}, "2470": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "DUP2", "path": "5"}, "2471": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "MSTORE", "path": "5"}, "2472": {"op": "PUSH1", "value": "0x20"}, "2474": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "PUSH1", "path": "5", "value": "0x4"}, "2476": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "DUP3", "path": "5"}, "2477": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "ADD", "path": "5"}, "2478": {"op": "MSTORE"}, "2479": {"op": "PUSH1", "value": "0x24"}, "2481": {"op": "DUP1"}, "2482": {"op": "DUP3"}, "2483": {"op": "ADD"}, "2484": {"op": "MSTORE"}, "2485": {"op": "PUSH32", "value": "0x4F6E6C792074686520666163746F72792063616E2061646420746F6B656E2070"}, "2518": {"op": "PUSH1", "value": "0x44"}, "2520": {"op": "DUP3"}, "2521": {"op": "ADD"}, "2522": {"op": "MSTORE"}, "2523": {"op": "PUSH4", "value": "0x6F6F6C73"}, "2528": {"op": "PUSH1", "value": "0xE0"}, "2530": {"op": "SHL"}, "2531": {"op": "PUSH1", "value": "0x64"}, "2533": {"op": "DUP3"}, "2534": {"op": "ADD"}, "2535": {"op": "MSTORE"}, "2536": {"op": "PUSH1", "value": "0x84"}, "2538": {"op": "ADD"}, "2539": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "PUSH1", "path": "5", "value": "0x40"}, "2541": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "MLOAD", "path": "5"}, "2542": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "DUP1", "path": "5"}, "2543": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "SWAP2", "path": "5"}, "2544": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "SUB", "path": "5"}, "2545": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "SWAP1", "path": "5"}, "2546": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "REVERT", "optimizer_revert": true, "path": "5"}, "2547": {"fn": "Registry.addTokenPool", "offset": [1396, 1466], "op": "JUMPDEST", "path": "5"}, "2548": {"fn": "Registry.addTokenPool", "offset": [1476, 1486], "op": "PUSH1", "path": "5", "statement": 23, "value": "0x1"}, "2550": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "DUP1", "path": "5"}, "2551": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SLOAD", "path": "5"}, "2552": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "DUP1", "path": "5"}, "2553": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "DUP3", "path": "5"}, "2554": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "ADD", "path": "5"}, "2555": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SWAP1", "path": "5"}, "2556": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SWAP2", "path": "5"}, "2557": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SSTORE", "path": "5"}, "2558": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "PUSH32", "path": "5", "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"}, "2591": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "ADD", "path": "5"}, "2592": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "DUP1", "path": "5"}, "2593": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SLOAD", "path": "5"}, "2594": {"op": "PUSH1", "value": "0x1"}, "2596": {"op": "PUSH1", "value": "0x1"}, "2598": {"op": "PUSH1", "value": "0xA0"}, "2600": {"op": "SHL"}, "2601": {"op": "SUB"}, "2602": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SWAP5", "path": "5"}, "2603": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "DUP6", "path": "5"}, "2604": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "AND", "path": "5"}, "2605": {"op": "PUSH1", "value": "0x1"}, "2607": {"op": "PUSH1", "value": "0x1"}, "2609": {"op": "PUSH1", "value": "0xA0"}, "2611": {"op": "SHL"}, "2612": {"op": "SUB"}, "2613": {"op": "NOT"}, "2614": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SWAP2", "path": "5"}, "2615": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "DUP3", "path": "5"}, "2616": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "AND", "path": "5"}, "2617": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "DUP2", "path": "5"}, "2618": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "OR", "path": "5"}, "2619": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SWAP1", "path": "5"}, "2620": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SWAP3", "path": "5"}, "2621": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "SSTORE", "path": "5"}, "2622": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "SWAP3", "path": "5", "statement": 24}, "2623": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "SWAP1", "path": "5"}, "2624": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "SWAP4", "path": "5"}, "2625": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "AND", "path": "5"}, "2626": {"op": "PUSH1", "value": "0x0"}, "2628": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "DUP2", "path": "5"}, "2629": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "DUP2", "path": "5"}, "2630": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "MSTORE", "path": "5"}, "2631": {"fn": "Registry.addTokenPool", "offset": [1513, 1524], "op": "PUSH1", "path": "5", "value": "0x3"}, "2633": {"fn": "Registry.addTokenPool", "offset": [1476, 1503], "op": "PUSH1", "path": "5", "value": "0x20"}, "2635": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "SWAP1", "path": "5"}, "2636": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "DUP2", "path": "5"}, "2637": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "MSTORE", "path": "5"}, "2638": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "PUSH1", "path": "5", "value": "0x40"}, "2640": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "DUP1", "path": "5"}, "2641": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "DUP4", "path": "5"}, "2642": {"fn": "Registry.addTokenPool", "offset": [1513, 1532], "op": "KECCAK256", "path": "5"}, "2643": {"fn": "Registry.addTokenPool", "offset": [1513, 1545], "op": "DUP1", "path": "5"}, "2644": {"fn": "Registry.addTokenPool", "offset": [1513, 1545], "op": "SLOAD", "path": "5"}, "2645": {"fn": "Registry.addTokenPool", "offset": [1513, 1545], "op": "DUP8", "path": "5"}, "2646": {"fn": "Registry.addTokenPool", "offset": [1513, 1545], "op": "AND", "path": "5"}, "2647": {"fn": "Registry.addTokenPool", "offset": [1513, 1545], "op": "DUP9", "path": "5"}, "2648": {"fn": "Registry.addTokenPool", "offset": [1513, 1545], "op": "OR", "path": "5"}, "2649": {"fn": "Registry.addTokenPool", "offset": [1513, 1545], "op": "SWAP1", "path": "5"}, "2650": {"fn": "Registry.addTokenPool", "offset": [1513, 1545], "op": "SSTORE", "path": "5"}, "2651": {"fn": "Registry.addTokenPool", "offset": [1555, 1578], "op": "SWAP6", "path": "5", "statement": 25}, "2652": {"fn": "Registry.addTokenPool", "offset": [1555, 1578], "op": "DUP3", "path": "5"}, "2653": {"fn": "Registry.addTokenPool", "offset": [1555, 1578], "op": "MSTORE", "path": "5"}, "2654": {"fn": "Registry.addTokenPool", "offset": [1555, 1566], "op": "PUSH1", "path": "5", "value": "0x4"}, "2656": {"fn": "Registry.addTokenPool", "offset": [1555, 1578], "op": "DUP2", "path": "5"}, "2657": {"fn": "Registry.addTokenPool", "offset": [1555, 1578], "op": "MSTORE", "path": "5"}, "2658": {"fn": "Registry.addTokenPool", "offset": [1555, 1578], "op": "DUP6", "path": "5"}, "2659": {"fn": "Registry.addTokenPool", "offset": [1555, 1578], "op": "DUP3", "path": "5"}, "2660": {"fn": "Registry.addTokenPool", "offset": [1555, 1578], "op": "KECCAK256", "path": "5"}, "2661": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "DUP1", "path": "5"}, "2662": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "SLOAD", "path": "5"}, "2663": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "SWAP1", "path": "5"}, "2664": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "SWAP6", "path": "5"}, "2665": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "AND", "path": "5"}, "2666": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "SWAP1", "path": "5"}, "2667": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "SWAP3", "path": "5"}, "2668": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "OR", "path": "5"}, "2669": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "SWAP1", "path": "5"}, "2670": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "SWAP4", "path": "5"}, "2671": {"fn": "Registry.addTokenPool", "offset": [1555, 1587], "op": "SSTORE", "path": "5"}, "2672": {"fn": "Registry.addTokenPool", "offset": [1597, 1616], "op": "PUSH1", "path": "5", "statement": 26, "value": "0x5"}, "2674": {"fn": "Registry.addTokenPool", "offset": [1597, 1628], "op": "SWAP1", "path": "5"}, "2675": {"fn": "Registry.addTokenPool", "offset": [1597, 1628], "op": "MSTORE", "path": "5"}, "2676": {"fn": "Registry.addTokenPool", "offset": [1597, 1628], "op": "SWAP2", "path": "5"}, "2677": {"fn": "Registry.addTokenPool", "offset": [1597, 1628], "op": "SWAP1", "path": "5"}, "2678": {"fn": "Registry.addTokenPool", "offset": [1597, 1628], "op": "KECCAK256", "path": "5"}, "2679": {"fn": "Registry.addTokenPool", "offset": [1597, 1644], "op": "SSTORE", "path": "5"}, "2680": {"fn": "Registry.addTokenPool", "jump": "o", "offset": [1298, 1651], "op": "JUMP", "path": "5"}, "2681": {"fn": "Registry.getTotalAUMinUSD", "offset": [2147, 2522], "op": "JUMPDEST", "path": "5"}, "2682": {"fn": "Registry.getTotalAUMinUSD", "offset": [2256, 2266], "op": "PUSH1", "path": "5", "value": "0x1"}, "2684": {"fn": "Registry.getTotalAUMinUSD", "offset": [2256, 2273], "op": "SLOAD", "path": "5"}, "2685": {"fn": "Registry.getTotalAUMinUSD", "offset": [2196, 2203], "op": "PUSH1", "path": "5", "value": "0x0"}, "2687": {"fn": "Registry.getTotalAUMinUSD", "offset": [2196, 2203], "op": "SWAP1", "path": "5"}, "2688": {"fn": "Registry.getTotalAUMinUSD", "offset": [2196, 2203], "op": "DUP2", "path": "5"}, "2689": {"fn": "Registry.getTotalAUMinUSD", "offset": [2196, 2203], "op": "SWAP1", "path": "5"}, "2690": {"fn": "Registry.getTotalAUMinUSD", "offset": [2196, 2203], "op": "DUP2", "path": "5"}, "2691": {"fn": "Registry.getTotalAUMinUSD", "offset": [2283, 2494], "op": "JUMPDEST", "path": "5"}, "2692": {"fn": "Registry.getTotalAUMinUSD", "offset": [2304, 2307], "op": "DUP2", "path": "5"}, "2693": {"fn": "Registry.getTotalAUMinUSD", "offset": [2300, 2301], "op": "DUP2", "path": "5"}, "2694": {"fn": "Registry.getTotalAUMinUSD", "offset": [2300, 2307], "op": "LT", "path": "5"}, "2695": {"fn": "Registry.getTotalAUMinUSD", "offset": [2283, 2494], "op": "ISZERO", "path": "5"}, "2696": {"fn": "Registry.getTotalAUMinUSD", "offset": [2283, 2494], "op": "PUSH2", "path": "5", "value": "0xB31"}, "2699": {"fn": "Registry.getTotalAUMinUSD", "offset": [2283, 2494], "op": "JUMPI", "path": "5"}, "2700": {"fn": "Registry.getTotalAUMinUSD", "offset": [2324, 2336], "op": "PUSH1", "path": "5", "value": "0x0"}, "2702": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2349], "op": "PUSH1", "path": "5", "value": "0x1"}, "2704": {"fn": "Registry.getTotalAUMinUSD", "offset": [2350, 2351], "op": "DUP3", "path": "5"}, "2705": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "DUP2", "path": "5"}, "2706": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "SLOAD", "path": "5"}, "2707": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "DUP2", "path": "5"}, "2708": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "LT", "path": "5"}, "2709": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "PUSH2", "path": "5", "value": "0xAA0"}, "2712": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "JUMPI", "path": "5"}, "2713": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "PUSH2", "path": "5", "value": "0xAA0"}, "2716": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "PUSH2", "path": "5", "value": "0xF3F"}, "2719": {"fn": "Registry.getTotalAUMinUSD", "jump": "i", "offset": [2339, 2352], "op": "JUMP", "path": "5"}, "2720": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "JUMPDEST", "path": "5"}, "2721": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "PUSH1", "path": "5", "value": "0x0"}, "2723": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "SWAP2", "path": "5"}, "2724": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "DUP3", "path": "5"}, "2725": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "MSTORE", "path": "5"}, "2726": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "PUSH1", "path": "5", "value": "0x20"}, "2728": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "DUP1", "path": "5"}, "2729": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "DUP4", "path": "5"}, "2730": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "KECCAK256", "path": "5"}, "2731": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "SWAP1", "path": "5"}, "2732": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "SWAP2", "path": "5"}, "2733": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "ADD", "path": "5"}, "2734": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "SLOAD", "path": "5"}, "2735": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH1", "path": "5", "value": "0x40"}, "2737": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP1", "path": "5"}, "2738": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "MLOAD", "path": "5"}, "2739": {"op": "PUSH4", "value": "0x1BA2F531"}, "2744": {"op": "PUSH1", "value": "0xE0"}, "2746": {"op": "SHL"}, "2747": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP2", "path": "5"}, "2748": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "MSTORE", "path": "5"}, "2749": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "SWAP1", "path": "5"}, "2750": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "MLOAD", "path": "5"}, "2751": {"op": "PUSH1", "value": "0x1"}, "2753": {"op": "PUSH1", "value": "0x1"}, "2755": {"op": "PUSH1", "value": "0xA0"}, "2757": {"op": "SHL"}, "2758": {"op": "SUB"}, "2759": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "SWAP1", "path": "5"}, "2760": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "SWAP3", "path": "5"}, "2761": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "AND", "path": "5"}, "2762": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "SWAP5", "path": "5"}, "2763": {"op": "POP"}, "2764": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "DUP5", "path": "5"}, "2765": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "SWAP3", "path": "5"}, "2766": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2419], "op": "PUSH4", "path": "5", "value": "0x1BA2F531"}, "2771": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2419], "op": "SWAP3", "path": "5"}, "2772": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH1", "path": "5", "value": "0x4"}, "2774": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP1", "path": "5"}, "2775": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP5", "path": "5"}, "2776": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "ADD", "path": "5"}, "2777": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "SWAP4", "path": "5"}, "2778": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP3", "path": "5"}, "2779": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "SWAP1", "path": "5"}, "2780": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "SUB", "path": "5"}, "2781": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "ADD", "path": "5"}, "2782": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP2", "path": "5"}, "2783": {"fn": "Registry.getTotalAUMinUSD", "offset": [2339, 2352], "op": "DUP7", "path": "5"}, "2784": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "GAS", "path": "5"}, "2785": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "STATICCALL", "path": "5"}, "2786": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "ISZERO", "path": "5"}, "2787": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP1", "path": "5"}, "2788": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "ISZERO", "path": "5"}, "2789": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH2", "path": "5", "value": "0xAF2"}, "2792": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "JUMPI", "path": "5"}, "2793": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "RETURNDATASIZE", "path": "5"}, "2794": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH1", "path": "5", "value": "0x0"}, "2796": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP1", "path": "5"}, "2797": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "RETURNDATACOPY", "path": "5"}, "2798": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "RETURNDATASIZE", "path": "5"}, "2799": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH1", "path": "5", "value": "0x0"}, "2801": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "REVERT", "path": "5"}, "2802": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "JUMPDEST", "path": "5"}, "2803": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "POP", "path": "5"}, "2804": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "POP", "path": "5"}, "2805": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "POP", "path": "5"}, "2806": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "POP", "path": "5"}, "2807": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH1", "path": "5", "value": "0x40"}, "2809": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "MLOAD", "path": "5"}, "2810": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "RETURNDATASIZE", "path": "5"}, "2811": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH1", "path": "5", "value": "0x1F"}, "2813": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "NOT", "path": "5"}, "2814": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH1", "path": "5", "value": "0x1F"}, "2816": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP3", "path": "5"}, "2817": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "ADD", "path": "5"}, "2818": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "AND", "path": "5"}, "2819": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP3", "path": "5"}, "2820": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "ADD", "path": "5"}, "2821": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP1", "path": "5"}, "2822": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH1", "path": "5", "value": "0x40"}, "2824": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "MSTORE", "path": "5"}, "2825": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "POP", "path": "5"}, "2826": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "DUP2", "path": "5"}, "2827": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "ADD", "path": "5"}, "2828": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "SWAP1", "path": "5"}, "2829": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH2", "path": "5", "value": "0xB16"}, "2832": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "SWAP2", "path": "5"}, "2833": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "SWAP1", "path": "5"}, "2834": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "PUSH2", "path": "5", "value": "0xF55"}, "2837": {"fn": "Registry.getTotalAUMinUSD", "jump": "i", "offset": [2390, 2421], "op": "JUMP", "path": "5"}, "2838": {"fn": "Registry.getTotalAUMinUSD", "offset": [2390, 2421], "op": "JUMPDEST", "path": "5"}, "2839": {"fn": "Registry.getTotalAUMinUSD", "offset": [2368, 2421], "op": "SWAP1", "path": "5"}, "2840": {"op": "POP"}, "2841": {"fn": "Registry.getTotalAUMinUSD", "offset": [2435, 2455], "op": "PUSH2", "path": "5", "statement": 27, "value": "0xB22"}, "2844": {"fn": "Registry.getTotalAUMinUSD", "offset": [2368, 2421], "op": "DUP2", "path": "5"}, "2845": {"fn": "Registry.getTotalAUMinUSD", "offset": [2435, 2455], "op": "DUP7", "path": "5"}, "2846": {"fn": "Registry.getTotalAUMinUSD", "offset": [2435, 2455], "op": "PUSH2", "path": "5", "value": "0xFEE"}, "2849": {"fn": "Registry.getTotalAUMinUSD", "jump": "i", "offset": [2435, 2455], "op": "JUMP", "path": "5"}, "2850": {"fn": "Registry.getTotalAUMinUSD", "offset": [2435, 2455], "op": "JUMPDEST", "path": "5"}, "2851": {"fn": "Registry.getTotalAUMinUSD", "offset": [2435, 2455], "op": "SWAP5", "path": "5"}, "2852": {"fn": "Registry.getTotalAUMinUSD", "offset": [2435, 2455], "op": "POP", "path": "5"}, "2853": {"fn": "Registry.getTotalAUMinUSD", "offset": [2479, 2482], "op": "DUP3", "path": "5", "statement": 28}, "2854": {"fn": "Registry.getTotalAUMinUSD", "offset": [2479, 2482], "op": "PUSH1", "path": "5", "value": "0x1"}, "2856": {"fn": "Registry.getTotalAUMinUSD", "offset": [2479, 2482], "op": "ADD", "path": "5"}, "2857": {"fn": "Registry.getTotalAUMinUSD", "offset": [2479, 2482], "op": "SWAP3", "path": "5"}, "2858": {"fn": "Registry.getTotalAUMinUSD", "offset": [2479, 2482], "op": "POP", "path": "5"}, "2859": {"fn": "Registry.getTotalAUMinUSD", "offset": [2310, 2494], "op": "POP", "path": "5"}, "2860": {"fn": "Registry.getTotalAUMinUSD", "offset": [2310, 2494], "op": "POP", "path": "5"}, "2861": {"fn": "Registry.getTotalAUMinUSD", "offset": [2283, 2494], "op": "PUSH2", "path": "5", "value": "0xA83"}, "2864": {"fn": "Registry.getTotalAUMinUSD", "offset": [2283, 2494], "op": "JUMP", "path": "5"}, "2865": {"fn": "Registry.getTotalAUMinUSD", "offset": [2283, 2494], "op": "JUMPDEST", "path": "5"}, "2866": {"op": "POP"}, "2867": {"fn": "Registry.getTotalAUMinUSD", "offset": [2510, 2515], "op": "SWAP1", "path": "5", "statement": 29}, "2868": {"fn": "Registry.getTotalAUMinUSD", "offset": [2510, 2515], "op": "SWAP3", "path": "5"}, "2869": {"fn": "Registry.getTotalAUMinUSD", "offset": [2147, 2522], "op": "SWAP2", "path": "5"}, "2870": {"op": "POP"}, "2871": {"op": "POP"}, "2872": {"fn": "Registry.getTotalAUMinUSD", "jump": "o", "offset": [2147, 2522], "op": "JUMP", "path": "5"}, "2873": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "JUMPDEST", "path": "5"}, "2874": {"fn": "Registry.getNewConcentration", "offset": [6598, 6602], "op": "PUSH1", "path": "5", "value": "0x0"}, "2876": {"fn": "Registry.getNewConcentration", "offset": [6621, 6634], "op": "DUP1", "path": "5"}, "2877": {"fn": "Registry.getNewConcentration", "offset": [6637, 6655], "op": "PUSH2", "path": "5", "value": "0xB44"}, "2880": {"fn": "Registry.getNewConcentration", "offset": [6637, 6653], "op": "PUSH2", "path": "5", "value": "0xA79"}, "2883": {"fn": "Registry.getNewConcentration", "jump": "i", "offset": [6637, 6655], "op": "JUMP", "path": "5"}, "2884": {"fn": "Registry.getNewConcentration", "offset": [6637, 6655], "op": "JUMPDEST", "path": "5"}, "2885": {"fn": "Registry.getNewConcentration", "offset": [6621, 6655], "op": "SWAP1", "path": "5"}, "2886": {"fn": "Registry.getNewConcentration", "offset": [6621, 6655], "op": "POP", "path": "5"}, "2887": {"fn": "Registry.getNewConcentration", "offset": [6669, 6688], "op": "PUSH1", "path": "5", "value": "0x0"}, "2889": {"fn": "Registry.getNewConcentration", "offset": [6725, 6731], "op": "DUP4", "path": "5"}, "2890": {"fn": "Registry.getNewConcentration", "offset": [6702, 6706], "op": "DUP6", "path": "5"}, "2891": {"op": "PUSH1", "value": "0x1"}, "2893": {"op": "PUSH1", "value": "0x1"}, "2895": {"op": "PUSH1", "value": "0xA0"}, "2897": {"op": "SHL"}, "2898": {"op": "SUB"}, "2899": {"fn": "Registry.getNewConcentration", "offset": [6691, 6720], "op": "AND", "path": "5"}, "2900": {"fn": "Registry.getNewConcentration", "offset": [6691, 6720], "op": "PUSH4", "path": "5", "value": "0x1BA2F531"}, "2905": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x40"}, "2907": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "MLOAD", "path": "5"}, "2908": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP2", "path": "5"}, "2909": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH4", "path": "5", "value": "0xFFFFFFFF"}, "2914": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "AND", "path": "5"}, "2915": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0xE0"}, "2917": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "SHL", "path": "5"}, "2918": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP2", "path": "5"}, "2919": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "MSTORE", "path": "5"}, "2920": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x4"}, "2922": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "ADD", "path": "5"}, "2923": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x20"}, "2925": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x40"}, "2927": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "MLOAD", "path": "5"}, "2928": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP1", "path": "5"}, "2929": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP4", "path": "5"}, "2930": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "SUB", "path": "5"}, "2931": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP2", "path": "5"}, "2932": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP7", "path": "5"}, "2933": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "GAS", "path": "5"}, "2934": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "STATICCALL", "path": "5"}, "2935": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "ISZERO", "path": "5"}, "2936": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP1", "path": "5"}, "2937": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "ISZERO", "path": "5"}, "2938": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH2", "path": "5", "value": "0xB87"}, "2941": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "JUMPI", "path": "5"}, "2942": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "RETURNDATASIZE", "path": "5"}, "2943": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x0"}, "2945": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP1", "path": "5"}, "2946": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "RETURNDATACOPY", "path": "5"}, "2947": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "RETURNDATASIZE", "path": "5"}, "2948": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x0"}, "2950": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "REVERT", "path": "5"}, "2951": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "JUMPDEST", "path": "5"}, "2952": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "POP", "path": "5"}, "2953": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "POP", "path": "5"}, "2954": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "POP", "path": "5"}, "2955": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "POP", "path": "5"}, "2956": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x40"}, "2958": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "MLOAD", "path": "5"}, "2959": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "RETURNDATASIZE", "path": "5"}, "2960": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x1F"}, "2962": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "NOT", "path": "5"}, "2963": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x1F"}, "2965": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP3", "path": "5"}, "2966": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "ADD", "path": "5"}, "2967": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "AND", "path": "5"}, "2968": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP3", "path": "5"}, "2969": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "ADD", "path": "5"}, "2970": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP1", "path": "5"}, "2971": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH1", "path": "5", "value": "0x40"}, "2973": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "MSTORE", "path": "5"}, "2974": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "POP", "path": "5"}, "2975": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "DUP2", "path": "5"}, "2976": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "ADD", "path": "5"}, "2977": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "SWAP1", "path": "5"}, "2978": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH2", "path": "5", "value": "0xBAB"}, "2981": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "SWAP2", "path": "5"}, "2982": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "SWAP1", "path": "5"}, "2983": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "PUSH2", "path": "5", "value": "0xF55"}, "2986": {"fn": "Registry.getNewConcentration", "jump": "i", "offset": [6691, 6722], "op": "JUMP", "path": "5"}, "2987": {"fn": "Registry.getNewConcentration", "offset": [6691, 6722], "op": "JUMPDEST", "path": "5"}, "2988": {"fn": "Registry.getNewConcentration", "offset": [6691, 6731], "op": "PUSH2", "path": "5", "value": "0xBB5"}, "2991": {"fn": "Registry.getNewConcentration", "offset": [6691, 6731], "op": "SWAP2", "path": "5"}, "2992": {"fn": "Registry.getNewConcentration", "offset": [6691, 6731], "op": "SWAP1", "path": "5"}, "2993": {"fn": "Registry.getNewConcentration", "offset": [6691, 6731], "op": "PUSH2", "path": "5", "value": "0xFEE"}, "2996": {"fn": "Registry.getNewConcentration", "jump": "i", "offset": [6691, 6731], "op": "JUMP", "path": "5"}, "2997": {"fn": "Registry.getNewConcentration", "offset": [6691, 6731], "op": "JUMPDEST", "path": "5"}, "2998": {"fn": "Registry.getNewConcentration", "offset": [6669, 6731], "op": "SWAP1", "path": "5"}, "2999": {"op": "POP"}, "3000": {"fn": "Registry.getNewConcentration", "offset": [6759, 6769], "op": "DUP2", "path": "5", "statement": 30}, "3001": {"branch": 37, "fn": "Registry.getNewConcentration", "offset": [6759, 6769], "op": "ISZERO", "path": "5"}, "3002": {"fn": "Registry.getNewConcentration", "offset": [6759, 6802], "op": "PUSH2", "path": "5", "value": "0xBDA"}, "3005": {"branch": 37, "fn": "Registry.getNewConcentration", "offset": [6759, 6802], "op": "JUMPI", "path": "5"}, "3006": {"fn": "Registry.getNewConcentration", "offset": [6797, 6802], "op": "DUP2", "path": "5"}, "3007": {"fn": "Registry.getNewConcentration", "offset": [6775, 6796], "op": "PUSH2", "path": "5", "value": "0xBCB"}, "3010": {"offset": [471, 474], "op": "PUSH3", "path": "5", "value": "0xF4240"}, "3014": {"fn": "Registry.getNewConcentration", "offset": [6775, 6786], "op": "DUP4", "path": "5"}, "3015": {"fn": "Registry.getNewConcentration", "offset": [6775, 6796], "op": "PUSH2", "path": "5", "value": "0xF6E"}, "3018": {"fn": "Registry.getNewConcentration", "jump": "i", "offset": [6775, 6796], "op": "JUMP", "path": "5"}, "3019": {"fn": "Registry.getNewConcentration", "offset": [6775, 6796], "op": "JUMPDEST", "path": "5"}, "3020": {"fn": "Registry.getNewConcentration", "offset": [6775, 6802], "op": "PUSH2", "path": "5", "value": "0xBD5"}, "3023": {"fn": "Registry.getNewConcentration", "offset": [6775, 6802], "op": "SWAP2", "path": "5"}, "3024": {"fn": "Registry.getNewConcentration", "offset": [6775, 6802], "op": "SWAP1", "path": "5"}, "3025": {"fn": "Registry.getNewConcentration", "offset": [6775, 6802], "op": "PUSH2", "path": "5", "value": "0xF8D"}, "3028": {"fn": "Registry.getNewConcentration", "jump": "i", "offset": [6775, 6802], "op": "JUMP", "path": "5"}, "3029": {"fn": "Registry.getNewConcentration", "offset": [6775, 6802], "op": "JUMPDEST", "path": "5"}, "3030": {"fn": "Registry.getNewConcentration", "offset": [6759, 6802], "op": "PUSH2", "path": "5", "value": "0xBDD"}, "3033": {"fn": "Registry.getNewConcentration", "offset": [6759, 6802], "op": "JUMP", "path": "5"}, "3034": {"fn": "Registry.getNewConcentration", "offset": [6759, 6802], "op": "JUMPDEST", "path": "5"}, "3035": {"fn": "Registry.getNewConcentration", "offset": [6772, 6773], "op": "PUSH1", "path": "5", "value": "0x0"}, "3037": {"fn": "Registry.getNewConcentration", "offset": [6759, 6802], "op": "JUMPDEST", "path": "5"}, "3038": {"fn": "Registry.getNewConcentration", "offset": [6752, 6802], "op": "SWAP6", "path": "5"}, "3039": {"fn": "Registry.getNewConcentration", "offset": [6520, 6826], "op": "SWAP5", "path": "5"}, "3040": {"op": "POP"}, "3041": {"op": "POP"}, "3042": {"op": "POP"}, "3043": {"op": "POP"}, "3044": {"op": "POP"}, "3045": {"fn": "Registry.getNewConcentration", "jump": "o", "offset": [6520, 6826], "op": "JUMP", "path": "5"}, "3046": {"fn": "Registry.setTargetConcentration", "offset": [1818, 1974], "op": "JUMPDEST", "path": "5"}, "3047": {"offset": [755, 760], "op": "PUSH1", "path": "5", "value": "0x0"}, "3049": {"fn": "Registry.setTargetConcentration", "offset": [755, 760], "op": "SLOAD", "path": "5"}, "3050": {"op": "PUSH1", "value": "0x1"}, "3052": {"op": "PUSH1", "value": "0x1"}, "3054": {"op": "PUSH1", "value": "0xA0"}, "3056": {"op": "SHL"}, "3057": {"op": "SUB"}, "3058": {"offset": [755, 760], "op": "AND", "path": "5"}, "3059": {"offset": [741, 751], "op": "CALLER", "path": "5"}, "3060": {"offset": [741, 760], "op": "EQ", "path": "5"}, "3061": {"offset": [737, 814], "op": "PUSH2", "path": "5", "value": "0xC11"}, "3064": {"offset": [737, 814], "op": "JUMPI", "path": "5"}, "3065": {"offset": [783, 803], "op": "PUSH1", "path": "5", "value": "0x40"}, "3067": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "MLOAD", "path": "5"}, "3068": {"op": "PUSH4", "value": "0xDA476DD7"}, "3073": {"op": "PUSH1", "value": "0xE0"}, "3075": {"op": "SHL"}, "3076": {"offset": [783, 803], "op": "DUP2", "path": "5"}, "3077": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "MSTORE", "path": "5"}, "3078": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "PUSH1", "path": "5", "value": "0x4"}, "3080": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "ADD", "path": "5"}, "3081": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "PUSH1", "path": "5", "value": "0x40"}, "3083": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "MLOAD", "path": "5"}, "3084": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "DUP1", "path": "5"}, "3085": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "SWAP2", "path": "5"}, "3086": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "SUB", "path": "5"}, "3087": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "SWAP1", "path": "5"}, "3088": {"fn": "Registry.setTargetConcentration", "offset": [783, 803], "op": "REVERT", "path": "5"}, "3089": {"offset": [737, 814], "op": "JUMPDEST", "path": "5"}, "3090": {"op": "PUSH1", "value": "0x1"}, "3092": {"op": "PUSH1", "value": "0x1"}, "3094": {"op": "PUSH1", "value": "0xA0"}, "3096": {"op": "SHL"}, "3097": {"op": "SUB"}, "3098": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "SWAP1", "path": "5", "statement": 31}, "3099": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "SWAP2", "path": "5"}, "3100": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "AND", "path": "5"}, "3101": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "PUSH1", "path": "5", "value": "0x0"}, "3103": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "SWAP1", "path": "5"}, "3104": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "DUP2", "path": "5"}, "3105": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "MSTORE", "path": "5"}, "3106": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1950], "op": "PUSH1", "path": "5", "value": "0x5"}, "3108": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "PUSH1", "path": "5", "value": "0x20"}, "3110": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "MSTORE", "path": "5"}, "3111": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "PUSH1", "path": "5", "value": "0x40"}, "3113": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "SWAP1", "path": "5"}, "3114": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1957], "op": "KECCAK256", "path": "5"}, "3115": {"fn": "Registry.setTargetConcentration", "offset": [1931, 1967], "op": "SSTORE", "path": "5"}, "3116": {"fn": "Registry.setTargetConcentration", "jump": "o", "offset": [1818, 1974], "op": "JUMP", "path": "5"}, "3117": {"op": "JUMPDEST"}, "3118": {"op": "PUSH1", "value": "0x0"}, "3120": {"op": "PUSH1", "value": "0x20"}, "3122": {"op": "DUP3"}, "3123": {"op": "DUP5"}, "3124": {"op": "SUB"}, "3125": {"op": "SLT"}, "3126": {"op": "ISZERO"}, "3127": {"op": "PUSH2", "value": "0xC3F"}, "3130": {"op": "JUMPI"}, "3131": {"op": "PUSH1", "value": "0x0"}, "3133": {"op": "DUP1"}, "3134": {"op": "REVERT"}, "3135": {"op": "JUMPDEST"}, "3136": {"op": "POP"}, "3137": {"op": "CALLDATALOAD"}, "3138": {"op": "SWAP2"}, "3139": {"op": "SWAP1"}, "3140": {"op": "POP"}, "3141": {"jump": "o", "op": "JUMP"}, "3142": {"op": "JUMPDEST"}, "3143": {"op": "PUSH1", "value": "0x20"}, "3145": {"op": "DUP1"}, "3146": {"op": "DUP3"}, "3147": {"op": "MSTORE"}, "3148": {"op": "DUP3"}, "3149": {"op": "MLOAD"}, "3150": {"op": "DUP3"}, "3151": {"op": "DUP3"}, "3152": {"op": "ADD"}, "3153": {"op": "DUP2"}, "3154": {"op": "SWAP1"}, "3155": {"op": "MSTORE"}, "3156": {"op": "PUSH1", "value": "0x0"}, "3158": {"op": "SWAP2"}, "3159": {"op": "SWAP1"}, "3160": {"op": "PUSH1", "value": "0x40"}, "3162": {"op": "SWAP1"}, "3163": {"op": "DUP2"}, "3164": {"op": "DUP6"}, "3165": {"op": "ADD"}, "3166": {"op": "SWAP1"}, "3167": {"op": "DUP7"}, "3168": {"op": "DUP5"}, "3169": {"op": "ADD"}, "3170": {"op": "DUP6"}, "3171": {"op": "JUMPDEST"}, "3172": {"op": "DUP3"}, "3173": {"op": "DUP2"}, "3174": {"op": "LT"}, "3175": {"op": "ISZERO"}, "3176": {"op": "PUSH2", "value": "0xC99"}, "3179": {"op": "JUMPI"}, "3180": {"op": "PUSH2", "value": "0xC89"}, "3183": {"op": "DUP5"}, "3184": {"op": "DUP4"}, "3185": {"op": "MLOAD"}, "3186": {"op": "DUP1"}, "3187": {"op": "MLOAD"}, "3188": {"op": "PUSH1", "value": "0x1"}, "3190": {"op": "PUSH1", "value": "0x1"}, "3192": {"op": "PUSH1", "value": "0xA0"}, "3194": {"op": "SHL"}, "3195": {"op": "SUB"}, "3196": {"op": "AND"}, "3197": {"op": "DUP3"}, "3198": {"op": "MSTORE"}, "3199": {"op": "PUSH1", "value": "0x20"}, "3201": {"op": "SWAP1"}, "3202": {"op": "DUP2"}, "3203": {"op": "ADD"}, "3204": {"op": "MLOAD"}, "3205": {"op": "SWAP2"}, "3206": {"op": "ADD"}, "3207": {"op": "MSTORE"}, "3208": {"op": "JUMP"}, "3209": {"op": "JUMPDEST"}, "3210": {"op": "SWAP3"}, "3211": {"op": "DUP5"}, "3212": {"op": "ADD"}, "3213": {"op": "SWAP3"}, "3214": {"op": "SWAP1"}, "3215": {"op": "DUP6"}, "3216": {"op": "ADD"}, "3217": {"op": "SWAP1"}, "3218": {"op": "PUSH1", "value": "0x1"}, "3220": {"op": "ADD"}, "3221": {"op": "PUSH2", "value": "0xC63"}, "3224": {"op": "JUMP"}, "3225": {"op": "JUMPDEST"}, "3226": {"op": "POP"}, "3227": {"op": "SWAP2"}, "3228": {"op": "SWAP8"}, "3229": {"op": "SWAP7"}, "3230": {"op": "POP"}, "3231": {"op": "POP"}, "3232": {"op": "POP"}, "3233": {"op": "POP"}, "3234": {"op": "POP"}, "3235": {"op": "POP"}, "3236": {"op": "POP"}, "3237": {"jump": "o", "op": "JUMP"}, "3238": {"op": "JUMPDEST"}, "3239": {"op": "PUSH4", "value": "0x4E487B71"}, "3244": {"op": "PUSH1", "value": "0xE0"}, "3246": {"op": "SHL"}, "3247": {"op": "PUSH1", "value": "0x0"}, "3249": {"op": "MSTORE"}, "3250": {"op": "PUSH1", "value": "0x41"}, "3252": {"op": "PUSH1", "value": "0x4"}, "3254": {"op": "MSTORE"}, "3255": {"op": "PUSH1", "value": "0x24"}, "3257": {"op": "PUSH1", "value": "0x0"}, "3259": {"op": "REVERT"}, "3260": {"op": "JUMPDEST"}, "3261": {"op": "PUSH1", "value": "0x40"}, "3263": {"op": "DUP1"}, "3264": {"op": "MLOAD"}, "3265": {"op": "SWAP1"}, "3266": {"op": "DUP2"}, "3267": {"op": "ADD"}, "3268": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3277": {"op": "DUP2"}, "3278": {"op": "GT"}, "3279": {"op": "DUP3"}, "3280": {"op": "DUP3"}, "3281": {"op": "LT"}, "3282": {"op": "OR"}, "3283": {"op": "ISZERO"}, "3284": {"op": "PUSH2", "value": "0xCDF"}, "3287": {"op": "JUMPI"}, "3288": {"op": "PUSH2", "value": "0xCDF"}, "3291": {"op": "PUSH2", "value": "0xCA6"}, "3294": {"jump": "i", "op": "JUMP"}, "3295": {"op": "JUMPDEST"}, "3296": {"op": "PUSH1", "value": "0x40"}, "3298": {"op": "MSTORE"}, "3299": {"op": "SWAP1"}, "3300": {"jump": "o", "op": "JUMP"}, "3301": {"op": "JUMPDEST"}, "3302": {"op": "PUSH1", "value": "0x40"}, "3304": {"op": "MLOAD"}, "3305": {"op": "PUSH1", "value": "0x1F"}, "3307": {"op": "DUP3"}, "3308": {"op": "ADD"}, "3309": {"op": "PUSH1", "value": "0x1F"}, "3311": {"op": "NOT"}, "3312": {"op": "AND"}, "3313": {"op": "DUP2"}, "3314": {"op": "ADD"}, "3315": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3324": {"op": "DUP2"}, "3325": {"op": "GT"}, "3326": {"op": "DUP3"}, "3327": {"op": "DUP3"}, "3328": {"op": "LT"}, "3329": {"op": "OR"}, "3330": {"op": "ISZERO"}, "3331": {"op": "PUSH2", "value": "0xD0E"}, "3334": {"op": "JUMPI"}, "3335": {"op": "PUSH2", "value": "0xD0E"}, "3338": {"op": "PUSH2", "value": "0xCA6"}, "3341": {"jump": "i", "op": "JUMP"}, "3342": {"op": "JUMPDEST"}, "3343": {"op": "PUSH1", "value": "0x40"}, "3345": {"op": "MSTORE"}, "3346": {"op": "SWAP2"}, "3347": {"op": "SWAP1"}, "3348": {"op": "POP"}, "3349": {"jump": "o", "op": "JUMP"}, "3350": {"op": "JUMPDEST"}, "3351": {"op": "DUP1"}, "3352": {"op": "CALLDATALOAD"}, "3353": {"op": "PUSH1", "value": "0x1"}, "3355": {"op": "PUSH1", "value": "0x1"}, "3357": {"op": "PUSH1", "value": "0xA0"}, "3359": {"op": "SHL"}, "3360": {"op": "SUB"}, "3361": {"op": "DUP2"}, "3362": {"op": "AND"}, "3363": {"op": "DUP2"}, "3364": {"op": "EQ"}, "3365": {"op": "PUSH2", "value": "0xD2D"}, "3368": {"op": "JUMPI"}, "3369": {"op": "PUSH1", "value": "0x0"}, "3371": {"op": "DUP1"}, "3372": {"op": "REVERT"}, "3373": {"op": "JUMPDEST"}, "3374": {"op": "SWAP2"}, "3375": {"op": "SWAP1"}, "3376": {"op": "POP"}, "3377": {"jump": "o", "op": "JUMP"}, "3378": {"op": "JUMPDEST"}, "3379": {"op": "PUSH1", "value": "0x0"}, "3381": {"op": "PUSH1", "value": "0x20"}, "3383": {"op": "DUP1"}, "3384": {"op": "DUP4"}, "3385": {"op": "DUP6"}, "3386": {"op": "SUB"}, "3387": {"op": "SLT"}, "3388": {"op": "ISZERO"}, "3389": {"op": "PUSH2", "value": "0xD45"}, "3392": {"op": "JUMPI"}, "3393": {"op": "PUSH1", "value": "0x0"}, "3395": {"op": "DUP1"}, "3396": {"op": "REVERT"}, "3397": {"op": "JUMPDEST"}, "3398": {"op": "DUP3"}, "3399": {"op": "CALLDATALOAD"}, "3400": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3409": {"op": "DUP1"}, "3410": {"op": "DUP3"}, "3411": {"op": "GT"}, "3412": {"op": "ISZERO"}, "3413": {"op": "PUSH2", "value": "0xD5D"}, "3416": {"op": "JUMPI"}, "3417": {"op": "PUSH1", "value": "0x0"}, "3419": {"op": "DUP1"}, "3420": {"op": "REVERT"}, "3421": {"op": "JUMPDEST"}, "3422": {"op": "DUP2"}, "3423": {"op": "DUP6"}, "3424": {"op": "ADD"}, "3425": {"op": "SWAP2"}, "3426": {"op": "POP"}, "3427": {"op": "DUP6"}, "3428": {"op": "PUSH1", "value": "0x1F"}, "3430": {"op": "DUP4"}, "3431": {"op": "ADD"}, "3432": {"op": "SLT"}, "3433": {"op": "PUSH2", "value": "0xD71"}, "3436": {"op": "JUMPI"}, "3437": {"op": "PUSH1", "value": "0x0"}, "3439": {"op": "DUP1"}, "3440": {"op": "REVERT"}, "3441": {"op": "JUMPDEST"}, "3442": {"op": "DUP2"}, "3443": {"op": "CALLDATALOAD"}, "3444": {"op": "DUP2"}, "3445": {"op": "DUP2"}, "3446": {"op": "GT"}, "3447": {"op": "ISZERO"}, "3448": {"op": "PUSH2", "value": "0xD83"}, "3451": {"op": "JUMPI"}, "3452": {"op": "PUSH2", "value": "0xD83"}, "3455": {"op": "PUSH2", "value": "0xCA6"}, "3458": {"jump": "i", "op": "JUMP"}, "3459": {"op": "JUMPDEST"}, "3460": {"op": "PUSH2", "value": "0xD91"}, "3463": {"op": "DUP5"}, "3464": {"op": "DUP3"}, "3465": {"op": "PUSH1", "value": "0x5"}, "3467": {"op": "SHL"}, "3468": {"op": "ADD"}, "3469": {"op": "PUSH2", "value": "0xCE5"}, "3472": {"jump": "i", "op": "JUMP"}, "3473": {"op": "JUMPDEST"}, "3474": {"op": "DUP2"}, "3475": {"op": "DUP2"}, "3476": {"op": "MSTORE"}, "3477": {"op": "DUP5"}, "3478": {"op": "DUP2"}, "3479": {"op": "ADD"}, "3480": {"op": "SWAP3"}, "3481": {"op": "POP"}, "3482": {"op": "PUSH1", "value": "0x6"}, "3484": {"op": "SWAP2"}, "3485": {"op": "SWAP1"}, "3486": {"op": "SWAP2"}, "3487": {"op": "SHL"}, "3488": {"op": "DUP4"}, "3489": {"op": "ADD"}, "3490": {"op": "DUP5"}, "3491": {"op": "ADD"}, "3492": {"op": "SWAP1"}, "3493": {"op": "DUP8"}, "3494": {"op": "DUP3"}, "3495": {"op": "GT"}, "3496": {"op": "ISZERO"}, "3497": {"op": "PUSH2", "value": "0xDB1"}, "3500": {"op": "JUMPI"}, "3501": {"op": "PUSH1", "value": "0x0"}, "3503": {"op": "DUP1"}, "3504": {"op": "REVERT"}, "3505": {"op": "JUMPDEST"}, "3506": {"op": "SWAP3"}, "3507": {"op": "DUP5"}, "3508": {"op": "ADD"}, "3509": {"op": "SWAP3"}, "3510": {"op": "JUMPDEST"}, "3511": {"op": "DUP2"}, "3512": {"op": "DUP5"}, "3513": {"op": "LT"}, "3514": {"op": "ISZERO"}, "3515": {"op": "PUSH2", "value": "0xDFB"}, "3518": {"op": "JUMPI"}, "3519": {"op": "PUSH1", "value": "0x40"}, "3521": {"op": "DUP5"}, "3522": {"op": "DUP10"}, "3523": {"op": "SUB"}, "3524": {"op": "SLT"}, "3525": {"op": "ISZERO"}, "3526": {"op": "PUSH2", "value": "0xDCF"}, "3529": {"op": "JUMPI"}, "3530": {"op": "PUSH1", "value": "0x0"}, "3532": {"op": "DUP1"}, "3533": {"op": "DUP2"}, "3534": {"op": "REVERT"}, "3535": {"op": "JUMPDEST"}, "3536": {"op": "PUSH2", "value": "0xDD7"}, "3539": {"op": "PUSH2", "value": "0xCBC"}, "3542": {"jump": "i", "op": "JUMP"}, "3543": {"op": "JUMPDEST"}, "3544": {"op": "PUSH2", "value": "0xDE0"}, "3547": {"op": "DUP6"}, "3548": {"op": "PUSH2", "value": "0xD16"}, "3551": {"jump": "i", "op": "JUMP"}, "3552": {"op": "JUMPDEST"}, "3553": {"op": "DUP2"}, "3554": {"op": "MSTORE"}, "3555": {"op": "DUP5"}, "3556": {"op": "DUP7"}, "3557": {"op": "ADD"}, "3558": {"op": "CALLDATALOAD"}, "3559": {"op": "DUP7"}, "3560": {"op": "DUP3"}, "3561": {"op": "ADD"}, "3562": {"op": "MSTORE"}, "3563": {"op": "DUP4"}, "3564": {"op": "MSTORE"}, "3565": {"op": "PUSH1", "value": "0x40"}, "3567": {"op": "SWAP1"}, "3568": {"op": "SWAP4"}, "3569": {"op": "ADD"}, "3570": {"op": "SWAP3"}, "3571": {"op": "SWAP2"}, "3572": {"op": "DUP5"}, "3573": {"op": "ADD"}, "3574": {"op": "SWAP2"}, "3575": {"op": "PUSH2", "value": "0xDB6"}, "3578": {"op": "JUMP"}, "3579": {"op": "JUMPDEST"}, "3580": {"op": "SWAP8"}, "3581": {"op": "SWAP7"}, "3582": {"op": "POP"}, "3583": {"op": "POP"}, "3584": {"op": "POP"}, "3585": {"op": "POP"}, "3586": {"op": "POP"}, "3587": {"op": "POP"}, "3588": {"op": "POP"}, "3589": {"jump": "o", "op": "JUMP"}, "3590": {"op": "JUMPDEST"}, "3591": {"op": "PUSH1", "value": "0x0"}, "3593": {"op": "PUSH1", "value": "0x20"}, "3595": {"op": "DUP3"}, "3596": {"op": "DUP5"}, "3597": {"op": "SUB"}, "3598": {"op": "SLT"}, "3599": {"op": "ISZERO"}, "3600": {"op": "PUSH2", "value": "0xE18"}, "3603": {"op": "JUMPI"}, "3604": {"op": "PUSH1", "value": "0x0"}, "3606": {"op": "DUP1"}, "3607": {"op": "REVERT"}, "3608": {"op": "JUMPDEST"}, "3609": {"op": "PUSH2", "value": "0xE21"}, "3612": {"op": "DUP3"}, "3613": {"op": "PUSH2", "value": "0xD16"}, "3616": {"jump": "i", "op": "JUMP"}, "3617": {"op": "JUMPDEST"}, "3618": {"op": "SWAP4"}, "3619": {"op": "SWAP3"}, "3620": {"op": "POP"}, "3621": {"op": "POP"}, "3622": {"op": "POP"}, "3623": {"jump": "o", "op": "JUMP"}, "3624": {"op": "JUMPDEST"}, "3625": {"op": "PUSH1", "value": "0x40"}, "3627": {"op": "DUP1"}, "3628": {"op": "DUP3"}, "3629": {"op": "MSTORE"}, "3630": {"op": "DUP4"}, "3631": {"op": "MLOAD"}, "3632": {"op": "SWAP1"}, "3633": {"op": "DUP3"}, "3634": {"op": "ADD"}, "3635": {"op": "DUP2"}, "3636": {"op": "SWAP1"}, "3637": {"op": "MSTORE"}, "3638": {"op": "PUSH1", "value": "0x0"}, "3640": {"op": "SWAP1"}, "3641": {"op": "PUSH1", "value": "0x20"}, "3643": {"op": "SWAP1"}, "3644": {"op": "PUSH1", "value": "0x60"}, "3646": {"op": "DUP5"}, "3647": {"op": "ADD"}, "3648": {"op": "SWAP1"}, "3649": {"op": "DUP3"}, "3650": {"op": "DUP8"}, "3651": {"op": "ADD"}, "3652": {"op": "DUP5"}, "3653": {"op": "JUMPDEST"}, "3654": {"op": "DUP3"}, "3655": {"op": "DUP2"}, "3656": {"op": "LT"}, "3657": {"op": "ISZERO"}, "3658": {"op": "PUSH2", "value": "0xE6A"}, "3661": {"op": "JUMPI"}, "3662": {"op": "DUP2"}, "3663": {"op": "MLOAD"}, "3664": {"op": "PUSH1", "value": "0x1"}, "3666": {"op": "PUSH1", "value": "0x1"}, "3668": {"op": "PUSH1", "value": "0xA0"}, "3670": {"op": "SHL"}, "3671": {"op": "SUB"}, "3672": {"op": "AND"}, "3673": {"op": "DUP5"}, "3674": {"op": "MSTORE"}, "3675": {"op": "SWAP3"}, "3676": {"op": "DUP5"}, "3677": {"op": "ADD"}, "3678": {"op": "SWAP3"}, "3679": {"op": "SWAP1"}, "3680": {"op": "DUP5"}, "3681": {"op": "ADD"}, "3682": {"op": "SWAP1"}, "3683": {"op": "PUSH1", "value": "0x1"}, "3685": {"op": "ADD"}, "3686": {"op": "PUSH2", "value": "0xE45"}, "3689": {"op": "JUMP"}, "3690": {"op": "JUMPDEST"}, "3691": {"op": "POP"}, "3692": {"op": "POP"}, "3693": {"op": "POP"}, "3694": {"op": "DUP4"}, "3695": {"op": "DUP2"}, "3696": {"op": "SUB"}, "3697": {"op": "DUP3"}, "3698": {"op": "DUP6"}, "3699": {"op": "ADD"}, "3700": {"op": "MSTORE"}, "3701": {"op": "DUP5"}, "3702": {"op": "MLOAD"}, "3703": {"op": "DUP1"}, "3704": {"op": "DUP3"}, "3705": {"op": "MSTORE"}, "3706": {"op": "DUP6"}, "3707": {"op": "DUP4"}, "3708": {"op": "ADD"}, "3709": {"op": "SWAP2"}, "3710": {"op": "DUP4"}, "3711": {"op": "ADD"}, "3712": {"op": "SWAP1"}, "3713": {"op": "PUSH1", "value": "0x0"}, "3715": {"op": "JUMPDEST"}, "3716": {"op": "DUP2"}, "3717": {"op": "DUP2"}, "3718": {"op": "LT"}, "3719": {"op": "ISZERO"}, "3720": {"op": "PUSH2", "value": "0xE9F"}, "3723": {"op": "JUMPI"}, "3724": {"op": "DUP4"}, "3725": {"op": "MLOAD"}, "3726": {"op": "DUP4"}, "3727": {"op": "MSTORE"}, "3728": {"op": "SWAP3"}, "3729": {"op": "DUP5"}, "3730": {"op": "ADD"}, "3731": {"op": "SWAP3"}, "3732": {"op": "SWAP2"}, "3733": {"op": "DUP5"}, "3734": {"op": "ADD"}, "3735": {"op": "SWAP2"}, "3736": {"op": "PUSH1", "value": "0x1"}, "3738": {"op": "ADD"}, "3739": {"op": "PUSH2", "value": "0xE83"}, "3742": {"op": "JUMP"}, "3743": {"op": "JUMPDEST"}, "3744": {"op": "POP"}, "3745": {"op": "SWAP1"}, "3746": {"op": "SWAP8"}, "3747": {"op": "SWAP7"}, "3748": {"op": "POP"}, "3749": {"op": "POP"}, "3750": {"op": "POP"}, "3751": {"op": "POP"}, "3752": {"op": "POP"}, "3753": {"op": "POP"}, "3754": {"op": "POP"}, "3755": {"jump": "o", "op": "JUMP"}, "3756": {"op": "JUMPDEST"}, "3757": {"op": "PUSH1", "value": "0x0"}, "3759": {"op": "DUP1"}, "3760": {"op": "PUSH1", "value": "0x0"}, "3762": {"op": "PUSH1", "value": "0x60"}, "3764": {"op": "DUP5"}, "3765": {"op": "DUP7"}, "3766": {"op": "SUB"}, "3767": {"op": "SLT"}, "3768": {"op": "ISZERO"}, "3769": {"op": "PUSH2", "value": "0xEC1"}, "3772": {"op": "JUMPI"}, "3773": {"op": "PUSH1", "value": "0x0"}, "3775": {"op": "DUP1"}, "3776": {"op": "REVERT"}, "3777": {"op": "JUMPDEST"}, "3778": {"op": "PUSH2", "value": "0xECA"}, "3781": {"op": "DUP5"}, "3782": {"op": "PUSH2", "value": "0xD16"}, "3785": {"jump": "i", "op": "JUMP"}, "3786": {"op": "JUMPDEST"}, "3787": {"op": "SWAP3"}, "3788": {"op": "POP"}, "3789": {"op": "PUSH2", "value": "0xED8"}, "3792": {"op": "PUSH1", "value": "0x20"}, "3794": {"op": "DUP6"}, "3795": {"op": "ADD"}, "3796": {"op": "PUSH2", "value": "0xD16"}, "3799": {"jump": "i", "op": "JUMP"}, "3800": {"op": "JUMPDEST"}, "3801": {"op": "SWAP2"}, "3802": {"op": "POP"}, "3803": {"op": "PUSH1", "value": "0x40"}, "3805": {"op": "DUP5"}, "3806": {"op": "ADD"}, "3807": {"op": "CALLDATALOAD"}, "3808": {"op": "SWAP1"}, "3809": {"op": "POP"}, "3810": {"op": "SWAP3"}, "3811": {"op": "POP"}, "3812": {"op": "SWAP3"}, "3813": {"op": "POP"}, "3814": {"op": "SWAP3"}, "3815": {"jump": "o", "op": "JUMP"}, "3816": {"op": "JUMPDEST"}, "3817": {"op": "PUSH1", "value": "0x0"}, "3819": {"op": "DUP1"}, "3820": {"op": "PUSH1", "value": "0x40"}, "3822": {"op": "DUP4"}, "3823": {"op": "DUP6"}, "3824": {"op": "SUB"}, "3825": {"op": "SLT"}, "3826": {"op": "ISZERO"}, "3827": {"op": "PUSH2", "value": "0xEFB"}, "3830": {"op": "JUMPI"}, "3831": {"op": "PUSH1", "value": "0x0"}, "3833": {"op": "DUP1"}, "3834": {"op": "REVERT"}, "3835": {"op": "JUMPDEST"}, "3836": {"op": "PUSH2", "value": "0xF04"}, "3839": {"op": "DUP4"}, "3840": {"op": "PUSH2", "value": "0xD16"}, "3843": {"jump": "i", "op": "JUMP"}, "3844": {"op": "JUMPDEST"}, "3845": {"op": "SWAP5"}, "3846": {"op": "PUSH1", "value": "0x20"}, "3848": {"op": "SWAP4"}, "3849": {"op": "SWAP1"}, "3850": {"op": "SWAP4"}, "3851": {"op": "ADD"}, "3852": {"op": "CALLDATALOAD"}, "3853": {"op": "SWAP4"}, "3854": {"op": "POP"}, "3855": {"op": "POP"}, "3856": {"op": "POP"}, "3857": {"jump": "o", "op": "JUMP"}, "3858": {"op": "JUMPDEST"}, "3859": {"op": "PUSH4", "value": "0x4E487B71"}, "3864": {"op": "PUSH1", "value": "0xE0"}, "3866": {"op": "SHL"}, "3867": {"op": "PUSH1", "value": "0x0"}, "3869": {"op": "MSTORE"}, "3870": {"op": "PUSH1", "value": "0x11"}, "3872": {"op": "PUSH1", "value": "0x4"}, "3874": {"op": "MSTORE"}, "3875": {"op": "PUSH1", "value": "0x24"}, "3877": {"op": "PUSH1", "value": "0x0"}, "3879": {"op": "REVERT"}, "3880": {"op": "JUMPDEST"}, "3881": {"op": "PUSH1", "value": "0x0"}, "3883": {"op": "DUP3"}, "3884": {"op": "DUP3"}, "3885": {"op": "LT"}, "3886": {"op": "ISZERO"}, "3887": {"op": "PUSH2", "value": "0xF3A"}, "3890": {"op": "JUMPI"}, "3891": {"op": "PUSH2", "value": "0xF3A"}, "3894": {"op": "PUSH2", "value": "0xF12"}, "3897": {"jump": "i", "op": "JUMP"}, "3898": {"op": "JUMPDEST"}, "3899": {"op": "POP"}, "3900": {"op": "SUB"}, "3901": {"op": "SWAP1"}, "3902": {"jump": "o", "op": "JUMP"}, "3903": {"op": "JUMPDEST"}, "3904": {"op": "PUSH4", "value": "0x4E487B71"}, "3909": {"op": "PUSH1", "value": "0xE0"}, "3911": {"op": "SHL"}, "3912": {"op": "PUSH1", "value": "0x0"}, "3914": {"op": "MSTORE"}, "3915": {"op": "PUSH1", "value": "0x32"}, "3917": {"op": "PUSH1", "value": "0x4"}, "3919": {"op": "MSTORE"}, "3920": {"op": "PUSH1", "value": "0x24"}, "3922": {"op": "PUSH1", "value": "0x0"}, "3924": {"op": "REVERT"}, "3925": {"op": "JUMPDEST"}, "3926": {"op": "PUSH1", "value": "0x0"}, "3928": {"op": "PUSH1", "value": "0x20"}, "3930": {"op": "DUP3"}, "3931": {"op": "DUP5"}, "3932": {"op": "SUB"}, "3933": {"op": "SLT"}, "3934": {"op": "ISZERO"}, "3935": {"op": "PUSH2", "value": "0xF67"}, "3938": {"op": "JUMPI"}, "3939": {"op": "PUSH1", "value": "0x0"}, "3941": {"op": "DUP1"}, "3942": {"op": "REVERT"}, "3943": {"op": "JUMPDEST"}, "3944": {"op": "POP"}, "3945": {"op": "MLOAD"}, "3946": {"op": "SWAP2"}, "3947": {"op": "SWAP1"}, "3948": {"op": "POP"}, "3949": {"jump": "o", "op": "JUMP"}, "3950": {"op": "JUMPDEST"}, "3951": {"op": "PUSH1", "value": "0x0"}, "3953": {"op": "DUP2"}, "3954": {"op": "PUSH1", "value": "0x0"}, "3956": {"op": "NOT"}, "3957": {"op": "DIV"}, "3958": {"op": "DUP4"}, "3959": {"op": "GT"}, "3960": {"op": "DUP3"}, "3961": {"op": "ISZERO"}, "3962": {"op": "ISZERO"}, "3963": {"op": "AND"}, "3964": {"op": "ISZERO"}, "3965": {"op": "PUSH2", "value": "0xF88"}, "3968": {"op": "JUMPI"}, "3969": {"op": "PUSH2", "value": "0xF88"}, "3972": {"op": "PUSH2", "value": "0xF12"}, "3975": {"jump": "i", "op": "JUMP"}, "3976": {"op": "JUMPDEST"}, "3977": {"op": "POP"}, "3978": {"op": "MUL"}, "3979": {"op": "SWAP1"}, "3980": {"jump": "o", "op": "JUMP"}, "3981": {"op": "JUMPDEST"}, "3982": {"op": "PUSH1", "value": "0x0"}, "3984": {"op": "DUP3"}, "3985": {"op": "PUSH2", "value": "0xFAA"}, "3988": {"op": "JUMPI"}, "3989": {"op": "PUSH4", "value": "0x4E487B71"}, "3994": {"op": "PUSH1", "value": "0xE0"}, "3996": {"op": "SHL"}, "3997": {"op": "PUSH1", "value": "0x0"}, "3999": {"op": "MSTORE"}, "4000": {"op": "PUSH1", "value": "0x12"}, "4002": {"op": "PUSH1", "value": "0x4"}, "4004": {"op": "MSTORE"}, "4005": {"op": "PUSH1", "value": "0x24"}, "4007": {"op": "PUSH1", "value": "0x0"}, "4009": {"op": "REVERT"}, "4010": {"op": "JUMPDEST"}, "4011": {"op": "POP"}, "4012": {"op": "DIV"}, "4013": {"op": "SWAP1"}, "4014": {"jump": "o", "op": "JUMP"}, "4015": {"op": "JUMPDEST"}, "4016": {"op": "PUSH1", "value": "0x0"}, "4018": {"op": "DUP1"}, "4019": {"op": "DUP4"}, "4020": {"op": "SLT"}, "4021": {"op": "DUP1"}, "4022": {"op": "ISZERO"}, "4023": {"op": "PUSH1", "value": "0x1"}, "4025": {"op": "PUSH1", "value": "0xFF"}, "4027": {"op": "SHL"}, "4028": {"op": "DUP6"}, "4029": {"op": "ADD"}, "4030": {"op": "DUP5"}, "4031": {"op": "SLT"}, "4032": {"op": "AND"}, "4033": {"op": "ISZERO"}, "4034": {"op": "PUSH2", "value": "0xFCD"}, "4037": {"op": "JUMPI"}, "4038": {"op": "PUSH2", "value": "0xFCD"}, "4041": {"op": "PUSH2", "value": "0xF12"}, "4044": {"jump": "i", "op": "JUMP"}, "4045": {"op": "JUMPDEST"}, "4046": {"op": "PUSH1", "value": "0x1"}, "4048": {"op": "PUSH1", "value": "0x1"}, "4050": {"op": "PUSH1", "value": "0xFF"}, "4052": {"op": "SHL"}, "4053": {"op": "SUB"}, "4054": {"op": "DUP5"}, "4055": {"op": "ADD"}, "4056": {"op": "DUP4"}, "4057": {"op": "SGT"}, "4058": {"op": "DUP2"}, "4059": {"op": "AND"}, "4060": {"op": "ISZERO"}, "4061": {"op": "PUSH2", "value": "0xFE8"}, "4064": {"op": "JUMPI"}, "4065": {"op": "PUSH2", "value": "0xFE8"}, "4068": {"op": "PUSH2", "value": "0xF12"}, "4071": {"jump": "i", "op": "JUMP"}, "4072": {"op": "JUMPDEST"}, "4073": {"op": "POP"}, "4074": {"op": "POP"}, "4075": {"op": "SUB"}, "4076": {"op": "SWAP1"}, "4077": {"jump": "o", "op": "JUMP"}, "4078": {"op": "JUMPDEST"}, "4079": {"op": "PUSH1", "value": "0x0"}, "4081": {"op": "DUP3"}, "4082": {"op": "NOT"}, "4083": {"op": "DUP3"}, "4084": {"op": "GT"}, "4085": {"op": "ISZERO"}, "4086": {"op": "PUSH2", "value": "0x1001"}, "4089": {"op": "JUMPI"}, "4090": {"op": "PUSH2", "value": "0x1001"}, "4093": {"op": "PUSH2", "value": "0xF12"}, "4096": {"jump": "i", "op": "JUMP"}, "4097": {"op": "JUMPDEST"}, "4098": {"op": "POP"}, "4099": {"op": "ADD"}, "4100": {"op": "SWAP1"}, "4101": {"jump": "o", "op": "JUMP"}}, "sha1": "399a2f53a45ac142c7324d2e4cfbd40414c041ef", "source": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../interfaces/ITokenPool.sol\";\nimport \"./TokenPool.sol\";\n\ncontract Registry {\n//Variables\naddress public owner;\naddress[] public tokenPools;\naddress public factory; \nmapping (address => address) public tokenToPool;\nmapping (address => address) public PoolToToken;\nmapping (address => uint256) public PoolToConcentration;\nuint256 constant PRECISION = 1e6;\n\n\n//Structs\nstruct Rebalancing {\n    address pool;\n    uint256 amt;\n}\n\n//Errors\nerror Error_Unauthorized();\n\n//Events\nevent ReservePoolDeployed(\n        address indexed poolAddress,\n        address tokenAddress\n    );\n\n//Modifier\nmodifier onlyOwner() {\n        if (msg.sender != owner) {\n            revert Error_Unauthorized();\n        }\n        _;\n    }\n//Constructor\n    constructor(){\n       owner = msg.sender;\n    }\n\n/**\n@dev function to set the factory address\n@param _factory (address of the factory)\n */\n    function setFactory(address _factory) external onlyOwner {\n        factory = _factory;\n    }\n\n/**\n@dev function to add TokenPool to tokenPool array and various mappings\n@param _tokenPool - address of tokenPool\n@param _token - address of token\n@param concentration - value of target concentration \n */\n    function addTokenPool(address _tokenPool, address _token, uint256 concentration) public {\n        require(msg.sender == factory, \"Only the factory can add token pools\");\n        tokenPools.push(_tokenPool);\n        tokenToPool[_token] = _tokenPool;\n        PoolToToken[_tokenPool] = _token;\n        PoolToConcentration[_tokenPool] = concentration;\n    }\n\n/** \n@dev function to update the target concentration of a specific pool \n@param _pool - address of tokenPool\n@param _target - value of target concentration\n */\n    function setTargetConcentration(address _pool, uint256 _target)\n        external\n        onlyOwner\n    {\n        PoolToConcentration[_pool] = _target;\n    }\n\n/**\n@dev function to get the total USD value of all assets in the protocol\niterates through all the pools to get their usd value and adds all the values together\n */\n\n    function getTotalAUMinUSD() public view returns (uint256) {\n        uint256 total = 0;\n        uint256 len = tokenPools.length;\n        for (uint i = 0; i < len;) {\n            address pool = tokenPools[i];  \n            uint256 poolBalance = ITokenPool(pool).getPoolValue();\n            total += poolBalance;\n            unchecked{++i;}\n        }\n        return total;\n    }\n\n/** \n@dev function to get the pools to withdraw from and the amount to withdraw from each pool\n@param _amount - amount in usd to be withdrawn\n */\n    function tokensToWithdraw(uint256 _amount) public view returns (address[] memory, uint256[] memory){\n        (address[] memory pools, uint256[] memory tokenAmt) = checkWithdraw(_amount);\n        return (pools, tokenAmt);\n    }\n\n\n/**\n@dev function that finds which pools need to be rebalanced through a withdraw\n@param _amount - how much usd is to be withdrawn\nCalculates new aum and how much money has to be added/removed from pool to reach the target concentration\nChecks which pool have to have money removed (and how much) and adds them to the array \n */\n    function liquidityCheck(uint256 _amount) public view returns(Rebalancing[] memory)  {\n        uint len = tokenPools.length;\n        Rebalancing[] memory withdraw = new Rebalancing[](len);\n        uint aum = getTotalAUMinUSD();\n        uint newAUM = aum - _amount;\n        for (uint i = 0; i < len;) {\n            address pool = tokenPools[i];\n            uint256 poolBalance = ITokenPool(pool).getPoolValue();\n            uint256 target = PoolToConcentration[pool];\n            uint256 poolTarget = newAUM*target/PRECISION;\n            if(poolBalance > poolTarget){\n                uint256 amt = poolBalance - poolTarget;\n                withdraw[i]=(Rebalancing({pool: pool, amt: amt}));\n            }\n            else{\n                withdraw[i]=(Rebalancing({pool: pool, amt: 0}));\n            }\n            unchecked{++i;}\n        }\n        return withdraw;\n        }\n    \n/**\n@dev function that takes the rebalancing array from liquidityCheck and returns the pools to withdraw from\nand how much to withdraw from each pool\nChecks total amount to be withdraw, finds pools with greatest concentration disparity and takes from those first\n@param _amount - amount to be withdrawn\n */\n    function checkWithdraw(uint _amount)public view returns (address[] memory, uint256[] memory){\n        Rebalancing[] memory withdraw = liquidityCheck(_amount);\n        uint256 len = withdraw.length;\n        address[] memory pool = new address[](len);\n        uint[] memory tokenamt = new uint[](len);\n        uint total = 0;\n        for (uint i; i<len;){\n            (Rebalancing memory max, uint index) = findMax(withdraw);\n            if ((total<_amount)&&(total + max.amt > _amount)){\n                tokenamt[i]= (_amount - total);\n                pool[i] = (max.pool);\n                total += tokenamt[i];\n            }\n            else if ((total<_amount)&&(total + max.amt <= _amount)){\n                tokenamt[i] = (max.amt);\n                pool[i] = (max.pool);\n                total += max.amt;\n                 withdraw[index].amt = 0;\n            }\n            unchecked{++i;}\n           }\n        return (pool, tokenamt);\n    }\n/**\n@dev helper function that finds which pool has to have the most money withdrawn\n@param _rebalance - rebalancing array \n */\n        function findMax (Rebalancing[] memory _rebalance) public pure returns (Rebalancing memory, uint256){ \n        uint256 len = _rebalance.length;\n        uint max = 0;\n        uint index = 0;\n        for (uint i = 0; i<len;){\n            if (max < _rebalance[i].amt){\n                max = _rebalance[i].amt;\n                index = i;\n            }\n            unchecked{++i;}\n        }\n        return (_rebalance[index],index);\n    }\n/**\n@dev function to get the current concentration of a specific pool\n@param pool - pool to fnd concentration of \n */\n\n    function getConcentration(address pool) view public returns(uint){\n            uint256 total = getTotalAUMinUSD();\n            uint256 poolBalance = ITokenPool(pool).getPoolValue();       \n            return total == 0 ? 0 :poolBalance*PRECISION/total;\n        }\n/**\n@dev function to get the concentration of certain pool when a certain amount is added to the pool\n@param pool - pool to find concentration of\n@param amount - amount to be added to pool\n */\n    function getNewConcentration (address pool, uint amount) view public returns (uint){    \n            uint256 total = getTotalAUMinUSD();\n            uint256 poolBalance = ITokenPool(pool).getPoolValue() + amount;       \n            return total == 0 ? 0 :poolBalance*PRECISION/total;\n            \n        }\n/**\n@dev checks if any pool has a concentration more than 5% above/below target concentration\n */\n    function checkDeposit() public view returns (bool){\n        uint len = tokenPools.length;\n        for (uint i = 0; i < len;) {\n            address pool = tokenPools[i];\n            uint currentConcentration = getConcentration(pool);\n            int diff = int(currentConcentration) - int(PoolToConcentration[pool]);\n            if (diff>500000 ){\n                return (true);\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n    \n    // function checkDeposit() public returns (Rebalancing[] memory, uint){\n    //     uint len = tokenPools.length;\n    //     Rebalancing[] memory deposit = new Rebalancing[](len);\n    //     uint aum = getTotalAUMinUSD();\n    //     uint total = 0;\n    //     bool severe; \n    //     for (uint i = 0; i < len;) {\n    //         address pool = tokenPools[i];\n    //         uint256 poolBalance = ITokenPool(pool).getPoolValue();\n    //         uint256 target = PoolToConcentration[pool];\n    //         uint256 poolTarget = aum*target/PRECISION;\n    //         if(poolBalance < poolTarget){\n    //             uint256 amt = poolBalance - poolTarget;\n    //             deposit[i]=(Rebalancing({pool: pool, amt: amt}));\n    //             total += amt;\n    //         }\n    //         else{\n    //             deposit[i]=(Rebalancing({pool: pool, amt: 0}));\n    //         }\n    //         unchecked{++i;}\n    //     }\n    //     return (deposit,total);\n        \n    // }\n\n    }\n    \n\n", "sourceMap": "179:8193:5:-:0;;;850:47;;;;;;;;;-1:-1:-1;872:5:5;:18;;-1:-1:-1;;;;;;872:18:5;880:10;872:18;;;179:8193;;;;;;", "sourcePath": "contracts/Registry.sol", "type": "contract", "deployment": {"address": "0x9f1D8e3d037124a5145c0a64e5A2D5CF1e151e3b", "chainid": "5", "blockHeight": 7566779}}